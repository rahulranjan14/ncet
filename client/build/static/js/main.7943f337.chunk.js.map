{"version":3,"sources":["backend.js","apiCalls/auth.js","customRoutes/AdminRoute.js","components/header/NavigationBar.js","components/footer/FooterBar.js","components/base/Base.js","pages/adminDashboard/AdminDashboardPage.js","apiCalls/adminApis.js","pages/adminDashboard/CreateTestPage.js","components/loader/LoadingScreen.js","pages/adminDashboard/ViewAllSubmissionsPage.js","pages/adminDashboard/ViewSubmissionsByTest.js","components/testCard/AdminTestCard.js","pages/adminDashboard/ViewAllTestsPage.js","components/testCard/DeleteTestCard.js","pages/adminDashboard/DeleteTestsPage.js","components/testCard/TestCard.js","pages/homepage/homepageStyle.js","assets/ncetlogobg1.png","components/collegeInfo/CollegeInfo.js","pages/homepage/HomePage.js","pages/signup/Signup.js","pages/signin/Signin.js","apiCalls/userApis.js","pages/userpage/SubmitTest.js","Routes.js","index.js"],"names":["API","process","isAuthenticated","window","localStorage","getItem","JSON","parse","AdminRoute","Component","component","rest","render","props","user","role","to","pathname","state","from","location","withRouter","Navbar","collapseOnSelect","expand","bg","variant","Container","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","apply","Link","onClick","next","removeItem","fetch","method","then","response","console","log","catch","err","signout","FooterBar","fluid","Row","Col","lg","md","sm","xs","size","color","style","marginRight","marginLeft","display","justifyContent","alignItems","Base","children","AdminDashboardPage","marginTop","marginBottom","flexDirection","Button","minWidth","require","getSubmissions","userId","token","testId","headers","Accept","Authorization","body","stringify","json","CreateTestPage","useState","name","description","startTime","endTime","duration","testDetails","setTestDetails","questions","setQuestions","answers","setAnswers","testCreationSuccess","setTestCreationSuccess","handleCloseAfterSubmit","handleChange","event","target","value","submitTestDetails","preventDefault","details","submitTest","_id","data","Header","Form","Group","controlId","Label","Control","type","placeholder","onChange","fontSize","e","file","Promise","resolve","reject","fileReader","FileReader","readAsArrayBuffer","onload","bufferArray","result","wb","XLSX","wsname","SheetNames","ws","Sheets","sheet_to_json","onerror","error","d","questionsLocal","answersLocal","i","length","temp","no","text","a","b","c","answer","String","trim","push","readExcel","files","idx","overflowX","map","question","DisplayExcelData","Modal","show","onHide","backdrop","keyboard","Body","Footer","textDecoration","LoadingScreen","width","height","timeout","ViewAllSubmissions","testsList","setTestsList","loading","setLoading","loadalltestsubmissions","axios","get","useEffect","exceldownloadname","alignIntems","table","filename","sheet","buttonText","submission","studentName","email","contactNumber","score","ViewSubmissionsByTest","match","submissions","setSubmissions","loadtestDetails","loadtestsubmissions","params","fatherName","interCollegeName","interPrincipalName","fatherContactNumber","whatsappNumber","aadharNumber","place","district","AdminTestCard","testName","testDescription","testDuration","Card","boxShadow","borderRadius","Title","Subtitle","Text","textAlign","ViewAllTests","loadalltests","testspageStyle","testsListingContainer","test","noTestsContainer","flexWrap","rowGap","columnGap","paddingTop","paddingBottom","DelTestCard","deleteTest","delete","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","transition","block","DeleteTestsPage","DeleteTestCard","TestCard","startDate","Date","getTime","endDate","currentDate","homepageStyle","CollegeInfo","padding","xl","Image","src","ncetlogobg1","rounded","HomePage","currentTestsList","setCurrentTestsList","upcomingTestsList","setUpcomingTestsList","previousTestsList","setPreviousTestsList","currentTestsListLocal","upcomingTestsListLocal","previousTestsListLocal","Signup","password","success","userData","setUserData","missing","setMissing","onSubmit","fieldsMissingMessage","Signin","didRedirect","signinFunction","setItem","authenticate","SubmitTest","testgiven","setTestGiven","showFormModal","setShowFormModal","showAfterSubmitModal","setShowAfterSubmitModal","handleClose","testValues","setTestValues","nameError","setNameError","emailError","setEmailError","phoneError","setPhoneError","aadharError","setAadharError","submitValues","setSubmitValues","setTestEndTime","setTestDuration","initializeAnswersArray","arraylen","loadTest","testIde","submitFormDetails","nameErrorMessage","emailErrorMessage","phoneErrorMessage","aadharErrorMessage","nameChecker","emailChecker","phoneChecker","aadharChecker","config","url","testSubmissionsTemp","answersarrayUpdater","qno","answerslocalhere","QuestionCard","optionA","setOptionA","optionB","setOptionB","optionC","setOptionC","optionD","setOptionD","buttonstyle","buttonactive","buttoninactive","onselectA","onselectB","onselectC","onselectD","testStatus","MyTimer","expiryTimestamp","useTimer","onExpire","autoStart","seconds","minutes","hours","days","isRunning","fontWeight","time","setSeconds","getSeconds","testUpcomingScreen","testOverScreen","order","span","testOngoingScreen","somethingWentWrong","backgroundColor","border","Routes","path","exact","Home","ViewAllSubmissionsPage","ViewAllTestsPage","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.7943f337.chunk.js","sourcesContent":["export const API = process.env.REACT_APP_BACKEND","import axios from 'axios'\nimport {API} from '../backend'\n\nexport const signupFunction = user => {\n    // console.log(\"signup backend triggereed\")\n    return fetch(`${API}/signup`, {\n        method:\"POST\",\n        headers:{\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(user)\n    })\n    .then(response => {\n        return response.json()\n    })\n    .catch(err => console.log(err))\n}\n\n\nexport const signinFunction = user => {\n    // console.log(\"signin backend triggereed\")\n    return fetch(`${API}/signin`, {\n        method: \"POST\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(user)\n    })\n    .then(response => {\n        return response.json()\n    })\n    .catch(err => console.log(err))\n}\n\n\nexport const authenticate = (data, next) => {\n    // console.log(\"authenticate backend triggereed\")\n    if (typeof window !== \"undefined\") {\n        localStorage.setItem(\"jwt\",JSON.stringify(data))\n        next()\n    }\n}\n\nexport const signout = next => {\n    // console.log(\"signout backend triggereed\")\n    if (typeof window !== \"undefined\") {\n        localStorage.removeItem(\"jwt\")\n        next();\n\n        return fetch(`${API}/signout`, {\n            method: \"GET\"\n        })\n        .then(response => console.log(\"signout successfull\"))\n        .catch(err => console.log(err))\n    }\n}\n\n\nexport const isAuthenticated = () => {\n    // console.log(\"isauthenticate backend triggereed\")\n    \n    if (typeof window == \"undefined\") {\n      return false\n    }\n    if (localStorage.getItem(\"jwt\")) {\n        return JSON.parse(localStorage.getItem(\"jwt\"))\n    } else{\n        return false;\n    }\n}","import React from \"react\"\nimport {Route, Redirect} from \"react-router-dom\"\nimport {isAuthenticated} from \"../apiCalls/auth\"\n\n\nconst AdminRoute = ({ component: Component, ...rest }) => {\n    return (\n      <Route\n        {...rest}\n        render={ props =>\n          isAuthenticated() && isAuthenticated().user.role ===1 ? (\n          <Component {...props} />\n          ) : (\n            <Redirect\n              to={{\n                pathname: \"/signin\",\n                state: { from: props.location }\n              }}\n            />\n          )\n        }\n      />\n    );\n  }\n\n  export default AdminRoute","import React from 'react'\n\nimport { Link, Redirect, withRouter } from 'react-router-dom'\n\nimport { Navbar, Nav, NavDropdown, Form, FormControl, Button, Container } from 'react-bootstrap'\n\nimport { isAuthenticated, signout } from '../../apiCalls/auth'\n\n\nexport const NavigationBar = () => {\n    return(\n        <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n          <Container>\n            <Navbar.Brand href=\"/\">NCET Exam Portal</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n              <Navbar.Collapse id=\"responsive-navbar-nav\">\n              \n                <Nav className=\"me-auto\">\n                </Nav>\n    \n                <Nav>\n    \n                  {isAuthenticated() && isAuthenticated.apply().user.role ===1 && (\n                    <Nav.Link >\n                      <Link to=\"/admin/dashboard\" className=\"text-reset text-decoration-none mx-1\">\n                      Admin Dashboard\n                      </Link>\n                  </Nav.Link>\n                  )}\n      \n\n                  {!isAuthenticated() && (\n                    <>\n                    <Nav.Link >\n                      <Link to=\"/signup\" className=\"text-reset text-decoration-none mx-1\">\n                      Sign Up\n                      </Link>\n                    </Nav.Link>\n                    <Nav.Link >\n                      <Link to=\"/signin\" className=\"text-reset text-decoration-none mx-1\">\n                      Sign In\n                      </Link>\n                    </Nav.Link>\n                    </>\n                  )}\n      \n                  {isAuthenticated() && (\n                    <Nav.Link >\n                    <Link to=\"/\" onClick={() => {\n                      signout(() => {\n                        <Redirect to=\"/\" />\n                      })\n                    }} className=\"text-reset text-decoration-none mx-1\">\n                    Sign Out\n                    </Link>\n                  </Nav.Link>\n                  )}\n\n                </Nav>\n            </Navbar.Collapse>\n          </Container>\n        </Navbar>\n    )\n}\n\nexport default withRouter(NavigationBar);","import React from 'react';\n\nimport { Container, Row, Col } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './footer.css'\n\nimport { FiFacebook, FiTwitter, FiLinkedin, FiInstagram, FiYoutube } from 'react-icons/fi';\nimport { RiMailOpenFill, RiPhoneFill } from 'react-icons/ri';\n\n\n\n\nconst FooterBar = () => {\n    return(\n        <Container fluid className=\"footer-parent-container\">\n            <Container>\n            \n                <Row>\n                    \n                    <Col lg={6} md={6} sm={12} xs={12} className=\"contact-container mt-2 mb-2\">\n                        <p className=\"queries-text\">For any Queries reach out to us at:</p>\n                    \n                        <div className=\"contact-links\">\n                            {/* <RiMailOpenFill size=\"1.3em\" color=\"#fff\" /> <a href=\"mailto:principal@ncetmail.com\" className=\"text-link\">principal@ncetmail.com</a>  */}\n                            <RiPhoneFill size=\"1.3em\" color=\"#fff\"  /> <a href=\"tel:9949166771\" className=\"text-link\">+91 99491 66771</a> <br/>\n                            <RiPhoneFill size=\"1.3em\" color=\"#fff\"  /> <a href=\"tel:9985165771\" className=\"text-link\">+91 99851 65771</a>\n                        </div>\n                        \n                    </Col>\n                    <Col lg={6} md={6} sm={12} xs={12} className=\"social-container mt-2 mb-2\">\n                        <p className=\"connect-text\">Connect with us:</p>\n                        <div className=\"div-socialLinks\">\n                            <a href=\"https://www.linkedin.com/school/nagarjuna-college-bangalore\"><FiLinkedin size=\"1.5em\" style={{marginRight:\"5px\", marginLeft:\"5px\"}} color=\"#fff\"  /></a>\n                            <a href=\"https://www.facebook.com/Nagarjunacollege.Bangalore/\"><FiFacebook size=\"1.5em\" style={{marginRight:\"5px\", marginLeft:\"5px\"}} color=\"#fff\"  /></a>\n                            <a href=\"https://twitter.com/principal_ncet?s=09\"><FiTwitter size=\"1.5em\" style={{marginRight:\"5px\", marginLeft:\"5px\"}} color=\"#fff\" /></a>\n                            <a href=\"https://www.instagram.com/ncet_official/?igshid=1927y63j14dl6\"><FiInstagram size=\"1.5em\" style={{marginRight:\"5px\", marginLeft:\"5px\"}} color=\"#fff\"  /></a>\n                            <a href=\"https://www.youtube.com/channel/UC7z2VqJIhSkCh4HC1y9zdaw\"><FiYoutube size=\"1.7em\" style={{marginRight:\"5px\", marginLeft:\"5px\"}} color=\"#fff\"  /></a>\n                        </div>\n                    </Col>\n                </Row>\n\n                <hr className=\"hr-line\" />\n\n                <Row>\n                    <Col style={{display:'flex', justifyContent:'center', alignItems:'center'}}>\n                        <span className=\"copyright-text\">COPYRIGHT © 2022 NAGARJUNA GROUP OF INSTITUTIONS. ALL RIGHT RESERVED</span>\n                    </Col>\n                </Row>\n\n            </Container>\n        </Container>\n    )\n}\n\nexport default FooterBar;","import React from 'react'\n\nimport { Container } from 'react-bootstrap'\n\nimport NavigationBar from '../header/NavigationBar'\nimport FooterBar from '../footer/FooterBar'\n\nimport './base.css'\n\nconst Base = ({ className=\"\", children }) => {\n\n\n    return(\n        <div>\n            <NavigationBar />\n                <div className=\" mb-5\">\n                    <div className={className}>{children}</div>\n                </div>\n            <FooterBar />\n        </div>\n    )\n\n\n}\n\n        \n\nexport default Base;","import React from 'react' \n\nimport { Button, Row, Col, Container } from 'react-bootstrap'\n\nimport { Link } from 'react-router-dom'\n\nimport Base from '../../components/base/Base'\n\nconst AdminDashboardPage = () => {\n    return(\n        <Base>\n\n            <Container style={{marginTop:'15vh', marginBottom:'15vh'}}>\n                <Row >\n                    <Col style={{display:'flex', alignItems:'center', justifyContent:'center'}}>\n                        <h2>Admin Dashboard</h2>\n                    </Col>\n                </Row>\n\n\n                <Row>\n                    <Container style={{display:'flex', alignItems:'center', justifyContent:'center', flexDirection:'column', marginTop:'10vh', marginBottom:'10vh'}}>\n                        <Link to={`/admin/createtest`}><Button variant=\"secondary\" size=\"md\" className=\"mt-1 mb-1\" style={{ minWidth:'50vw'}}>Create New Test</Button></Link>\n                     {/*   <Link to={`/admin/submissions/all`}><Button variant=\"secondary\" size=\"md\" className=\"mt-1 mb-1\" style={{ minWidth:'50vw'}} >View All Submissioons</Button></Link> */}\n                       <Link to={`/admin/tests/all`}><Button variant=\"secondary\" size=\"md\" className=\"mt-1 mb-1\" style={{ minWidth:'50vw'}} >View Submissions By Tests</Button></Link>  \n                        <Link to={`/admin/tests/delete`}><Button variant=\"secondary\" size=\"md\" className=\"mt-1 mb-1\" style={{ minWidth:'50vw'}} >Delete Test</Button></Link>\n                    </Container>\n                </Row>\n            </Container>\n        \n        </Base>\n    )\n}\n\nexport default AdminDashboardPage;\n","const { API } = require(\"../backend\")\n \nexport const submitTest = (userId, token, details) => {\n    // console.log(\"submitTest trigerred\")\n    // console.log(\"submission data\", details)\n    return fetch(`${API}/test/create/${userId}`, {\n        method: \"POST\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify(details)\n    })\n    .then(response => {\n        return response.json()\n    })\n    .catch(err => console.log(err))\n\n}\n\n\nexport const getSubmissions = (userId, token, testId) => {\n    // console.log(\"get submissions\")\n    return fetch(`${API}/test/testSubmissions/${userId}`, {\n        method: \"POST\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify(testId)\n    })\n    .then(response => {\n        return response.json()\n    })\n    .catch(err => console.log(err))\n\n}\n\n","import React, { useState } from 'react' \nimport { Link, Redirect } from 'react-router-dom'\n\nimport { Button, Form, Container, Row, Col, Modal } from 'react-bootstrap'\n\nimport { submitTest } from '../../apiCalls/adminApis'\nimport { isAuthenticated } from '../../apiCalls/auth'\n\nimport Base from '../../components/base/Base'\n\n// module to convert excel into json\nimport * as XLSX from \"xlsx\";\n\nimport './table.css'\n\nconst CreateTestPage = () => {\n\n    const {user, token} = isAuthenticated();\n\n    const [testDetails, setTestDetails] = useState(\n        {\n            name:\"\",\n            description:\"\",\n            startTime:\"\",\n            endTime:\"\",\n            duration:\"\"\n        }\n    )\n\n    const [questions, setQuestions] = useState([])\n    const [answers, setAnswers] = useState([])\n\n    const [testCreationSuccess, setTestCreationSuccess] = useState(false)\n\n    const { name, description, startTime, endTime, duration} =  testDetails\n\n    const handleCloseAfterSubmit = () => setTestCreationSuccess(false);\n\n    const handleChange = name => event => {\n        setTestDetails({...testDetails, [name]: event.target.value})\n    }\n\n\n\n   \n\n\n    const submitTestDetails = (event) => {\n        event.preventDefault();\n        submitTest(user._id, token, { name, description, startTime, endTime, duration, questions, answers })\n        .then(data => {\n            // console.log(data)\n            setTestCreationSuccess(true)\n        })\n        .catch(err => console.log(\"error in submititng test\",err))\n    }\n\n\n    const formInputs = () => {\n        return(\n            <Container className=\"mt-4 mb-4 px-4 border-bottom border-top py-5\">\n                <Row>\n                    <Form>\n\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicName\">\n                        <Form.Label>Test Name</Form.Label>\n                        <Form.Control type=\"text\" placeholder=\"Enter test Name Here\" onChange={handleChange(\"name\")} value={name} />\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicDescription\">\n                        <Form.Label>Test Description</Form.Label>\n                        <Form.Control type=\"text\" placeholder=\"Enter Test description\" onChange={handleChange(\"description\")} value={description} />\n                    </Form.Group>\n                \n                    <Form.Group className=\"mb-3\" controlId=\"formBasicDate\">\n                        <Form.Label>Start Time</Form.Label>\n                        <Form.Control type=\"text\" placeholder=\"24-H format: (month dd, yyyy hh:mm:ss) eg. jan 27, 2021 02:30:00\" onChange={handleChange(\"startTime\")} value={startTime} />\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicTime\">\n                        <Form.Label>End Time</Form.Label>\n                        <Form.Control type=\"text\" placeholder=\"24-H format: (month dd, yyyy hh:mm:ss) eg. jan 27, 2021 02:30:00\" onChange={handleChange(\"endTime\")} value={endTime} />\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicDuration\">\n                        <Form.Label>Duration (in minutes)</Form.Label>\n                        <Form.Control type=\"number\" placeholder=\"eg. 60 \" onChange={handleChange(\"duration\")} value={duration} />\n                    </Form.Group>\n\n                    \n\n                    </Form>\n                </Row>\n            </Container>\n        )\n    }\n\n\n    \n\n    const readExcel = (file) => {\n        const promise = new Promise((resolve, reject) => {\n          const fileReader = new FileReader();\n          fileReader.readAsArrayBuffer(file);\n    \n          fileReader.onload = (e) => {\n            const bufferArray = e.target.result;\n    \n            const wb = XLSX.read(bufferArray, { type: \"buffer\" });\n    \n            const wsname = wb.SheetNames[0];\n    \n            const ws = wb.Sheets[wsname];\n    \n            const data = XLSX.utils.sheet_to_json(ws);\n    \n            resolve(data);\n          };\n    \n          fileReader.onerror = (error) => {\n            reject(error);\n          };\n        });\n    \n        promise.then((d) => {\n            // console.log(d)\n        //   setItems(d);\n\n        var questionsLocal = [];\n        var answersLocal = [];\n\n          for (let i = 0; i < d.length; i++) {\n              var temp={\n                  no:\"\",\n                  text:\"\",\n                  a:\"\",\n                  b:\"\",\n                  c:\"\",\n                  d:\"\"\n              }\n              var answer = String(d[i].answer).trim()\n              \n              temp.no = d[i].no\n              temp.text = String(d[i].text).trim()\n              temp.a = String(d[i].a).trim()\n              temp.b = String(d[i].b).trim()\n              temp.c = String(d[i].c).trim()\n              temp.d = String(d[i].d).trim()\n              \n              questionsLocal.push(temp);\n              answersLocal.push(answer)\n\n          }\n\n          setQuestions(questionsLocal)\n          setAnswers(answersLocal)\n        });\n    };\n\n\n\n    const excelInput = () => {\n        return(\n            <Container className=\"d-flex justify-content-center mt-3 mb-3\">\n                <label style={{fontSize:'1.2em'}} className=\"mx-3\">Choose an Excel file:</label>\n                <input\n                type=\"file\"\n                onChange={(e) => {\n                const file = e.target.files[0];\n                readExcel(file);\n                }}\n                />\n            </Container>\n        )\n    }\n\n\n    const Header = () => {\n        return(\n            <Container style={{marginTop:'10vh', marginBottom:'10vh'}}>\n                <Row>\n                    <Col style={{display:'flex', justifyContent:'center', alignItems:'center'}}>\n                        <h2>Create A New Test</h2>\n                    </Col>\n                </Row>\n            </Container>\n        )\n    }\n\n\n    const DisplayExcelData = () => {\n        var idx = -1;\n        return(\n            <Container fluid className=\"mt-5 mb-5\">\n                <Row>\n                    <Col style={{overflowX:'auto'}}>\n                        <table id=\"table-to-xls\">\n                            <tr>\n                                <th className=\"col-1\">no</th>\n                                <th className=\"col-6\">text</th>\n                                <th className=\"col-1\">a</th>\n                                <th className=\"col-1\">b</th>\n                                <th className=\"col-1\">c</th>\n                                <th className=\"col-1\">d</th>\n                                <th className=\"col-1\">answer</th>\n                            </tr>\n\n                        {questions.map(question => {\n                            idx = idx+1;\n                            return(\n                                <tr>\n                                    <td className=\"py-2 col-1\" >{question.no}</td>\n                                    <td className=\"py-2 col-6\" >{question.text}</td>\n                                    <td className=\"py-2 col-1\" >{question.a}</td>\n                                    <td className=\"py-2 col-1\" >{question.b}</td>\n                                    <td className=\"py-2 col-1\" >{question.c}</td>\n                                    <td className=\"py-2 col-1\" >{question.d}</td>\n                                    <td className=\"py-2 col-1\" >{answers[idx]}</td>\n                                </tr>\n                            )\n                            \n                        })}\n                        </table>\n                    </Col>\n\n                    \n                </Row>\n            </Container>\n        )\n    }\n\n    const DisplayCreateButton = () => {\n        return(\n            <Container>\n                <Row>\n                    <Col style={{display:'flex', justifyContent:'center', alignItems:'center'}} >\n                        <Button variant=\"secondary\" size=\"md\" className=\"mt-1 mb-1\" style={{ minWidth:'50vw'}}onClick={submitTestDetails}>Create</Button>\n                    </Col>\n                </Row>\n            </Container>\n        )\n    }\n\n    const showTestCreationSuccess = () => {\n        return(\n            <Modal\n            show={testCreationSuccess}\n            onHide={handleCloseAfterSubmit}\n            backdrop=\"static\"\n            keyboard={false}\n            >\n               \n                <Modal.Body>\n                Test Created Successfuly.\n                </Modal.Body>\n\n\n                <Modal.Footer>\n                <Link style={{textDecoration:'none'}} to=\"/admin/dashboard\">\n                    <Button variant=\"secondary\" className=\"px-5\">\n                        \n                        <span style={{color:'#fff'}}>Ok</span>\n                       \n                    </Button>\n                </Link>    \n                </Modal.Footer>\n            </Modal>\n        )\n    }\n\n    return(\n   \n        <Base>\n        <Header />\n        \n        {formInputs()}\n\n        {excelInput()}\n\n        {DisplayExcelData()}\n\n        \n        {DisplayCreateButton()}\n\n        {showTestCreationSuccess()}\n\n        </Base>\n       \n    )\n}\n\nexport default CreateTestPage;","import React from 'react'\nimport { Container } from 'react-bootstrap'\nimport Loader from \"react-loader-spinner\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\n\nconst LoadingScreen = () => {\n    return(\n        <Container fluid style={{width:'100%', height:'700px', display:'flex', alignItems:'center', justifyContent:'center'}}>\n               <div> \n                    <Loader\n                        type=\"Grid\"\n                        color=\"#0D0D0D\"\n                        height={80}\n                        width={80}\n                        timeout={10000} //3 secs\n                    />\n                </div> \n            </Container>\n    )\n}\n\nexport default LoadingScreen;","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport { Container, Row, Col } from 'react-bootstrap'\n\nimport { API } from '../../backend'\n\nimport { isAuthenticated } from '../../apiCalls/auth'\n\nimport Base from '../../components/base/Base'\nimport LoadingScreen from '../../components/loader/LoadingScreen'\n\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel';\n\nimport './table.css'\n\nconst ViewAllSubmissions = () => {\n\n    const {user, token} = isAuthenticated();\n\n    const [testsList, setTestsList] = useState([])\n    const [error, setError] = useState(false)\n\n    const [loading, setLoading] = useState(true)\n    \n   \n    const loadalltestsubmissions = async () => {\n        try {\n            const {data} = await axios.get(`${API}/testSubmissions/${user._id}`,\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\n            )\n            \n            //  console.log(\"test list received\",data)\n            setTestsList(data)\n            // console.log(\"test list local\",testsList)\n            setLoading(false)\n\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    useEffect(() => {\n        loadalltestsubmissions()\n    },[])\n\n    const heading = () => {\n        return(\n            <Container>\n                <Row>\n                    <Col style={{display:'flex', alignIntems:'center', justifyContent:'center', marginTop:'5em', marginBottom:'5em'}}>\n                        <h1>All Submissions</h1>\n                    </Col>\n                </Row>\n            </Container>\n        )\n    }\n\n    var exceldownloadname = \"allSubmissions\"\n\n    const submissionsTable = () => {\n        return(\n            <Container  className=\"mt-5 mb-5\">\n            <Row>\n                <Col style={{display:'flex', flexDirection:'row-reverse'}}>\n\n                <ReactHTMLTableToExcel\n                id=\"test-table-xls-button\"\n                className=\"download-table-xls-button mt-2 mb-2\"\n                table=\"table-to-xls\"\n                filename={exceldownloadname}\n                sheet={exceldownloadname}\n                buttonText=\"Download as XLS\"/>\n                \n                </Col>\n            </Row>\n            <Row></Row>\n            <Row>\n            <Col style={{overflowX:'auto'}}>\n            <table id=\"table-to-xls\">\n            <tbody>\n                <tr>\n                    <th>Name</th>\n                    <th>Email</th>\n                    <th>Phone</th>\n                    <th>Test</th>\n                    <th>Score</th>\n                </tr>\n                {testsList && testsList.map(submission => {\n                    return(\n                        <tr key={submission._id}>\n                            <td className=\"px-2 py-2\">{submission.studentName}</td>\n                            <td className=\"px-2 py-2\">{submission.email}</td>\n                            <td className=\"px-2 py-2\">{submission.contactNumber}</td>\n                            <td className=\"px-2 py-2\">{submission.testId.name}</td>\n                            <td className=\"px-2 py-2\">{submission.score}</td>\n                        </tr>\n                    )\n                })}\n            </tbody>\n            </table>\n            </Col>\n            </Row>\n            </Container>\n        )\n    }\n\n\n    if(loading == true){\n        return(\n            <LoadingScreen />\n        )\n    }\n\n\n    return(\n        <Base>\n        \n            {heading()}\n\n            {submissionsTable()}\n           \n\n         \n        </Base>\n    )\n}\n\nexport default ViewAllSubmissions;","import React, { useEffect, useState } from 'react';\nimport axios from 'axios'\n\nimport { Container, Row, Col} from 'react-bootstrap'\n\nimport { isAuthenticated } from '../../apiCalls/auth'\n\nimport { API } from '../../backend'\n\nimport { getSubmissions } from  '../../apiCalls/adminApis'\n\nimport Base from '../../components/base/Base'\nimport LoadingScreen from '../../components/loader/LoadingScreen';\n\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel';\n\nimport './table.css'\n\nconst ViewSubmissionsByTest = ({match}) => {\n\n    const {user, token} = isAuthenticated();\n\n    const [testDetails, setTestDetails] = useState()\n    const [submissions, setSubmissions] = useState([])\n\n    const [loading, setLoading] = useState(true)\n\n\n    const loadtestDetails = async (testId) => {\n        try {\n            const {data} = await axios.get(`${API}/admin/test/${testId}/${user._id}`,\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\n            )\n            \n            // console.log(\"test\",data)\n            setTestDetails(data)\n\n        } catch (error) {\n            console.log(error)\n        }\n    } \n\n\n    const loadtestsubmissions = async (testId) => {\n        getSubmissions(user._id, token, {testId})\n            .then(data => {\n                // console.log(data)\n                setSubmissions(data)\n                setLoading(false)\n            })\n            .catch(err => console.log(\"error in getting submissions\",err))\n       \n    }\n\n\n\n    useEffect(() => {\n        loadtestDetails(match.params.testId)\n    },[])\n\n\n    useEffect(() => {\n        loadtestsubmissions(match.params.testId)\n    },[])\n\n\n    const heading = () => {\n        return(\n            <Container>\n                <Row>\n                    <Col style={{display:'flex', alignIntems:'center', justifyContent:'center', marginTop:'5em', marginBottom:'5em'}}>\n                        <h1>Submissions :</h1>\n                    </Col>\n                </Row>\n            </Container>\n        )\n    }\n\n\n    var exceldownloadname = \"testSubmission\"\n   \n\n    const submissionsTable = () => {\n        return(\n            <Container  className=\"mt-5 mb-5\">\n            <Row>\n                <Col style={{display:'flex', flexDirection:'row-reverse'}}>\n\n                <ReactHTMLTableToExcel\n                id=\"test-table-xls-button\"\n                className=\"download-table-xls-button mt-2 mb-2\"\n                table=\"table-to-xls\"\n                filename={exceldownloadname}\n                sheet={exceldownloadname}\n                buttonText=\"Download as XLS\"/>\n                \n                </Col>\n            </Row>\n\n            <Row>\n            <Col style={{overflowX:'auto'}}>\n            <table id=\"table-to-xls\">\n            <tbody>\n                <tr>\n                    <th>Name</th>\n                    <th>Father's Name</th>\n                    <th>Inter College Name</th>\n                    <th>Inter Principal Name</th>\n                    <th>Email</th>\n                    <th>Phone No.</th>\n                    <th>Father's Phone No.</th>\n                    <th>whatsapp No.</th>\n                    <th>Aadhar No.</th>\n                    <th>Place</th>\n                    <th>District</th>\n                    <th>Test Score</th>\n                </tr>\n                {submissions && submissions.map(submission => {\n                    return(\n                        <tr key={submission._id}>\n                            <td className=\"px-2 py-2\">{submission.studentName}</td>\n                            <td className=\"px-2 py-2\">{submission.fatherName}</td>\n                            <td className=\"px-2 py-2\">{submission.interCollegeName}</td>\n                            <td className=\"px-2 py-2\">{submission.interPrincipalName}</td>\n                            <td className=\"px-2 py-2\">{submission.email}</td>\n                            <td className=\"px-2 py-2\">{submission.contactNumber}</td>\n                            <td className=\"px-2 py-2\">{submission.fatherContactNumber}</td>\n                            <td className=\"px-2 py-2\">{submission.whatsappNumber}</td>\n                            <td className=\"px-2 py-2\">{submission.aadharNumber}</td>\n                            <td className=\"px-2 py-2\">{submission.place}</td>\n                            <td className=\"px-2 py-2\">{submission.district}</td>\n                            <td className=\"px-2 py-2\">{submission.score}</td>\n                        </tr>\n                    )\n                })}\n            </tbody>\n            </table>\n            </Col>\n            </Row>\n            </Container>\n        )\n    }\n\n\n\n    if(loading == true){\n        return(\n            <LoadingScreen />\n        )\n    }\n\n    return ( \n        <Base>\n\n        {heading()}\n\n        {submissionsTable()}\n        </Base>\n    );\n}\n \nexport default ViewSubmissionsByTest;","import React from 'react';\n\nimport { Link } from 'react-router-dom'\n\nimport { Card, Button } from 'react-bootstrap'\n\nimport axios from 'axios'\n\nimport { isAuthenticated }  from '../../apiCalls/auth'\nimport { API } from '../../backend';\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst AdminTestCard = ({testName=\"\", testId=\"\", startTime=\"\", endTime=\"\", testDescription=\"\", testDuration=\"\"}) => {\n\n    const {user, token} = isAuthenticated();\n\n    // const notifyDelete = () => toast(\"Deleted! Please refresh the page\");\n\n    // const deleteTest = async () => {\n    //     console.log(\"deleteTest trigerred\")\n    //     await axios.delete(`${API}/test/delete/${testId}/${user._id}`, {\n    //         headers: {\n    //           Authorization: `Bearer ${token}`\n    //         }\n    //       }).then((response) =>  {\n    //           console.log(response.data)\n    //       return toast(\"Deleted! please refresh the page\", \n    //       {\n    //         position: \"top-right\",\n    //         autoClose: 5000,\n    //         hideProgressBar: true,\n    //         closeOnClick: true,\n    //         pauseOnHover: true,\n    //         draggable: true,\n    //         progress: undefined,\n    //         transition: 'slide'\n    //       }\n    //       )})\n    // }\n\n    return(\n\n        <Card style={{ width: '18rem', boxShadow: '1px 1px 1px #fff', borderRadius:'5px' }} className=\"mt-3\">\n        \n        {/* <ToastContainer /> */}\n\n        <Card.Body>\n            <Card.Title>{testName}</Card.Title>\n            <Card.Subtitle style={{fontSize:'small'}} className=\"mb-1 mt-2 text-muted\">From : {startTime}</Card.Subtitle>\n            <Card.Subtitle style={{fontSize:'small'}} className=\"mb-1 mt-2 text-muted\">To : {endTime}</Card.Subtitle>\n            <Card.Subtitle style={{fontSize:'small'}} className=\"mb-2 mt-1 text-muted\">Duration : {testDuration} minutes</Card.Subtitle>\n            <Card.Text style={{fontSize:'0.9em'}} className=\"mt-3 mb-3\">\n            {testDescription}\n            </Card.Text>\n     \n            \n            <Card.Text style={{fontSize:'0.9em'}} className=\"mt-2 mb-2 text-dark\">Test Id : <br/> {testId}\n            </Card.Text>\n\n            <Card.Text style={{fontSize:'0.9em'}} className=\"mt-2 mb-2 text-dark\">Test url : <br/> {`${process.env.REACT_APP_BASE_URL}/test/submit/${testId}`}\n            </Card.Text>\n\n        </Card.Body>\n\n        <Card.Footer style={{textAlign:'center'}} >\n            <Link to={`/test/submissions/${testId}`}>View Submissions</Link>\n        </Card.Footer>\n\n        {/*<Card.Footer style={{textAlign:'center'}}>\n        <Button variant=\"outline-dark\"   onClick={deleteTest} block>Delete</Button>\n        </Card.Footer>\n    */}\n\n        </Card>\n\n    )\n}\n\nexport default AdminTestCard;\n","import React,{useState, useEffect} from 'react';\nimport axios from 'axios'\n\nimport {Container, Row, Col} from 'react-bootstrap'\n\nimport { API } from '../../backend'\n\nimport AdminTestCard from '../../components/testCard/AdminTestCard'\nimport Base from '../../components/base/Base'\nimport LoadingScreen from '../../components/loader/LoadingScreen'\n\n\nconst ViewAllTests = () => {\n\n    const [testsList, setTestsList] = useState([])\n\n    const [loading, setLoading] = useState(true)\n\n    const loadalltests = async () => {\n        try {\n            const {data} = await axios.get(`${API}/testslist`)\n            // console.log(data)\n            setTestsList(data)\n            setLoading(false)\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    useEffect(() => {\n        loadalltests()\n    },[])\n\n    const allTests = () => {\n        return(\n            <Container>\n                <Row style={{textAlign:'center'}} className=\"mt-5 mb-5\">\n                    <h2>All Tests :</h2>\n                </Row>\n                <Container style={testspageStyle.testsListingContainer}>\n                    {testsList && testsList.length !=0 ? (\n\n                        testsList.map(test => {\n                            return(\n                            \n                                <AdminTestCard key={test._id} testName={test.name} testId={test.id} startTime={test.startTime} endTime={test.endTime} testDescription={test.description} testDuration={test.duration} />\n                                 \n                            )\n                        })\n\n                    ) : (\n                        <Container style={testspageStyle.noTestsContainer}>\n                            <h5>No Tests Available</h5>\n                        </Container>\n                    )}\n                </Container>\n                <hr />\n            </Container>\n        )\n    }\n\n    \n\n    if(loading == true){\n        return(\n            <LoadingScreen />\n        )\n    }\n\n    return(\n        <Base>\n        \n            {allTests()}\n\n        </Base>\n    )\n}\n\n\nexport default ViewAllTests;\n\nconst testspageStyle = {\n\n    testsListingContainer:{\n        display:'flex',\n        alignItems:'stretch',\n        justifyContent:'flex-start', \n        flexWrap:'wrap', \n        rowGap:'2em', \n        columnGap:'2em',\n        marginTop:'2vh'\n    },\n    noTestsContainer:{\n        paddingTop:'5em',\n        paddingBottom:'5em',\n        display:'flex', \n        alignItems:'center', \n        justifyContent:'center'\n    }\n\n\n}","import React from 'react';\n\nimport { Link } from 'react-router-dom'\n\nimport { Card, Button } from 'react-bootstrap'\n\nimport axios from 'axios'\n\nimport { isAuthenticated }  from '../../apiCalls/auth'\nimport { API } from '../../backend';\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst DelTestCard = ({testName=\"\", testId=\"\", startTime=\"\", endTime=\"\", testDescription=\"\", testDuration=\"\"}) => {\n\n    const {user, token} = isAuthenticated();\n\n    // const notifyDelete = () => toast(\"Deleted! Please refresh the page\");\n\n    const deleteTest = async () => {\n        // console.log(\"deleteTest trigerred\")\n        await axios.delete(`${API}/test/delete/${testId}/${user._id}`, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          }).then((response) =>  {\n            //   console.log(response.data)\n          return toast(\"Deleted! please refresh the page\", \n          {\n            position: \"top-right\",\n            autoClose: 3000,\n            hideProgressBar: true,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            transition: 'slide'\n          }\n          )})\n    }\n\n    return(\n\n        <Card style={{ width: '18rem', boxShadow: '1px 1px 1px #fff', borderRadius:'5px' }} className=\"mt-3\">\n        \n        <ToastContainer />\n\n        <Card.Body>\n            <Card.Title>{testName}</Card.Title>\n            <Card.Subtitle style={{fontSize:'small'}} className=\"mb-1 mt-2 text-muted\">From : {startTime}</Card.Subtitle>\n            <Card.Subtitle style={{fontSize:'small'}} className=\"mb-1 mt-2 text-muted\">To : {endTime}</Card.Subtitle>\n            <Card.Subtitle style={{fontSize:'small'}} className=\"mb-2 mt-1 text-muted\">Duration : {testDuration} minutes</Card.Subtitle>\n            <Card.Text style={{fontSize:'0.9em'}} className=\"mt-3 mb-3\">\n            {testDescription}\n            </Card.Text>\n     \n            \n            <Card.Text style={{fontSize:'0.9em'}} className=\"mt-2 mb-2 text-dark\">Test Id : <br/> {testId}\n            </Card.Text>\n\n        </Card.Body>\n\n      {/*  <Card.Footer style={{textAlign:'center'}} className=\"mt-1 mb-2\">\n            <Link to={`/test/submissions/${testId}`}>View Submissions</Link>\n        </Card.Footer>\n    */}\n\n        <Card.Footer style={{textAlign:'center'}}>\n        <Button variant=\"outline-dark\"   onClick={deleteTest} block>Delete</Button>\n        </Card.Footer>\n\n        </Card>\n\n    )\n}\n\nexport default DelTestCard;\n","import React,{useState, useEffect} from 'react';\nimport axios from 'axios'\n\nimport {Container, Row, Col} from 'react-bootstrap'\n\nimport { API } from '../../backend'\n\nimport DeleteTestCard from '../../components/testCard/DeleteTestCard'\nimport Base from '../../components/base/Base'\nimport LoadingScreen from '../../components/loader/LoadingScreen'\n\n\nconst  DeleteTestsPage = () => {\n\n    const [testsList, setTestsList] = useState([])\n\n    const [loading, setLoading] = useState(true)\n\n    const loadalltests = async () => {\n        try {\n            const {data} = await axios.get(`${API}/testslist`)\n            // console.log(data)\n            setTestsList(data)\n            setLoading(false)\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    useEffect(() => {\n        loadalltests()\n    },[])\n\n    const allTests = () => {\n        return(\n            <Container>\n                <Row style={{textAlign:'center'}} className=\"mt-5 mb-5\">\n                    <h2>All Tests :</h2>\n                </Row>\n                <Container style={testspageStyle.testsListingContainer}>\n                    {testsList && testsList.length !=0 ? (\n\n                        testsList.map(test => {\n                            return(\n                            \n                                <DeleteTestCard key={test._id} testName={test.name} testId={test.id} startTime={test.startTime} endTime={test.endTime} testDescription={test.description} testDuration={test.duration} />\n                                 \n                            )\n                        })\n\n                    ) : (\n                        <Container style={testspageStyle.noTestsContainer}>\n                            <h5>No Tests Available</h5>\n                        </Container>\n                    )}\n                </Container>\n                <hr />\n            </Container>\n        )\n    }\n\n    \n\n    if(loading == true){\n        return(\n            <LoadingScreen />\n        )\n    }\n\n    return(\n        <Base>\n        \n            {allTests()}\n\n        </Base>\n    )\n}\n\n\nexport default DeleteTestsPage;\n\nconst testspageStyle = {\n\n    testsListingContainer:{\n        display:'flex',\n        alignItems:'stretch',\n        justifyContent:'flex-start', \n        flexWrap:'wrap', \n        rowGap:'2em', \n        columnGap:'2em',\n        marginTop:'2vh'\n    },\n    noTestsContainer:{\n        paddingTop:'5em',\n        paddingBottom:'5em',\n        display:'flex', \n        alignItems:'center', \n        justifyContent:'center'\n    }\n\n\n}","import React from 'react';\n\nimport { Link } from 'react-router-dom'\n\nimport { Card } from 'react-bootstrap'\n\nconst TestCard = ({testName=\"\", testId=\"\", startTime=\"\", endTime=\"\", testDescription=\"\", testDuration=\"\"}) => {\n\n    var startDate = new Date(String(startTime)).getTime();\n    var endDate = new Date(String(endTime)).getTime();\n    var currentDate = new Date().getTime();\n\n    // console.log(\"duration\",testDuration)\n    // console.log(\"duration\",testDescription)\n\n    return(\n\n        <Card style={{ width: '18rem', boxShadow: '1px 1px 1px #fff', borderRadius:'5px', }}>\n        <Card.Body>\n            <Card.Title>{testName}</Card.Title>\n\n            <Card.Subtitle style={{fontSize:'small'}} className=\"mb-1 mt-2 text-muted\">Active from : {startTime}</Card.Subtitle>\n            <Card.Subtitle style={{fontSize:'small'}} className=\"mb-2 mt-1 text-muted\">Till : {endTime}</Card.Subtitle>\n            <Card.Subtitle style={{fontSize:'small'}} className=\"mb-2 mt-1 text-muted\">Duration : {testDuration} minutes</Card.Subtitle>\n            <Card.Text style={{fontSize:'0.9em'}} className=\"mt-3 mb-3\">\n            {testDescription}\n            </Card.Text>\n            \n        </Card.Body>\n        {(currentDate >= startDate && endDate >= currentDate) && (\n            <Card.Footer style={{textAlign:'center'}}>\n            <Link to={`/test/submit/${testId}`}>Attend Now</Link>\n            </Card.Footer>\n        ) \n        }\n        </Card>\n\n    )\n}\n\nexport default TestCard;","const homepageStyle = {\n\n    testsListingContainer:{\n        display:'flex',\n        alignItems:'stretch',\n        justifyContent:'flex-start', \n        flexWrap:'wrap', \n        rowGap:'2em', \n        columnGap:'2em',\n        marginTop:'2vh'\n    },\n    noTestsContainer:{\n        paddingTop:'5em',\n        paddingBottom:'5em',\n        display:'flex', \n        alignItems:'center', \n        justifyContent:'center'\n    }\n\n\n}\n\nexport default homepageStyle;","export default __webpack_public_path__ + \"static/media/ncetlogobg1.5c5843f8.png\";","import React from 'react'\n\nimport { Col, Row,Container, Image } from \"react-bootstrap\";\n\n\nimport ncetlogobg1 from '../../assets/ncetlogobg1.png'\n\nconst CollegeInfo = () => {\n    return(\n        <Container fluid className=\"bg-dark\" style={{marginBottom:'10vh' , padding:50}}>\n            <Row className=\"mt-5 mb-5\">\n                <Col xl={7} md={7} sm={12} xs={12} style={{display:'flex', alignItems:'center', justifyContent:'center'}}>\n                    <Image src={ncetlogobg1} style={{width:'80%', height:'auto'}} rounded/>\n                </Col>\n                <Col xl={5} md={5} sm={12} xs={12} className=\"mt-5 mb-5\" style={{display:'flex', alignItems:'center', justifyContent:'flex-start'}}>\n                    <ul className=\"text-white\">\n                        <li>Autonomous College under VTU, Belgaum</li>\n                        <li>AICTE Approved Institution</li>\n                        <li>UGC Approved Institution</li>\n                        <li>Institution Accredited by NAAC with ‘A’ Grade</li>\n                        <li>NBA accredited Departments</li>\n                        <li>Recognized under Section 12(B) of the UGC Act-1956</li>\n                        <li>Recognized under Section 2(f) of the UGC Act-1956</li>\n                        <li>ISO 14001:2015 EMS certified Institution</li>\n                        <li>ISO 22000:2018 FSMS certified Institution</li>\n                        <li>ISO 9001:2015 QMS certified Institution</li>\n                    </ul>\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default CollegeInfo","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nimport { Container, Row, Col } from 'react-bootstrap'\n\nimport { API } from '../../backend'\n\nimport TestCard from '../../components/testCard/TestCard'\nimport Base from '../../components/base/Base'\n\nimport homepageStyle from './homepageStyle'\n\nimport LoadingScreen from '../../components/loader/LoadingScreen'\nimport CollegeInfo from '../../components/collegeInfo/CollegeInfo'\n\n\n\nconst HomePage = () => {\n\n    const [currentTestsList, setCurrentTestsList] = useState([])\n    const [upcomingTestsList, setUpcomingTestsList] = useState([])\n    const [previousTestsList, setPreviousTestsList] = useState([])\n\n    const [loading, setLoading] = useState(true)\n\n    \n   \n\n    const loadalltests = async () => {\n        try {\n            const {data} = await axios.get(`${API}/testslist`)\n            // console.log(data)\n\n            var currentTestsListLocal = [];\n            var upcomingTestsListLocal = [];\n            var previousTestsListLocal = [];\n\n            var currentDate = new Date().getTime();\n\n            for (let i = 0; i < data.length; i++) {\n                \n                var startDate = new Date(String(data[i].startTime)).getTime();\n                var endDate = new Date(String(data[i].endTime)).getTime();\n\n                // console.log(\"determining test\",data[i])\n                // console.log(startDate)\n                // console.log(currentDate)\n                // console.log(endDate)\n\n                if(currentDate >= startDate && endDate >= currentDate){\n                 //   console.log(\"sending to current\", data[i])  \n                    currentTestsListLocal.push(data[i])\n                }\n                else if(startDate > currentDate ){\n                   // console.log(\"sending to upcoming\", data[i])\n                    upcomingTestsListLocal.push(data[i])\n                }\n                else if(currentDate > endDate){\n                  //  console.log(\"sending to previous\", data[i])\n                    previousTestsListLocal.push(data[i])\n                }\n            }\n\n            setCurrentTestsList(currentTestsListLocal)\n            setUpcomingTestsList(upcomingTestsListLocal)\n            setPreviousTestsList(previousTestsListLocal)\n\n            setLoading(false)\n\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    useEffect(() => {\n        loadalltests()\n    },[])\n\n\n    const currentTestsSection = () => {\n        return(\n            <Container>\n                <Row>\n                    <h2>Ongoing Tests :</h2>\n                </Row>\n                <Container style={homepageStyle.testsListingContainer}>\n                    {currentTestsList && currentTestsList.length !=0 ? (\n\n                        currentTestsList.map(test => {\n                          //  console.log(test)\n                            return(\n                                <TestCard testName={test.name} testId={test.id} startTime={test.startTime} endTime={test.endTime} testDescription={test.description} testDuration={String(test.duration)} />\n                           \n                            )\n                        })\n\n                    ) : (\n                        <Container style={homepageStyle.noTestsContainer}>\n                            <h5>Currently there are no ongoing tests</h5>\n                        </Container>\n                    )}\n                </Container>\n                <hr />\n            </Container>\n        )\n    } \n\n    const upcomingTestsSection = () => {\n        return(\n            <Container>\n                <Row>\n                    <h2>Upcoming Tests :</h2>\n                </Row>\n                <Container style={homepageStyle.testsListingContainer}>\n                    {upcomingTestsList && upcomingTestsList.length !=0 ? (\n\n                        upcomingTestsList.map(test => {\n                            return(\n                                <TestCard testName={test.name} testId={test.id} startTime={test.startTime} endTime={test.endTime} testDescription={test.description} testDuration={String(test.duration)} />\n                           \n                            )\n                        })\n\n                    ) : (\n                        <Container style={homepageStyle.noTestsContainer}>\n                            <h5>Currently there are no upcoming tests</h5>\n                        </Container>\n                    )}\n                </Container>\n                <hr />\n            </Container>\n        )\n    } \n\n    const previousTestsSection = () => {\n        return(\n            <Container>\n                <Row>\n                    <h2>Previous Tests :</h2>\n                </Row>\n                <Container style={homepageStyle.testsListingContainer}>\n                    {previousTestsList && previousTestsList.length !=0 ? (\n\n                        previousTestsList.map(test => {\n                            return(\n                                <TestCard testName={test.name} testId={test.id} startTime={test.startTime} endTime={test.endTime} testDescription={test.description} testDuration={String(test.duration)} />\n                           \n                            )\n                        })\n\n                    ) : (\n                        <Container style={homepageStyle.noTestsContainer}>\n                            <h5>no previous tests found</h5>\n                        </Container>\n                    )}\n                </Container>\n                <hr />\n            </Container>\n        )\n    }\n    \n    \n    if(loading == true){\n        return(\n            <LoadingScreen />\n        )\n    }\n\n    return(\n        <Base>\n\n        <CollegeInfo />\n        \n        <Container className=\"mt-4 mb-5\" fluid>\n            {currentTestsSection()}\n        </Container>\n\n        <Container className=\"mt-5 mb-5\" fluid>\n            {upcomingTestsSection()}\n        </Container>\n\n        <Container className=\"mt-5 mb-4\" fluid>\n            {previousTestsSection()}\n        </Container>\n\n        </Base>\n    )\n}\n\nexport default HomePage;","import React, {useState} from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { Form, Button, Container, Col, Row, Card } from 'react-bootstrap'\n\nimport {  signupFunction, authenticate, isAuthenticated } from '../../apiCalls/auth'\n\nimport Base from '../../components/base/Base'\n\nimport './signup.css'\n\n\n\n\nconst Signup = () => {\n\n    const [userData, setUserData] = useState({\n        name: \"\",\n        email: \"\",\n        password: \"\",\n        error: \"\",\n        success: false\n    })\n\n    const [missing, setMissing] = useState(false)\n\n    const { name, email, password, error, success } = userData\n\n    \n\n    const handleChange = name => event => {\n        setMissing(false)\n        setUserData({...userData, error: false, [name]: event.target.value})\n    }\n\n    const onSubmit = event => {\n        event.preventDefault()\n        if(name == \"\" || email == \"\" || password == \"\"){\n            setMissing(true)\n        }\n        else{\n        setUserData({...userData, error: false})\n        signupFunction({name, email, password})\n        .then(data => {\n            if(data?.error){\n                setUserData({...userData, error: data.error, success:false})\n            }\n            else{\n                setUserData({...userData, name:\"\", email:\"\", password:\"\", error:\"\", success: true})\n            }\n        })\n        .catch(err => console.log(err))\n        }\n    }\n\n\n\n    const successMessage = () => (\n        <div className=\"row\">\n        <div className=\"col-md-6 offset-sm-3 text-left\">\n        <div className=\"\" style={{display: success ? \"\" : \"none\"}}>\n        <h6 className=\"text-center text-dark\">\n        Your account was created successfully. Please <Link to=\"/signin\">Login here</Link>\n        </h6>\n        </div>\n        </div>\n        </div>\n    )\n\n\n    const errorMessage = () => (\n        <div className=\"row\">\n        <div className=\"col-md-6 offset-sm-3 text-left\">\n        <div className=\"\" style={{display: error ? \"\" : \"none\"}}>\n        <h6 className=\"text-center text-dark\">\n        {error}\n        </h6>\n        </div>\n        </div>\n        </div>\n    )\n\n\n    const fieldsMissingMessage = () => {\n        if(missing != \"\")\n        return(\n            <div className=\"row\">\n        <div className=\"col-md-6 offset-sm-3 text-left\">\n        <div className=\"\" >\n        <h6 className=\"text-center text-dark\">\n            Please fill the details\n        </h6>\n        </div>\n        </div>\n        </div>\n        )\n        \n    }\n\n\n\n    const signupForm = () => {\n        return(\n            <Form className=\"signup-form\">\n\n                <Form.Group className=\"my-3 mx-5\" controlId=\"formBasicName\">\n                    <Form.Label className=\"text-start\">Name</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"Enter Name\" onChange={handleChange(\"name\")} value={name}  />\n                </Form.Group>\n            \n                <Form.Group className=\"my-3 mx-5\" controlId=\"formBasicEmail\">\n                    <Form.Label>Email address</Form.Label>\n                    <Form.Control type=\"email\" placeholder=\"Enter email\" onChange={handleChange(\"email\")} value={email} />\n                </Form.Group>\n    \n                <Form.Group className=\"my-3 mx-5\" controlId=\"formBasicPassword\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control type=\"password\" placeholder=\"Password\" onChange={handleChange(\"password\")}  value={password} />\n                </Form.Group>\n    \n    \n                <Form.Group className=\"my-4 mx-5 d-grid \">\n                    <Button variant=\"secondary\" block onClick={onSubmit}>\n                        Sign Up\n                    </Button>\n                </Form.Group>\n                \n            </Form>\n        )\n    }\n\n\n    return(\n        <Base>\n\n        \n            <Container>\n                <Row>\n                    <Col lg={6} md={6} sm={12} className='offset-lg-3 mt-5'>\n                        <Card  className=\"signup-card\">\n                            {signupForm()}\n                        </Card>\n                    </Col>\n                </Row>\n            </Container>\n\n            {successMessage()}\n            {errorMessage()}\n            {fieldsMissingMessage()}\n\n           \n        </Base>\n    )\n\n}\n\nexport default Signup;","import React, {useState} from 'react'\nimport { Link, Redirect } from 'react-router-dom'\n\nimport { Form, Button, Container, Col, Row, Card } from 'react-bootstrap'\n\nimport { signinFunction, authenticate, isAuthenticated } from '../../apiCalls/auth'\n\nimport Base from '../../components/base/Base'\n\nimport './signin.css'\n\nconst Signin = () => {\n\n    const [userData, setUserData] = useState({\n        email: \"\",\n        password: \"\",\n        error: \"\",\n        loading: false,\n        didRedirect: false\n    })\n\n    const [missing, setMissing] = useState(false)\n\n    const { email, password, error, loading, didRedirect} = userData\n    const {user} = isAuthenticated()\n\n    const handleChange = name => event => {\n        setMissing(false)\n        setUserData({...userData, error: false, [name]: event.target.value})\n    }\n\n    const onSubmit = event => {\n        event.preventDefault()\n        if( email == \"\" || password == \"\"){\n            setMissing(true)\n        }\n        else{\n        setUserData({...userData, error: false, loading: true})\n        signinFunction({email, password})\n        .then(data => {\n            if(data?.error){\n                setUserData({...userData, error: data.error, loading:false})\n            }\n            else{\n                authenticate(data, () => {\n                    setUserData({...userData, didRedirect: true})\n                })\n              \n            }\n        })\n        .catch(err => console.log(err))\n        }\n    }\n\n\n    const performRedirect = () => {\n\n        if(didRedirect){\n            if(user && user.role === 1){\n                return <Redirect to=\"/\" />\n            }\n        }\n        if(isAuthenticated()){\n            return <Redirect to=\"/\" />\n        }\n\n    }\n\n\n    const loadingMessage = () => {\n        return(\n            loading && (\n                <div className=\"parent d-flex align-items-center justify-content-center\">\n                <div className=\"child col-lg-6 col-md-6 col-sm-12\">\n\n                <h3 className=\"text-center text-dark\">Loading...</h3>                \n\n                </div>\n                </div>\n            )\n        )\n    }\n\n\n    const errorMessage = () => {\n        return(\n            <div className=\"row\">\n                <div className=\"col-md-6 offset-sm-3 text-left\">\n                    <div className=\"\" style={{display: error ? \"\" : \"none\"}}>\n                        <h6 className=\"text-center text-dark\">\n                        {error}\n                        </h6>\n                    </div>\n                </div>\n            </div>\n        )\n  }\n\n   \n\n\n  \n\n    const fieldsMissingMessage = () => {\n        if(missing != \"\")\n        return(\n            <div className=\"row\">\n        <div className=\"col-md-6 offset-sm-3 text-left\">\n        <div className=\"\" >\n        <h6 className=\"text-center text-dark\">\n            Please enter the details\n        </h6>\n        </div>\n        </div>\n        </div>\n        )\n        \n    }\n\n\n\n    const signinForm = () => {\n        return(\n            <Form className=\"signup-form\">\n               \n                <Form.Group className=\"my-3 mx-5\" controlId=\"formBasicEmail\">\n                    <Form.Label>Email address</Form.Label>\n                    <Form.Control type=\"email\" placeholder=\"Enter email\" onChange={handleChange(\"email\")} value={email} />\n                </Form.Group>\n    \n                <Form.Group className=\"my-3 mx-5\" controlId=\"formBasicPassword\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control type=\"password\" placeholder=\"Password\" onChange={handleChange(\"password\")}  value={password} />\n                </Form.Group>\n    \n    \n                <Form.Group className=\"my-4 mx-5 d-grid \">\n                    <Button variant=\"secondary\" block onClick={onSubmit}>\n                        Sign In\n                    </Button>\n                </Form.Group>\n             \n            \n                \n            </Form>\n        )\n    }\n\n\n    return(\n        <Base>\n        \n            {loadingMessage()}\n        \n            <Container>\n                <Row>\n                    <Col lg={6} md={6} sm={12} className='offset-lg-3 mt-5'>\n                        <Card  className=\"signup-card\">\n                            {signinForm()}\n                        </Card>\n                    </Col>\n                </Row>\n            </Container>\n\n            \n            {errorMessage()}\n            {fieldsMissingMessage()}\n            {performRedirect()}\n           \n        </Base>\n    )\n\n}\n\nexport default Signin;"," const { API } = require(\"../backend\")\n \nexport const submitResponse = submission => {\n    // console.log(\"submir response trigerred\")\n    // console.log(\"submission data\", submission)\n    return fetch(`${API}/test/submit`, {\n        method: \"POST\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(submission)\n    })\n    .then(response => {\n        return response.json()\n    })\n    .catch(err => console.log(err))\n\n}\n\n\n","//module imports\nimport React, { useEffect, useState } from 'react' \nimport { Link }  from 'react-router-dom'\nimport axios from 'axios'\nimport { useTimer } from 'react-timer-hook';\n\n// UI related imports\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport { Button, Form, Modal, Row, Col, Card, Container } from 'react-bootstrap'\n\n\n// api import\nimport { API } from '../../backend'\n\n// api helper import\nimport {  submitResponse } from '../../apiCalls/userApis'\n\n\n//custom components import\nimport FooterBar from '../../components/footer/FooterBar'\nimport LoadingScreen from '../../components/loader/LoadingScreen'\n\n\n\nconst SubmitTest = ({match}) => {\n\n        // console.log(\"testid is\", match.params)\n\n        //for loading screen\n        const [loading, setLoading] = useState(true)\n\n        const [testgiven, setTestGiven] = useState(false)\n\n        //for formMOdal\n        const [showFormModal, setShowFormModal] = useState(true);\n        const [showAfterSubmitModal, setShowAfterSubmitModal] = useState(false);\n\n        const handleClose = () => setShowFormModal(false);\n        const handleCloseAfterSubmit = () => setShowAfterSubmitModal(false);\n\n\n        //main object where all details of test to be saved\n        const [testValues, setTestValues] = useState(null)\n\n        //for for modals validation\n        const [nameError, setNameError] = useState(false)\n        const [emailError, setEmailError] = useState(false)\n        const [phoneError, setPhoneError] = useState(false)\n        const [aadharError, setAadharError] = useState(false)\n\n        //object to be send for submiting response\n        const [submitValues, setSubmitValues] = useState({\n            testId: {\n                _id: match.params.testId\n            },\n            studentName: \"\",\n            fatherName: \"\",\n            interCollegeName: \"\",\n            interPrincipalName: \"\",\n            contactNumber: \"\",\n            fatherContactNumber:\"\",\n            whatsappNumber: \"\",\n            aadharNumber: \"\",\n            email: \"\",\n            place: \"\",\n            district: \"\"\n\n        })\n\n        // destructuring submitvalues\n        const { testId, studentName, fatherName, interCollegeName, interPrincipalName, contactNumber, fatherContactNumber, whatsappNumber, aadharNumber, email, place, district } =  submitValues\n\n        //global answers object(to send to backend)\n        const[answers, setAnswers] = useState([])\n\n        //for timer hook        \n        const [testEndTime, setTestEndTime] = useState(0)\n        const [testDuration, setTestDuration] = useState(0)\n\n        //handling input changes in formdata\n        const handleChange = name => event => {\n            setSubmitValues({...submitValues, [name]: event.target.value})\n            if(name == \"studentName\"){setNameError(false)}\n            if(name == \"email\"){setEmailError(false)}\n            if(name == \"contactNumber\"){setPhoneError(false)}\n            if(name == \"aadharNumber\"){setAadharError(false)}\n        }\n\n\n        //function to submit response\n        const onSubmit = () => {\n         \n            // console.log(\"onsubmit trigerred\",testId, studentName, contactNumber, email, answers)\n            submitResponse({testId, studentName, fatherName, interCollegeName, interPrincipalName, contactNumber, fatherContactNumber, whatsappNumber, aadharNumber, email, place, district, answers})\n            .then(data => {\n                //  console.log(\"submitted\",data)\n                setShowAfterSubmitModal(true)\n            })\n            .catch(err => console.log(\"error occured while submitting response\",err))\n        }\n\n\n        //initializing answers array\n        const initializeAnswersArray = (arraylen) => {\n            var answersLocal = []\n            for (let i = 0; i < arraylen; i++) {\n               answersLocal.push(\"noResponse\")\n            }\n            // console.log(\"answerslocal\",answersLocal)\n            setAnswers(answersLocal)\n        }\n\n        \n\n        //load the test data\n        const loadTest = async (testIde) => {\n            try {\n                const {data} = await axios.get(`${API}/test/${testIde}`)\n                setTestValues(data)\n                initializeAnswersArray(data.questions.length)\n                setLoading(false)\n                // setTestEndTime(data.endTime)\n                setTestEndTime(String(new Date()))\n                setTestDuration(data.duration*60)\n            } catch (error) {\n                console.log(error)\n                // console.log(\"not success\")\n            }\n        }\n\n        //first function\n        useEffect(() => {\n            loadTest(match.params.testId)\n        },[])\n\n\n\n        //form details checker\n        const submitFormDetails = () => {\n            nameErrorMessage()\n            emailErrorMessage()\n            phoneErrorMessage()\n            aadharErrorMessage()\n            if(nameChecker() === true && emailChecker() === true && phoneChecker() === true  && aadharChecker() == true )\n            {\n                // setShowFormModal(false)\n\n                var config = {\n                    method: 'get',\n                    url: `${API}/submissions/exists/${aadharNumber}`,\n                    headers: { }\n                  };\n                  \n                  axios(config)\n                  .then(function (response) {\n                    // console.log(JSON.stringify(response.data));\n                    // console.log(\"len\", response.data.length)\n\n                    let testSubmissionsTemp = []\n\n                    for (let i = 0; i < response.data.length; i++) {\n                        // console.log(\"api testid\",response.data[i].testId);\n                        // console.log(\"api currentid\",testId._id);\n                        // console.log(\"api currentid\",typeof(testId));\n                        // console.log(response.data[i].testId == testId._id)\n\n                        if(response.data[i].testId === testId._id){\n                            // console.log(\"inside nested if\")\n                            testSubmissionsTemp.push(response.data[i])\n                        }\n                        \n                    }\n\n                    if(testSubmissionsTemp.length === 0){\n                      setShowFormModal(false)\n                    }\n                    else if(testSubmissionsTemp.length > 0){\n                      setShowFormModal(false)\n                      setTestGiven(true)\n                    }\n                  })\n                  .catch(function (error) {\n                    console.log(error);\n                  \n                  \n                  });\n            }\n    \n           \n\n\n\n            \n        }\n        \n        //form error checker\n        const nameChecker = () => {\n            // console.log(\"name checker running\")\n            if( studentName.trim().length == 0){\n            setNameError(true)\n            return false\n            }\n            else\n            return true\n        }\n\n        const emailChecker = () => {\n            // console.log(\"email checker running\")\n            var emailregex = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n            if(! email.match(emailregex)){\n            setEmailError(true)\n            return false\n            }\n            else{\n            setEmailError(false)\n            return true\n            }\n            \n        }\n\n        const phoneChecker = () => {\n            var phoneno = /^\\d{10}$/;\n            // console.log(\"phone checker running\")\n            if(! contactNumber.match(phoneno)){\n            setPhoneError(true)\n            return false\n            }\n            else\n            return true\n        }\n\n        const aadharChecker = () => {\n            if(aadharNumber.length !== 12){\n                setAadharError(true)\n                return false\n            }\n            else\n            return true\n        }\n\n\n        //form error messages\n        const nameErrorMessage = () => {\n            // console.log(\"name error running\")\n            // console.log(\"name error\",nameError)\n            if(nameError === true){\n            return <p style={{fontSize:'0.9em'}} className=\"text-danger\">Please Enter a valid name</p>\n            }\n        }\n\n        const emailErrorMessage = () => {\n            // console.log(\"email error running\")\n            // console.log(\"email error\",emailError)\n            if(emailError === true){\n            return <p style={{fontSize:'0.9em'}} className=\"text-danger\">Please Enter a valid email</p>\n            }\n        }\n\n        const phoneErrorMessage = () => {\n            // console.log(\"phone error running\")\n            // console.log(\"phone error\",phoneError)\n            if(phoneError === true){\n            return <p style={{fontSize:'0.9em'}} className=\"text-danger\">Please Enter a valid phone number</p>\n            }\n        }\n\n        const aadharErrorMessage = () => {\n            // console.log(\"phone error running\")\n            // console.log(\"phone error\",phoneError)\n            if(aadharError === true){\n            return <p style={{fontSize:'0.9em'}} className=\"text-danger\">Please Enter a valid aadhar number</p>\n            }\n        }\n\n        const testGivenModal = () => {\n            return(\n                <Modal\n                show={testgiven}\n                onHide={handleClose}\n                backdrop=\"static\"\n                keyboard={false}\n                size=\"lg\"\n                >\n\n                    <Modal.Body>\n                        <div className='my-5 mx-5'>\n                        <h1>You have already responded.</h1>\n                        </div>\n                    </Modal.Body>\n                    <Modal.Footer>\n                <Link style={{textDecoration:'none'}} to=\"/\">\n                    <Button variant=\"secondary\" className=\"px-5\">\n                        \n                        <span style={{color:'#fff'}}>Ok</span>\n                       \n                    </Button>\n                </Link>    \n                </Modal.Footer>\n                </Modal>\n            )\n        }\n\n        //form modal\n        const formModal = () => {\n            return(\n                <Modal\n                show={showFormModal}\n                onHide={handleClose}\n                backdrop=\"static\"\n                keyboard={false}\n                >\n                \n                <Modal.Header >\n                    <Modal.Title>Please Enter the details</Modal.Title>\n                </Modal.Header>\n    \n                <Modal.Body>\n                \n                <Form>\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicName\">\n                    <Form.Label>Student Name</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"Enter Name\" onChange={handleChange(\"studentName\")} value={studentName} />\n                    {nameErrorMessage()}\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicName\">\n                    <Form.Label>Father's Name</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"Enter Father's Name\" onChange={handleChange(\"fatherName\")} value={fatherName} />\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicName\">\n                    <Form.Label>Inter College Name</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"Inter College Name\" onChange={handleChange(\"interCollegeName\")} value={interCollegeName} />\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicName\">\n                    <Form.Label>Inter Principal Name</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"Inter Principal Name\" onChange={handleChange(\"interPrincipalName\")} value={interPrincipalName} />\n                    </Form.Group>\n                    \n                \n                    <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                    <Form.Label>Email</Form.Label>\n                    <Form.Control type=\"email\" placeholder=\"Email\" onChange={handleChange(\"email\")} value={email}  />\n                    {emailErrorMessage()}\n                    </Form.Group>\n    \n                    <Form.Group className=\"mb-3\" controlId=\"formBasicPhone\">\n                    <Form.Label>Phone No.</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"Phone\" onChange={handleChange(\"contactNumber\")} value={contactNumber} />\n                    {phoneErrorMessage()}\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicPhone\">\n                    <Form.Label>Father's Contact No.</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"Father's phone\" onChange={handleChange(\"fatherContactNumber\")} value={fatherContactNumber} />\n                    </Form.Group>\n                        \n\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicPhone\">\n                    <Form.Label>Whatsapp No.</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"Whatsapp No\" onChange={handleChange(\"whatsappNumber\")} value={whatsappNumber} />\n                 \n                    </Form.Group>    \n\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicPhone\">\n                    <Form.Label>Aadhar No.</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"Aadhar no\" onChange={handleChange(\"aadharNumber\")} value={aadharNumber} />\n                    {aadharErrorMessage()}\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicName\">\n                    <Form.Label>Place</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"Enter Place\" onChange={handleChange(\"place\")} value={place} />\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicName\">\n                    <Form.Label>District</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"Enter District\" onChange={handleChange(\"district\")} value={district} />\n                    </Form.Group>\n                </Form>\n              \n                </Modal.Body>\n                \n                <Modal.Footer>\n                    \n                    <Button variant=\"secondary\" className=\"px-5\" onClick={submitFormDetails}>Submit</Button>\n                </Modal.Footer>\n                </Modal>\n            )\n        }\n\n\n        //modal to be displayed after submission\n        const afterSubmitModal = () => {\n            return(\n            <Modal\n            show={showAfterSubmitModal}\n            onHide={handleCloseAfterSubmit}\n            backdrop=\"static\"\n            keyboard={false}\n            >\n               \n                <Modal.Body>\n                Thank you for participating in NCET admission Test\n                </Modal.Body>\n\n\n                <Modal.Footer>\n                <Link style={{textDecoration:'none'}} to=\"/\">\n                    <Button variant=\"secondary\" className=\"px-5\">\n                        \n                        <span style={{color:'#fff'}}>Ok</span>\n                       \n                    </Button>\n                </Link>    \n                </Modal.Footer>\n            </Modal>\n            )\n        }\n\n\n        //array to store answer values and setting it to const\n        const answersarrayUpdater = (qno, answer) => {\n            var answerslocalhere = answers\n\n            var arrayIndex = qno-1;\n            // console.log(\"updated array local\",answerslocalhere)\n            answerslocalhere[arrayIndex] = answer\n            setAnswers(answerslocalhere)\n            // console.log(\"updated array \", answers)\n            // console.log(\"answers array \", answers)\n        }\n\n\n       \n\n        const QuestionCard = ({text=\"\", a=\"\",b=\"\",c=\"\",d=\"\",qno=\"\"}) => {\n\n            //for design purpose\n            const [optionA, setOptionA] = useState(false)\n            const [optionB, setOptionB] = useState(false)\n            const [optionC, setOptionC] = useState(false)\n            const [optionD, setOptionD] = useState(false)\n\n         \n            //below functions for design \n            function onselectA(qno, a) {\n                // console.log(\"a selected\")\n                answersarrayUpdater(qno, a)\n                setOptionA(true)\n                setOptionB(false)\n                setOptionC(false)\n                setOptionD(false)\n            }\n\n            function onselectB(qno, b) {\n                // console.log(\"b selected\")\n                answersarrayUpdater(qno, b)\n                setOptionB(true)\n                setOptionA(false)\n                setOptionC(false)\n                setOptionD(false)\n            }\n\n            function onselectC(qno, c) {\n                // console.log(\"c selected\")\n                answersarrayUpdater(qno, c)\n                setOptionC(true)\n                setOptionA(false)\n                setOptionB(false)\n                setOptionD(false)\n            }\n\n            function onselectD(qno, d) {\n                // console.log(\"d selected\")\n                answersarrayUpdater(qno, d)\n                setOptionD(true)\n                setOptionA(false)\n                setOptionB(false)\n                setOptionC(false)\n            }\n            \n            return(\n                <Card  style={{marginTop:'2vh',marginBottom:'2vh', padding:'2em', borderRadius:'5px'}}>\n                    <Card.Text>\n                        {qno}. {text}\n                    </Card.Text>\n\n                    <Container>\n                    <Row>\n                        <Col lg={6} md={6} sm={12} xs={12}>\n                            <span style={{display:'block'}}>\n                                a. <Button variant=\"light\" style={ optionA ? buttonstyle.buttonactive : buttonstyle.buttoninactive } className=\"mx-1 my-1\"  onClick={() => onselectA(qno,a)}> {a} </Button>\n                            </span>\n                        </Col>\n                        \n                        <Col lg={6} md={6} sm={12} xs={12}>\n                            <span style={{display:'block'}}>\n                                b. <Button variant=\"light\" style={ optionB ? buttonstyle.buttonactive : buttonstyle.buttoninactive } className=\"mx-1 my-1\"  onClick={() => onselectB(qno,b)}> {b} </Button>\n                            </span>\n                        </Col>\n                    </Row>    \n\n                    <Row>\n                        <Col lg={6} md={6} sm={12} xs={12}>\n                            <span style={{display:'block'}}>\n                                c. <Button variant=\"light\" style={ optionC ? buttonstyle.buttonactive : buttonstyle.buttoninactive } className=\"mx-1 my-1\"  onClick={() => onselectC(qno,c)}> {c} </Button>\n                            </span>\n                        </Col>\n                        \n                        <Col lg={6} md={6} sm={12} xs={12}>\n                            <span style={{display:'block'}}>\n                                d. <Button variant=\"light\" style={ optionD ? buttonstyle.buttonactive : buttonstyle.buttoninactive } className=\"mx-1 my-1\"  onClick={() => onselectD(qno,d)}> {d} </Button>\n                            </span>\n                        </Col>\n                 \n                    </Row>\n                    </Container>\n                   \n                </Card>\n            )\n        }\n\n\n\n\n    \n\n       \n\n      \n\n        function testStatus(){\n            if(testValues !== null){\n                // console.log(\"testvalues\",testValues)\n                var startDate = new Date(String(testValues.startTime)).getTime()\n                var endDate = new Date(String(testValues.endTime)).getTime()\n                var currentDate = new Date().getTime()\n\n                if(currentDate >= startDate && endDate >= currentDate ){\n                    return \"active\";\n                }\n                else if(startDate > currentDate ){\n                    return \"upcoming\";\n                }\n                else if(currentDate > endDate){\n                    return \"over\"\n                }\n\n            }\n            else{\n                return \"error\"\n            }\n        }\n\n\n\n        function MyTimer({ expiryTimestamp }) {\n            const {\n              seconds,\n              minutes,\n              hours,\n              days,\n              isRunning,\n            } = useTimer({ expiryTimestamp, onExpire: () => console.log(\"\",onSubmit()),  autoStart: true,});\n          \n          \n            return (\n                <Container fluid>\n                <Container style={{marginTop:\"3vh\",marginBottom:\"3vh\", display:'flex', alignItems:'center', justifyContent:'center'}}>\n                    <div>\n                        <Row>\n                            <Col style={{textAlign:'center'}}>\n                                <p style={{fontSize:'1em'}}>Timer</p>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <div style={{fontSize:'1.5em', fontWeight:'bold'}}> {hours}h : {minutes}m : {seconds}s</div>\n                            </Col>\n                        </Row>\n                    </div>\n                </Container>\n                </Container>\n            );\n          }\n\n          const time = new Date(String(new Date()));\n          time.setSeconds(time.getSeconds() + testDuration); \n\n        \n\n        const testUpcomingScreen = () => {\n            if(testStatus() == \"upcoming\"){\n                return(\n                    <Container fluid style={{marginBottom:'25vh', marginTop:'25vh'}}>\n                        <Container style={{marginTop:'40vh', marginBottom:'30vh'}}>\n                        <Row>\n                            <Col style={{display:'flex', alignItems:'center', justifyContent:'center'}}>\n                                <h1>This test hasn't started yet. Come Back later.</h1>\n                            </Col>\n                        </Row>\n                        </Container>\n                    </Container>\n                )\n            }\n        }\n\n\n        const testOverScreen = () => {\n            if(testStatus() == \"over\"){\n                return(\n                    <Container fluid style={{marginBottom:'25vh', marginTop:'25vh'}}>\n                        <Container style={{marginTop:'40vh', marginBottom:'30vh'}}>\n                        <Row>\n                            <Col style={{display:'flex', alignItems:'center', justifyContent:'center'}}>\n                                <h1>This test is over</h1>\n                            </Col>\n                        </Row>\n                        </Container>\n                    </Container>\n                )\n            }\n        }\n\n\n        const somethingWentWrong = () => {\n            if(testStatus() == \"error\"){\n                return(\n                    <h1>Someting went wrong</h1>\n                )\n            }\n        }\n\n        const testOngoingScreen = () => {\n            if(testStatus() == \"active\"){\n                return(\n                    <Container fluid style={{marginBottom:'5vh'}}>\n                    \n                    <MyTimer expiryTimestamp={time}/>\n                 \n                    <Container style={{marginTop:'5vh', marginBottom:'3vh'}}>\n                        <Row>\n                            <Col lg={{order: 'first', span: 6}} md={{order: 'first', span: 6}} sm={{order: 'last', span:12}} xs={{order: 'last', span: 12}} style={{display:'flex', flexDirection:'column-reverse', minWidth:'100px' }}><h2 className=\"mt-2 mb-2\"> {testValues.name} </h2></Col>\n                            <Col lg={{order: 'last', span: 6}} md={{order: 'last', span: 6}} sm={{order: 'first', span: 12}} xs={{order: 'first', span: 12}} style={{textAlign:'right', minWidth:'100px', display:'block'}} >\n                              {/* <span style={{fontSize:'0.9em'}}>  {studentName} </span> <br/>\n                              <span style={{fontSize:'0.9em'}}>  {contactNumber} </span> <br/>\n                              <span style={{fontSize:'0.9em'}}> {email} </span>  */}\n\n                              <span style={{fontSize:'0.9em'}}>N Venugopal Reddy </span> <br/>\n                              <span style={{fontSize:'0.8em'}}>- Director-Admissions </span> <br/>\n                              <span style={{fontSize:'0.9em'}}>+919949166771, +919985165771 </span> \n                            </Col>\n                        </Row>\n                    </Container>\n\n\n                    {formModal()}\n        \n        \n                    <Container>\n                    { testValues && testValues.questions.map(question => {\n                       \n                        return(\n                            <QuestionCard qno={question.no} text={question.text} a={question.a} b={question.b} c={question.c} d={question.d} />\n                        )\n                    })}\n                    </Container>\n        \n                    <Container style={{display:'flex', alignItems:'center', justifyContent:'center', marginTop:'3vh'}}>\n                        <Button onClick={onSubmit} variant=\"secondary\" className=\"px-5\" size=\"lg\" block>Submit</Button>\n                    </Container>\n    \n                    \n                    </Container>\n                )\n            }\n        }\n\n\n        if(loading == true){\n            return(\n                <LoadingScreen />\n            )\n        }\n\n\n       \n       return(\n           <>\n\n           {testStatus() == \"upcoming\" && (\n            testUpcomingScreen()\n           )}\n           \n           {testStatus() == \"over\" && (\n            testOverScreen()\n           )}\n           \n           \n            {testOngoingScreen()}\n            \n            {afterSubmitModal()}\n           \n           {somethingWentWrong()}\n\n{testGivenModal()}\n\n            <FooterBar />\n           </>\n       )\n\n        \n\n\n\n}\n\nexport default SubmitTest;\n\nconst buttonstyle = {\n    buttonactive:{\n        backgroundColor:\"#bbbbbb\",\n        minWidth:'50%',\n        textAlign:'left',\n        border: '2px solid #bbbbbb'\n    },\n    buttoninactive:{\n        backgroundColor:\"#f6f6f6\",\n        minWidth:'50%',\n        textAlign:'left',\n        border: '2px solid #bbbbbb'\n    }\n}","//modules import\nimport React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\n\n//custom created route import\nimport AdminRoute from './customRoutes/AdminRoute'\n\n//admin pages import\nimport AdminDashboardPage from './pages/adminDashboard/AdminDashboardPage'\nimport CreateTestPage from './pages/adminDashboard/CreateTestPage'\nimport ViewAllSubmissionsPage from './pages/adminDashboard/ViewAllSubmissionsPage'\nimport ViewSubmissionsByTest from './pages/adminDashboard/ViewSubmissionsByTest'\nimport ViewAllTestsPage from './pages/adminDashboard/ViewAllTestsPage'\nimport DeleteTestsPage from './pages/adminDashboard/DeleteTestsPage'\n\n//public pages import\nimport Home from './pages/homepage/HomePage'\nimport Signup from './pages/signup/Signup'\nimport Signin from './pages/signin/Signin'\nimport SubmitTest from './pages/userpage/SubmitTest'\n\n\n\nconst Routes = () => {\n    console.log(\"env\", process.env)\n    return(\n        <BrowserRouter>\n            <Switch>\n            \n                <Route path=\"/\" exact component={Home} />\n                <Route path=\"/signup\" exact component={Signup} />\n                <Route path=\"/signin\" exact component={Signin} />\n                <Route path=\"/test/submit/:testId\" exact component={SubmitTest} />\n\n                <AdminRoute path=\"/admin/dashboard\" exact component={AdminDashboardPage} />\n                <AdminRoute path=\"/admin/createtest\" exact component={CreateTestPage} />\n                <AdminRoute path=\"/admin/submissions/all\" exact component={ViewAllSubmissionsPage} />\n                <AdminRoute path=\"/admin/tests/all\" exact component={ViewAllTestsPage} />\n                <AdminRoute path=\"/admin/tests/delete\" exact component={DeleteTestsPage} />\n                <AdminRoute path=\"/test/submissions/:testId\" exact component={ViewSubmissionsByTest} />\n                \n                \n            </Switch>\n        </BrowserRouter>\n    )\n}\n\nexport default Routes;","import React from 'react'\nimport Routes from \"./Routes\"\nimport ReactDOM from 'react-dom'\n\nReactDOM.render(<Routes />, document.getElementById(\"root\"))"],"sourceRoot":""}