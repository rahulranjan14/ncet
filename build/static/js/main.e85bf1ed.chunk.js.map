{"version":3,"sources":["apiCalls/auth.js","customRoutes/AdminRoute.js","components/header/NavigationBar.js","components/footer/FooterBar.js","components/base/Base.js","pages/adminDashboard/AdminDashboardPage.js","apiCalls/adminApis.js","pages/adminDashboard/CreateTestPage.js","components/loader/LoadingScreen.js","pages/adminDashboard/ViewAllSubmissionsPage.js","pages/adminDashboard/ViewSubmissionsByTest.js","components/testCard/AdminTestCard.js","pages/adminDashboard/ViewAllTestsPage.js","components/testCard/DeleteTestCard.js","pages/adminDashboard/DeleteTestsPage.js","components/testCard/TestCard.js","pages/homepage/homepageStyle.js","assets/ncetlogobg1.png","components/collegeInfo/CollegeInfo.js","pages/homepage/HomePage.js","pages/signup/Signup.js","pages/signin/Signin.js","apiCalls/userApis.js","pages/userpage/SubmitTest.js","Routes.js","index.js","backend.js"],"names":["isAuthenticated","window","localStorage","getItem","JSON","parse","AdminRoute","Component","component","rest","render","props","user","role","to","pathname","state","from","location","withRouter","Navbar","collapseOnSelect","expand","bg","variant","Container","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","apply","Link","onClick","next","removeItem","fetch","API","method","then","response","console","log","catch","err","signout","FooterBar","fluid","Row","Col","lg","md","sm","xs","size","color","style","marginLeft","marginRight","display","justifyContent","alignItems","Base","children","AdminDashboardPage","marginTop","marginBottom","flexDirection","Button","minWidth","require","getSubmissions","userId","token","testId","headers","Accept","Authorization","body","stringify","json","CreateTestPage","useState","name","description","startTime","endTime","duration","testDetails","setTestDetails","questions","setQuestions","answers","setAnswers","testCreationSuccess","setTestCreationSuccess","handleCloseAfterSubmit","handleChange","event","target","value","submitTestDetails","preventDefault","details","submitTest","_id","data","Header","Form","Group","controlId","Label","Control","type","placeholder","onChange","fontSize","e","file","Promise","resolve","reject","fileReader","FileReader","readAsArrayBuffer","onload","bufferArray","result","wb","XLSX","wsname","SheetNames","ws","Sheets","sheet_to_json","onerror","error","d","questionsLocal","answersLocal","i","length","temp","no","text","a","b","c","answer","String","trim","push","readExcel","files","idx","overflowX","map","question","DisplayExcelData","Modal","show","onHide","backdrop","keyboard","Body","Footer","textDecoration","LoadingScreen","width","height","timeout","ViewAllSubmissions","testsList","setTestsList","loading","setLoading","loadalltestsubmissions","axios","get","useEffect","exceldownloadname","alignIntems","table","filename","sheet","buttonText","submission","studentName","email","contactNumber","score","ViewSubmissionsByTest","match","submissions","setSubmissions","loadtestDetails","loadtestsubmissions","params","AdminTestCard","testName","testDescription","testDuration","Card","boxShadow","borderRadius","Title","Subtitle","Text","process","textAlign","ViewAllTests","loadalltests","testspageStyle","testsListingContainer","test","noTestsContainer","flexWrap","rowGap","columnGap","paddingTop","paddingBottom","DelTestCard","deleteTest","delete","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","transition","block","DeleteTestsPage","DeleteTestCard","TestCard","startDate","Date","getTime","endDate","currentDate","homepageStyle","CollegeInfo","padding","xl","Image","src","ncetlogobg1","rounded","HomePage","currentTestsList","setCurrentTestsList","upcomingTestsList","setUpcomingTestsList","previousTestsList","setPreviousTestsList","currentTestsListLocal","upcomingTestsListLocal","previousTestsListLocal","Signup","password","success","userData","setUserData","missing","setMissing","onSubmit","fieldsMissingMessage","Signin","didRedirect","signinFunction","setItem","authenticate","SubmitTest","showFormModal","setShowFormModal","showAfterSubmitModal","setShowAfterSubmitModal","handleClose","testValues","setTestValues","nameError","setNameError","emailError","setEmailError","phoneError","setPhoneError","submitValues","setSubmitValues","setTestEndTime","setTestDuration","initializeAnswersArray","arraylen","loadTest","testIde","submitFormDetails","nameErrorMessage","emailErrorMessage","phoneErrorMessage","nameChecker","emailChecker","phoneChecker","answersarrayUpdater","qno","answerslocalhere","QuestionCard","optionA","setOptionA","optionB","setOptionB","optionC","setOptionC","optionD","setOptionD","buttonstyle","buttonactive","buttoninactive","onselectA","onselectB","onselectC","onselectD","testStatus","MyTimer","expiryTimestamp","useTimer","onExpire","autoStart","seconds","minutes","hours","days","isRunning","fontWeight","time","setSeconds","getSeconds","testUpcomingScreen","testOverScreen","order","span","testOngoingScreen","somethingWentWrong","backgroundColor","border","Routes","path","exact","Home","ViewAllSubmissionsPage","ViewAllTestsPage","ReactDOM","document","getElementById"],"mappings":"8TA4DaA,EAAkB,WAG3B,MAAqB,oBAAVC,WAGPC,aAAaC,QAAQ,QACdC,KAAKC,MAAMH,aAAaC,QAAQ,U,uBC1C9BG,EApBE,SAAC,GAAuC,IAA1BC,EAAyB,EAApCC,UAAyBC,EAAW,iBACtD,OACE,cAAC,IAAD,2BACMA,GADN,IAEEC,OAAS,SAAAC,GAAK,OACZX,KAAoD,IAA/BA,IAAkBY,KAAKC,KAC5C,cAACN,EAAD,eAAeI,IAEb,cAAC,IAAD,CACEG,GAAI,CACFC,SAAU,UACVC,MAAO,CAAEC,KAAMN,EAAMO,kB,qDCiDtBC,eAxDc,WACzB,OACI,cAACC,EAAA,EAAD,CAAQC,kBAAgB,EAACC,OAAO,KAAKC,GAAG,OAAOC,QAAQ,OAAvD,SACE,eAACC,EAAA,EAAD,WACE,cAACL,EAAA,EAAOM,MAAR,CAAcC,KAAK,IAAnB,8BACA,cAACP,EAAA,EAAOQ,OAAR,CAAeC,gBAAc,0BAC3B,eAACT,EAAA,EAAOU,SAAR,CAAiBC,GAAG,wBAApB,UAEE,cAACC,EAAA,EAAD,CAAKC,UAAU,YAGf,eAACD,EAAA,EAAD,WAEGhC,KAA0D,IAArCA,EAAgBkC,QAAQtB,KAAKC,MACjD,cAACmB,EAAA,EAAIG,KAAL,UACE,cAAC,IAAD,CAAMrB,GAAG,mBAAmBmB,UAAU,uCAAtC,gCAOFjC,KACA,qCACA,cAACgC,EAAA,EAAIG,KAAL,UACE,cAAC,IAAD,CAAMrB,GAAG,UAAUmB,UAAU,uCAA7B,uBAIF,cAACD,EAAA,EAAIG,KAAL,UACE,cAAC,IAAD,CAAMrB,GAAG,UAAUmB,UAAU,uCAA7B,0BAOHjC,KACC,cAACgC,EAAA,EAAIG,KAAL,UACA,cAAC,IAAD,CAAMrB,GAAG,IAAIsB,QAAS,YFHnB,SAAAC,GAEnB,GAAsB,qBAAXpC,OACPC,aAAaoC,WAAW,OACxBD,IAEOE,MAAM,GAAD,OAAIC,MAAJ,YAAmB,CAC3BC,OAAQ,QAEXC,MAAK,SAAAC,GAAQ,OAAIC,QAAQC,IAAI,0BAC7BC,OAAM,SAAAC,GAAG,OAAIH,QAAQC,IAAIE,MENZC,EAAQ,WACL,QAEFf,UAAU,uCAJb,sC,+BCKLgB,EAzCG,WACd,OACI,cAACxB,EAAA,EAAD,CAAWyB,OAAK,EAACjB,UAAU,0BAA3B,SACI,eAACR,EAAA,EAAD,WAEI,eAAC0B,EAAA,EAAD,WAEI,eAACC,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAIC,GAAI,GAAIvB,UAAU,8BAA7C,UACI,mBAAGA,UAAU,eAAb,iDAEA,sBAAKA,UAAU,gBAAf,UACI,cAAC,IAAD,CAAgBwB,KAAK,QAAQC,MAAM,SADvC,IACiD,mBAAG/B,KAAK,gCAAgCM,UAAU,YAAlD,oCAC7C,cAAC,IAAD,CAAawB,KAAK,QAAQC,MAAM,OAAOC,MAAO,CAACC,WAAW,UAF9D,IAE0E,mBAAGjC,KAAK,iBAAiBM,UAAU,YAAnC,8BAI9E,eAACmB,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAIC,GAAI,GAAIvB,UAAU,6BAA7C,UACI,mBAAGA,UAAU,eAAb,8BACA,sBAAKA,UAAU,kBAAf,UACI,mBAAGN,KAAK,8DAAR,SAAsE,cAAC,IAAD,CAAY8B,KAAK,QAAQE,MAAO,CAACE,YAAY,MAAOD,WAAW,OAAQF,MAAM,WACnJ,mBAAG/B,KAAK,uDAAR,SAA+D,cAAC,IAAD,CAAY8B,KAAK,QAAQE,MAAO,CAACE,YAAY,MAAOD,WAAW,OAAQF,MAAM,WAC5I,mBAAG/B,KAAK,0CAAR,SAAkD,cAAC,IAAD,CAAW8B,KAAK,QAAQE,MAAO,CAACE,YAAY,MAAOD,WAAW,OAAQF,MAAM,WAC9H,mBAAG/B,KAAK,gEAAR,SAAwE,cAAC,IAAD,CAAa8B,KAAK,QAAQE,MAAO,CAACE,YAAY,MAAOD,WAAW,OAAQF,MAAM,WACtJ,mBAAG/B,KAAK,2DAAR,SAAmE,cAAC,IAAD,CAAW8B,KAAK,QAAQE,MAAO,CAACE,YAAY,MAAOD,WAAW,OAAQF,MAAM,oBAK3J,oBAAIzB,UAAU,YAEd,cAACkB,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAKO,MAAO,CAACG,QAAQ,OAAQC,eAAe,SAAUC,WAAW,UAAjE,SACI,sBAAM/B,UAAU,iBAAhB,+FCjBTgC,G,OAlBF,SAAC,GAAgC,IAAD,IAA7BhC,iBAA6B,MAAnB,GAAmB,EAAfiC,EAAe,EAAfA,SAG1B,OACI,gCACI,cAAC,EAAD,IACI,qBAAKjC,UAAU,QAAf,SACI,qBAAKA,UAAWA,EAAhB,SAA4BiC,MAEpC,cAAC,EAAD,SCgBGC,EA1BY,WACvB,OACI,cAAC,EAAD,UAEI,eAAC1C,EAAA,EAAD,CAAWkC,MAAO,CAACS,UAAU,OAAQC,aAAa,QAAlD,UACI,cAAClB,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAKO,MAAO,CAACG,QAAQ,OAAQE,WAAW,SAAUD,eAAe,UAAjE,SACI,qDAKR,cAACZ,EAAA,EAAD,UACI,eAAC1B,EAAA,EAAD,CAAWkC,MAAO,CAACG,QAAQ,OAAQE,WAAW,SAAUD,eAAe,SAAUO,cAAc,SAAUF,UAAU,OAAQC,aAAa,QAAxI,UACI,cAAC,IAAD,CAAMvD,GAAE,oBAAR,SAA+B,cAACyD,EAAA,EAAD,CAAQ/C,QAAQ,YAAYiC,KAAK,KAAKxB,UAAU,YAAY0B,MAAO,CAAEa,SAAS,QAA9E,+BAEhC,cAAC,IAAD,CAAM1D,GAAE,mBAAR,SAA8B,cAACyD,EAAA,EAAD,CAAQ/C,QAAQ,YAAYiC,KAAK,KAAKxB,UAAU,YAAY0B,MAAO,CAAEa,SAAS,QAA9E,yCAC7B,cAAC,IAAD,CAAM1D,GAAE,sBAAR,SAAiC,cAACyD,EAAA,EAAD,CAAQ/C,QAAQ,YAAYiC,KAAK,KAAKxB,UAAU,YAAY0B,MAAO,CAAEa,SAAS,QAA9E,sC,iCCzBjDhC,EAAQiC,EAAQ,IAAhBjC,IAsBKkC,EAAiB,SAACC,EAAQC,EAAOC,GAE1C,OAAOtC,MAAM,GAAD,OAAIC,EAAJ,iCAAgCmC,GAAU,CAClDlC,OAAQ,OACRqC,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChBC,cAAc,UAAD,OAAYJ,IAE7BK,KAAM7E,KAAK8E,UAAUL,KAExBnC,MAAK,SAAAC,GACF,OAAOA,EAASwC,UAEnBrC,OAAM,SAAAC,GAAG,OAAIH,QAAQC,IAAIE,O,QC+PfqC,G,MApRQ,WAEnB,MAAsBpF,IAAfY,EAAP,EAAOA,KAAMgE,EAAb,EAAaA,MAEb,EAAsCS,mBAClC,CACIC,KAAK,GACLC,YAAY,GACZC,UAAU,GACVC,QAAQ,GACRC,SAAS,KANjB,mBAAOC,EAAP,KAAoBC,EAApB,KAUA,EAAkCP,mBAAS,IAA3C,mBAAOQ,EAAP,KAAkBC,EAAlB,KACA,EAA8BT,mBAAS,IAAvC,mBAAOU,EAAP,KAAgBC,EAAhB,KAEA,EAAsDX,oBAAS,GAA/D,mBAAOY,EAAP,KAA4BC,EAA5B,KAEQZ,EAAoDK,EAApDL,KAAMC,EAA8CI,EAA9CJ,YAAaC,EAAiCG,EAAjCH,UAAWC,EAAsBE,EAAtBF,QAASC,EAAaC,EAAbD,SAEzCS,EAAyB,kBAAMD,GAAuB,IAEtDE,EAAe,SAAAd,GAAI,OAAI,SAAAe,GACzBT,EAAe,2BAAID,GAAL,kBAAmBL,EAAOe,EAAMC,OAAOC,WAQnDC,EAAoB,SAACH,GACvBA,EAAMI,iBD9CY,SAAC9B,EAAQC,EAAO8B,GAGtC,OAAOnE,MAAM,GAAD,OAAIC,EAAJ,wBAAuBmC,GAAU,CACzClC,OAAQ,OACRqC,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChBC,cAAc,UAAD,OAAYJ,IAE7BK,KAAM7E,KAAK8E,UAAUwB,KAExBhE,MAAK,SAAAC,GACF,OAAOA,EAASwC,UAEnBrC,OAAM,SAAAC,GAAG,OAAIH,QAAQC,IAAIE,MCgCtB4D,CAAW/F,EAAKgG,IAAKhC,EAAO,CAAEU,OAAMC,cAAaC,YAAWC,UAASC,WAAUG,YAAWE,YACzFrD,MAAK,SAAAmE,GAEFX,GAAuB,MAE1BpD,OAAM,SAAAC,GAAG,OAAIH,QAAQC,IAAI,2BAA2BE,OA2HnD+D,EAAS,WACX,OACI,cAACrF,EAAA,EAAD,CAAWkC,MAAO,CAACS,UAAU,OAAQC,aAAa,QAAlD,SACI,cAAClB,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAKO,MAAO,CAACG,QAAQ,OAAQC,eAAe,SAAUC,WAAW,UAAjE,SACI,0DAwFpB,OAEI,eAAC,EAAD,WACA,cAAC8C,EAAD,IArNI,cAACrF,EAAA,EAAD,CAAWQ,UAAU,+CAArB,SACI,cAACkB,EAAA,EAAD,UACI,eAAC4D,EAAA,EAAD,WAEA,eAACA,EAAA,EAAKC,MAAN,CAAY/E,UAAU,OAAOgF,UAAU,gBAAvC,UACI,cAACF,EAAA,EAAKG,MAAN,wBACA,cAACH,EAAA,EAAKI,QAAN,CAAcC,KAAK,OAAOC,YAAY,uBAAuBC,SAAUlB,EAAa,QAASG,MAAOjB,OAGxG,eAACyB,EAAA,EAAKC,MAAN,CAAY/E,UAAU,OAAOgF,UAAU,uBAAvC,UACI,cAACF,EAAA,EAAKG,MAAN,+BACA,cAACH,EAAA,EAAKI,QAAN,CAAcC,KAAK,OAAOC,YAAY,yBAAyBC,SAAUlB,EAAa,eAAgBG,MAAOhB,OAGjH,eAACwB,EAAA,EAAKC,MAAN,CAAY/E,UAAU,OAAOgF,UAAU,gBAAvC,UACI,cAACF,EAAA,EAAKG,MAAN,yBACA,cAACH,EAAA,EAAKI,QAAN,CAAcC,KAAK,OAAOC,YAAY,mEAAmEC,SAAUlB,EAAa,aAAcG,MAAOf,OAGzJ,eAACuB,EAAA,EAAKC,MAAN,CAAY/E,UAAU,OAAOgF,UAAU,gBAAvC,UACI,cAACF,EAAA,EAAKG,MAAN,uBACA,cAACH,EAAA,EAAKI,QAAN,CAAcC,KAAK,OAAOC,YAAY,mEAAmEC,SAAUlB,EAAa,WAAYG,MAAOd,OAGvJ,eAACsB,EAAA,EAAKC,MAAN,CAAY/E,UAAU,OAAOgF,UAAU,oBAAvC,UACI,cAACF,EAAA,EAAKG,MAAN,oCACA,cAACH,EAAA,EAAKI,QAAN,CAAcC,KAAK,SAASC,YAAY,UAAUC,SAAUlB,EAAa,YAAaG,MAAOb,cA6EzG,eAACjE,EAAA,EAAD,CAAWQ,UAAU,0CAArB,UACI,uBAAO0B,MAAO,CAAC4D,SAAS,SAAUtF,UAAU,OAA5C,mCACA,uBACAmF,KAAK,OACLE,SAAU,SAACE,IAnEL,SAACC,GACC,IAAIC,SAAQ,SAACC,EAASC,GACpC,IAAMC,EAAa,IAAIC,WACvBD,EAAWE,kBAAkBN,GAE7BI,EAAWG,OAAS,SAACR,GACnB,IAAMS,EAAcT,EAAElB,OAAO4B,OAEvBC,EAAKC,OAAUH,EAAa,CAAEb,KAAM,WAEpCiB,EAASF,EAAGG,WAAW,GAEvBC,EAAKJ,EAAGK,OAAOH,GAEfxB,EAAOuB,QAAWK,cAAcF,GAEtCZ,EAAQd,IAGVgB,EAAWa,QAAU,SAACC,GACpBf,EAAOe,OAIHjG,MAAK,SAACkG,GAOZ,IAHF,IAAIC,EAAiB,GACjBC,EAAe,GAERC,EAAI,EAAGA,EAAIH,EAAEI,OAAQD,IAAK,CAC/B,IAAIE,EAAK,CACLC,GAAG,GACHC,KAAK,GACLC,EAAE,GACFC,EAAE,GACFC,EAAE,GACFV,EAAE,IAEFW,EAASC,OAAOZ,EAAEG,GAAGQ,QAAQE,OAEjCR,EAAKC,GAAKN,EAAEG,GAAGG,GACfD,EAAKE,KAAOK,OAAOZ,EAAEG,GAAGI,MAAMM,OAC9BR,EAAKG,EAAII,OAAOZ,EAAEG,GAAGK,GAAGK,OACxBR,EAAKI,EAAIG,OAAOZ,EAAEG,GAAGM,GAAGI,OACxBR,EAAKK,EAAIE,OAAOZ,EAAEG,GAAGO,GAAGG,OACxBR,EAAKL,EAAIY,OAAOZ,EAAEG,GAAGH,GAAGa,OAExBZ,EAAea,KAAKT,GACpBH,EAAaY,KAAKH,GAItBzD,EAAa+C,GACb7C,EAAW8C,MAcLa,CADanC,EAAElB,OAAOsD,MAAM,UAsBf,WACrB,IAAIC,GAAO,EACX,OACI,cAACpI,EAAA,EAAD,CAAWyB,OAAK,EAACjB,UAAU,YAA3B,SACI,cAACkB,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAKO,MAAO,CAACmG,UAAU,QAAvB,SACI,wBAAO/H,GAAG,eAAV,UACI,+BACI,oBAAIE,UAAU,QAAd,gBACA,oBAAIA,UAAU,QAAd,kBACA,oBAAIA,UAAU,QAAd,eACA,oBAAIA,UAAU,QAAd,eACA,oBAAIA,UAAU,QAAd,eACA,oBAAIA,UAAU,QAAd,eACA,oBAAIA,UAAU,QAAd,uBAGP4D,EAAUkE,KAAI,SAAAC,GAEX,OADAH,GAAU,EAEN,+BACI,oBAAI5H,UAAU,aAAd,SAA6B+H,EAASd,KACtC,oBAAIjH,UAAU,aAAd,SAA6B+H,EAASb,OACtC,oBAAIlH,UAAU,aAAd,SAA6B+H,EAASZ,IACtC,oBAAInH,UAAU,aAAd,SAA6B+H,EAASX,IACtC,oBAAIpH,UAAU,aAAd,SAA6B+H,EAASV,IACtC,oBAAIrH,UAAU,aAAd,SAA6B+H,EAASpB,IACtC,oBAAI3G,UAAU,aAAd,SAA6B8D,EAAQ8D,oBA8DhEI,GA9CG,cAACxI,EAAA,EAAD,UACI,cAAC0B,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAKO,MAAO,CAACG,QAAQ,OAAQC,eAAe,SAAUC,WAAW,UAAjE,SACI,cAACO,EAAA,EAAD,CAAQ/C,QAAQ,YAAYiC,KAAK,KAAKxB,UAAU,YAAY0B,MAAO,CAAEa,SAAS,QAAQpC,QAASoE,EAA/F,0BASZ,eAAC0D,EAAA,EAAD,CACAC,KAAMlE,EACNmE,OAAQjE,EACRkE,SAAS,SACTC,UAAU,EAJV,UAOI,cAACJ,EAAA,EAAMK,KAAP,wCAKA,cAACL,EAAA,EAAMM,OAAP,UACA,cAAC,IAAD,CAAM7G,MAAO,CAAC8G,eAAe,QAAS3J,GAAG,mBAAzC,SACI,cAACyD,EAAA,EAAD,CAAQ/C,QAAQ,YAAYS,UAAU,OAAtC,SAEI,sBAAM0B,MAAO,CAACD,MAAM,QAApB,8B,0CChPTgH,G,OAhBO,WAClB,OACI,cAACjJ,EAAA,EAAD,CAAWyB,OAAK,EAACS,MAAO,CAACgH,MAAM,OAAQC,OAAO,QAAS9G,QAAQ,OAAQE,WAAW,SAAUD,eAAe,UAA3G,SACO,8BACK,cAAC,IAAD,CACIqD,KAAK,OACL1D,MAAM,UACNkH,OAAQ,GACRD,MAAO,GACPE,QAAS,Y,iBCmHlBC,EAhHY,WAEvB,MAAsB9K,IAAfY,EAAP,EAAOA,KAAMgE,EAAb,EAAaA,MAEb,EAAkCS,mBAAS,IAA3C,mBAAO0F,EAAP,KAAkBC,EAAlB,KACA,EAA0B3F,oBAAS,GAAnC,mBAEA,GAFA,UAE8BA,oBAAS,IAAvC,mBAAO4F,EAAP,KAAgBC,EAAhB,KAGMC,EAAsB,uCAAG,8BAAA/B,EAAA,+EAEFgC,IAAMC,IAAN,UAAa7I,MAAb,4BAAoC5B,EAAKgG,KAC9D,CAAE9B,QAAS,CAAC,+BAA4BF,MAHjB,gBAEhBiC,EAFgB,EAEhBA,KAKPmE,EAAanE,GAEbqE,GAAW,GATY,gDAYvBtI,QAAQC,IAAR,MAZuB,yDAAH,qDAgB5ByI,qBAAU,WACNH,MACF,IAEF,IAYII,EAAoB,iBAkDxB,OAAc,GAAXN,EAEK,cAAC,EAAD,IAMJ,eAAC,EAAD,WApEI,cAACxJ,EAAA,EAAD,UACI,cAAC0B,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAKO,MAAO,CAACG,QAAQ,OAAQ0H,YAAY,SAAUzH,eAAe,SAAUK,UAAU,MAAOC,aAAa,OAA1G,SACI,uDAWZ,eAAC5C,EAAA,EAAD,CAAYQ,UAAU,YAAtB,UACA,cAACkB,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAKO,MAAO,CAACG,QAAQ,OAAQQ,cAAc,eAA3C,SAEA,cAAC,IAAD,CACAvC,GAAG,wBACHE,UAAU,sCACVwJ,MAAM,eACNC,SAAUH,EACVI,MAAOJ,EACPK,WAAW,wBAIf,cAACzI,EAAA,EAAD,IACA,cAACA,EAAA,EAAD,UACA,cAACC,EAAA,EAAD,CAAKO,MAAO,CAACmG,UAAU,QAAvB,SACA,uBAAO/H,GAAG,eAAV,SACA,kCACI,+BACI,sCACA,uCACA,uCACA,sCACA,0CAEHgJ,GAAaA,EAAUhB,KAAI,SAAA8B,GACxB,OACI,+BACI,oBAAI5J,UAAU,YAAd,SAA2B4J,EAAWC,cACtC,oBAAI7J,UAAU,YAAd,SAA2B4J,EAAWE,QACtC,oBAAI9J,UAAU,YAAd,SAA2B4J,EAAWG,gBACtC,oBAAI/J,UAAU,YAAd,SAA2B4J,EAAWhH,OAAOS,OAC7C,oBAAIrD,UAAU,YAAd,SAA2B4J,EAAWI,UALjCJ,EAAWjF,wBCsD7BsF,EA/He,SAAC,GAAa,IAAZC,EAAW,EAAXA,MAE5B,EAAsBnM,IAAfY,EAAP,EAAOA,KAAMgE,EAAb,EAAaA,MAEb,EAAsCS,qBAAtC,mBAAoBO,GAApB,WACA,EAAsCP,mBAAS,IAA/C,mBAAO+G,EAAP,KAAoBC,EAApB,KAEA,EAA8BhH,oBAAS,GAAvC,mBAAO4F,EAAP,KAAgBC,EAAhB,KAGMoB,EAAe,uCAAG,WAAOzH,GAAP,iBAAAuE,EAAA,+EAEKgC,IAAMC,IAAN,UAAa7I,MAAb,uBAA+BqC,EAA/B,YAAyCjE,EAAKgG,KACnE,CAAE9B,QAAS,CAAC,+BAA4BF,MAHxB,gBAETiC,EAFS,EAETA,KAKPjB,EAAeiB,GAPC,gDAUhBjE,QAAQC,IAAR,MAVgB,yDAAH,sDAef0J,EAAmB,uCAAG,WAAO1H,GAAP,SAAAuE,EAAA,sDACxB1E,EAAe9D,EAAKgG,IAAKhC,EAAO,CAACC,WAC5BnC,MAAK,SAAAmE,GAEFwF,EAAexF,GACfqE,GAAW,MAEdpI,OAAM,SAAAC,GAAG,OAAIH,QAAQC,IAAI,+BAA+BE,MAPrC,2CAAH,sDAazBuI,qBAAU,WACNgB,EAAgBH,EAAMK,OAAO3H,UAC/B,IAGFyG,qBAAU,WACNiB,EAAoBJ,EAAMK,OAAO3H,UACnC,IAGF,IAaI0G,EAAoB,iBAkDxB,OAAc,GAAXN,EAEK,cAAC,EAAD,IAKJ,eAAC,EAAD,WApEI,cAACxJ,EAAA,EAAD,UACI,cAAC0B,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAKO,MAAO,CAACG,QAAQ,OAAQ0H,YAAY,SAAUzH,eAAe,SAAUK,UAAU,MAAOC,aAAa,OAA1G,SACI,qDAaZ,eAAC5C,EAAA,EAAD,CAAYQ,UAAU,YAAtB,UACA,cAACkB,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAKO,MAAO,CAACG,QAAQ,OAAQQ,cAAc,eAA3C,SAEA,cAAC,IAAD,CACAvC,GAAG,wBACHE,UAAU,sCACVwJ,MAAM,eACNC,SAAUH,EACVI,MAAOJ,EACPK,WAAW,wBAKf,cAACzI,EAAA,EAAD,UACA,cAACC,EAAA,EAAD,CAAKO,MAAO,CAACmG,UAAU,QAAvB,SACA,uBAAO/H,GAAG,eAAV,SACA,kCACI,+BACI,sCACA,uCACA,uCACA,0CAEHqK,GAAeA,EAAYrC,KAAI,SAAA8B,GAC5B,OACI,+BACI,oBAAI5J,UAAU,YAAd,SAA2B4J,EAAWC,cACtC,oBAAI7J,UAAU,YAAd,SAA2B4J,EAAWE,QACtC,oBAAI9J,UAAU,YAAd,SAA2B4J,EAAWG,gBACtC,oBAAI/J,UAAU,YAAd,SAA2B4J,EAAWI,UAJjCJ,EAAWjF,wB,SC/B7B6F,G,MAlEO,SAAC,GAA6F,IAAD,IAA3FC,gBAA2F,MAAlF,GAAkF,MAA9E7H,cAA8E,MAAvE,GAAuE,MAAnEW,iBAAmE,MAAzD,GAAyD,MAArDC,eAAqD,MAA7C,GAA6C,MAAzCkH,uBAAyC,MAAzB,GAAyB,MAArBC,oBAAqB,MAAR,GAAQ,EAE/G,EAAsB5M,IAAtB,EAAOY,KAAP,EAAagE,MA0Bb,OAEI,eAACiI,EAAA,EAAD,CAAMlJ,MAAO,CAAEgH,MAAO,QAASmC,UAAW,mBAAoBC,aAAa,OAAS9K,UAAU,OAA9F,UAIA,eAAC4K,EAAA,EAAKtC,KAAN,WACI,cAACsC,EAAA,EAAKG,MAAN,UAAaN,IACb,eAACG,EAAA,EAAKI,SAAN,CAAetJ,MAAO,CAAC4D,SAAS,SAAUtF,UAAU,uBAApD,oBAAmFuD,KACnF,eAACqH,EAAA,EAAKI,SAAN,CAAetJ,MAAO,CAAC4D,SAAS,SAAUtF,UAAU,uBAApD,kBAAiFwD,KACjF,eAACoH,EAAA,EAAKI,SAAN,CAAetJ,MAAO,CAAC4D,SAAS,SAAUtF,UAAU,uBAApD,wBAAuF2K,EAAvF,cACA,cAACC,EAAA,EAAKK,KAAN,CAAWvJ,MAAO,CAAC4D,SAAS,SAAUtF,UAAU,YAAhD,SACC0K,IAID,eAACE,EAAA,EAAKK,KAAN,CAAWvJ,MAAO,CAAC4D,SAAS,SAAUtF,UAAU,sBAAhD,uBAAgF,uBAAhF,IAAuF4C,KAGvF,eAACgI,EAAA,EAAKK,KAAN,CAAWvJ,MAAO,CAAC4D,SAAS,SAAUtF,UAAU,sBAAhD,uBAAgF,uBAAhF,cAA0FkL,wBAA1F,wBAAwItI,SAK5I,cAACgI,EAAA,EAAKrC,OAAN,CAAa7G,MAAO,CAACyJ,UAAU,UAA/B,SACI,cAAC,IAAD,CAAMtM,GAAE,4BAAuB+D,GAA/B,qCCYGwI,EAnEM,WAEjB,MAAkChI,mBAAS,IAA3C,mBAAO0F,EAAP,KAAkBC,EAAlB,KAEA,EAA8B3F,oBAAS,GAAvC,mBAAO4F,EAAP,KAAgBC,EAAhB,KAEMoC,EAAY,uCAAG,8BAAAlE,EAAA,+EAEQgC,IAAMC,IAAN,UAAa7I,MAAb,eAFR,gBAENqE,EAFM,EAENA,KAEPmE,EAAanE,GACbqE,GAAW,GALE,gDAObtI,QAAQC,IAAR,MAPa,yDAAH,qDAWlByI,qBAAU,WACNgC,MACF,IAgCF,OAAc,GAAXrC,EAEK,cAAC,EAAD,IAKJ,cAAC,EAAD,UAnCI,eAACxJ,EAAA,EAAD,WACI,cAAC0B,EAAA,EAAD,CAAKQ,MAAO,CAACyJ,UAAU,UAAWnL,UAAU,YAA5C,SACI,+CAEJ,cAACR,EAAA,EAAD,CAAWkC,MAAO4J,EAAeC,sBAAjC,SACKzC,GAAgC,GAAnBA,EAAU/B,OAEpB+B,EAAUhB,KAAI,SAAA0D,GACV,OAEI,cAAC,EAAD,CAA8Bf,SAAUe,EAAKnI,KAAMT,OAAQ4I,EAAK1L,GAAIyD,UAAWiI,EAAKjI,UAAWC,QAASgI,EAAKhI,QAASkH,gBAAiBc,EAAKlI,YAAaqH,aAAca,EAAK/H,UAAxJ+H,EAAK7G,QAMjC,cAACnF,EAAA,EAAD,CAAWkC,MAAO4J,EAAeG,iBAAjC,SACI,wDAIZ,6BAyBVH,EAAiB,CAEnBC,sBAAsB,CAClB1J,QAAQ,OACRE,WAAW,UACXD,eAAe,aACf4J,SAAS,OACTC,OAAO,MACPC,UAAU,MACVzJ,UAAU,OAEdsJ,iBAAiB,CACbI,WAAW,MACXC,cAAc,MACdjK,QAAQ,OACRE,WAAW,SACXD,eAAe,W,QCpBRiK,EA/DK,SAAC,GAA6F,IAAD,IAA3FtB,gBAA2F,MAAlF,GAAkF,MAA9E7H,cAA8E,MAAvE,GAAuE,MAAnEW,iBAAmE,MAAzD,GAAyD,MAArDC,eAAqD,MAA7C,GAA6C,MAAzCkH,uBAAyC,MAAzB,GAAyB,MAArBC,oBAAqB,MAAR,GAAQ,EAE7G,EAAsB5M,IAAfY,EAAP,EAAOA,KAAMgE,EAAb,EAAaA,MAIPqJ,EAAU,uCAAG,sBAAA7E,EAAA,sEAETgC,IAAM8C,OAAN,UAAgB1L,MAAhB,wBAAmCqC,EAAnC,YAA6CjE,EAAKgG,KAAO,CAC3D9B,QAAS,CACPE,cAAc,UAAD,OAAYJ,MAE1BlC,MAAK,SAACC,GAET,OAAOwL,YAAM,mCACb,CACEC,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVC,WAAY,aAjBD,2CAAH,qDAsBhB,OAEI,eAAC/B,EAAA,EAAD,CAAMlJ,MAAO,CAAEgH,MAAO,QAASmC,UAAW,mBAAoBC,aAAa,OAAS9K,UAAU,OAA9F,UAEA,cAAC,IAAD,IAEA,eAAC4K,EAAA,EAAKtC,KAAN,WACI,cAACsC,EAAA,EAAKG,MAAN,UAAaN,IACb,eAACG,EAAA,EAAKI,SAAN,CAAetJ,MAAO,CAAC4D,SAAS,SAAUtF,UAAU,uBAApD,oBAAmFuD,KACnF,eAACqH,EAAA,EAAKI,SAAN,CAAetJ,MAAO,CAAC4D,SAAS,SAAUtF,UAAU,uBAApD,kBAAiFwD,KACjF,eAACoH,EAAA,EAAKI,SAAN,CAAetJ,MAAO,CAAC4D,SAAS,SAAUtF,UAAU,uBAApD,wBAAuF2K,EAAvF,cACA,cAACC,EAAA,EAAKK,KAAN,CAAWvJ,MAAO,CAAC4D,SAAS,SAAUtF,UAAU,YAAhD,SACC0K,IAID,eAACE,EAAA,EAAKK,KAAN,CAAWvJ,MAAO,CAAC4D,SAAS,SAAUtF,UAAU,sBAAhD,uBAAgF,uBAAhF,IAAuF4C,QAU3F,cAACgI,EAAA,EAAKrC,OAAN,CAAa7G,MAAO,CAACyJ,UAAU,UAA/B,SACA,cAAC7I,EAAA,EAAD,CAAQ/C,QAAQ,eAAiBY,QAAS6L,EAAYY,OAAK,EAA3D,0BCUOC,EAnEU,WAErB,MAAkCzJ,mBAAS,IAA3C,mBAAO0F,EAAP,KAAkBC,EAAlB,KAEA,EAA8B3F,oBAAS,GAAvC,mBAAO4F,EAAP,KAAgBC,EAAhB,KAEMoC,EAAY,uCAAG,8BAAAlE,EAAA,+EAEQgC,IAAMC,IAAN,UAAa7I,MAAb,eAFR,gBAENqE,EAFM,EAENA,KAEPmE,EAAanE,GACbqE,GAAW,GALE,gDAObtI,QAAQC,IAAR,MAPa,yDAAH,qDAWlByI,qBAAU,WACNgC,MACF,IAgCF,OAAc,GAAXrC,EAEK,cAAC,EAAD,IAKJ,cAAC,EAAD,UAnCI,eAACxJ,EAAA,EAAD,WACI,cAAC0B,EAAA,EAAD,CAAKQ,MAAO,CAACyJ,UAAU,UAAWnL,UAAU,YAA5C,SACI,+CAEJ,cAACR,EAAA,EAAD,CAAWkC,MAAO4J,EAAeC,sBAAjC,SACKzC,GAAgC,GAAnBA,EAAU/B,OAEpB+B,EAAUhB,KAAI,SAAA0D,GACV,OAEI,cAACsB,EAAD,CAA+BrC,SAAUe,EAAKnI,KAAMT,OAAQ4I,EAAK1L,GAAIyD,UAAWiI,EAAKjI,UAAWC,QAASgI,EAAKhI,QAASkH,gBAAiBc,EAAKlI,YAAaqH,aAAca,EAAK/H,UAAxJ+H,EAAK7G,QAMlC,cAACnF,EAAA,EAAD,CAAWkC,MAAO4J,EAAeG,iBAAjC,SACI,wDAIZ,6BAyBVH,EAAiB,CAEnBC,sBAAsB,CAClB1J,QAAQ,OACRE,WAAW,UACXD,eAAe,aACf4J,SAAS,OACTC,OAAO,MACPC,UAAU,MACVzJ,UAAU,OAEdsJ,iBAAiB,CACbI,WAAW,MACXC,cAAc,MACdjK,QAAQ,OACRE,WAAW,SACXD,eAAe,WCzDRiL,EAlCE,SAAC,GAA6F,IAAD,IAA3FtC,gBAA2F,MAAlF,GAAkF,MAA9E7H,cAA8E,MAAvE,GAAuE,MAAnEW,iBAAmE,MAAzD,GAAyD,MAArDC,eAAqD,MAA7C,GAA6C,MAAzCkH,uBAAyC,MAAzB,GAAyB,MAArBC,oBAAqB,MAAR,GAAQ,EAEtGqC,EAAY,IAAIC,KAAK1F,OAAOhE,IAAY2J,UACxCC,EAAU,IAAIF,KAAK1F,OAAO/D,IAAU0J,UACpCE,GAAc,IAAIH,MAAOC,UAK7B,OAEI,eAACtC,EAAA,EAAD,CAAMlJ,MAAO,CAAEgH,MAAO,QAASmC,UAAW,mBAAoBC,aAAa,OAA3E,UACA,eAACF,EAAA,EAAKtC,KAAN,WACI,cAACsC,EAAA,EAAKG,MAAN,UAAaN,IAEb,eAACG,EAAA,EAAKI,SAAN,CAAetJ,MAAO,CAAC4D,SAAS,SAAUtF,UAAU,uBAApD,2BAA0FuD,KAC1F,eAACqH,EAAA,EAAKI,SAAN,CAAetJ,MAAO,CAAC4D,SAAS,SAAUtF,UAAU,uBAApD,oBAAmFwD,KACnF,eAACoH,EAAA,EAAKI,SAAN,CAAetJ,MAAO,CAAC4D,SAAS,SAAUtF,UAAU,uBAApD,wBAAuF2K,EAAvF,cACA,cAACC,EAAA,EAAKK,KAAN,CAAWvJ,MAAO,CAAC4D,SAAS,SAAUtF,UAAU,YAAhD,SACC0K,OAIH0C,GAAeJ,GAAaG,GAAWC,GACrC,cAACxC,EAAA,EAAKrC,OAAN,CAAa7G,MAAO,CAACyJ,UAAU,UAA/B,SACA,cAAC,IAAD,CAAMtM,GAAE,uBAAkB+D,GAA1B,8BCTGyK,GAtBO,CAElB9B,sBAAsB,CAClB1J,QAAQ,OACRE,WAAW,UACXD,eAAe,aACf4J,SAAS,OACTC,OAAO,MACPC,UAAU,MACVzJ,UAAU,OAEdsJ,iBAAiB,CACbI,WAAW,MACXC,cAAc,MACdjK,QAAQ,OACRE,WAAW,SACXD,eAAe,W,UChBR,OAA0B,wCCiC1BwL,GA1BK,WAChB,OACI,cAAC9N,EAAA,EAAD,CAAWyB,OAAK,EAACjB,UAAU,UAAU0B,MAAO,CAACU,aAAa,OAASmL,QAAQ,IAA3E,SACI,eAACrM,EAAA,EAAD,CAAKlB,UAAU,YAAf,UACI,cAACmB,EAAA,EAAD,CAAKqM,GAAI,EAAGnM,GAAI,EAAGC,GAAI,GAAIC,GAAI,GAAIG,MAAO,CAACG,QAAQ,OAAQE,WAAW,SAAUD,eAAe,UAA/F,SACI,cAAC2L,GAAA,EAAD,CAAOC,IAAKC,GAAajM,MAAO,CAACgH,MAAM,MAAOC,OAAO,QAASiF,SAAO,MAEzE,cAACzM,EAAA,EAAD,CAAKqM,GAAI,EAAGnM,GAAI,EAAGC,GAAI,GAAIC,GAAI,GAAIvB,UAAU,YAAY0B,MAAO,CAACG,QAAQ,OAAQE,WAAW,SAAUD,eAAe,cAArH,SACI,qBAAI9B,UAAU,aAAd,UACI,uEACA,4DACA,0DACA,yFACA,4DACA,oFACA,mFACA,0EACA,2EACA,oFCqKT6N,GA5KE,WAEb,MAAgDzK,mBAAS,IAAzD,mBAAO0K,EAAP,KAAyBC,EAAzB,KACA,EAAkD3K,mBAAS,IAA3D,mBAAO4K,EAAP,KAA0BC,EAA1B,KACA,EAAkD7K,mBAAS,IAA3D,mBAAO8K,EAAP,KAA0BC,EAA1B,KAEA,EAA8B/K,oBAAS,GAAvC,mBAAO4F,EAAP,KAAgBC,EAAhB,KAKMoC,EAAY,uCAAG,4CAAAlE,EAAA,+EAEQgC,IAAMC,IAAN,UAAa7I,MAAb,eAFR,OAWb,IAXa,SAENqE,EAFM,EAENA,KAGHwJ,EAAwB,GACxBC,EAAyB,GACzBC,EAAyB,GAEzBlB,GAAc,IAAIH,MAAOC,UAEpBpG,EAAI,EAAGA,EAAIlC,EAAKmC,OAAQD,IAEzBkG,EAAY,IAAIC,KAAK1F,OAAO3C,EAAKkC,GAAGvD,YAAY2J,UAChDC,EAAU,IAAIF,KAAK1F,OAAO3C,EAAKkC,GAAGtD,UAAU0J,UAO7CE,GAAeJ,GAAaG,GAAWC,EAEtCgB,EAAsB3G,KAAK7C,EAAKkC,IAE5BkG,EAAYI,EAEhBiB,EAAuB5G,KAAK7C,EAAKkC,IAE7BsG,EAAcD,GAElBmB,EAAuB7G,KAAK7C,EAAKkC,IAIzCiH,EAAoBK,GACpBH,EAAqBI,GACrBF,EAAqBG,GAErBrF,GAAW,GAvCE,kDA0CbtI,QAAQC,IAAR,MA1Ca,0DAAH,qDA8ClByI,qBAAU,WACNgC,MACF,IAsFF,OAAc,GAAXrC,EAEK,cAAC,EAAD,IAKJ,eAAC,EAAD,WAEA,cAAC,GAAD,IAEA,cAACxJ,EAAA,EAAD,CAAWQ,UAAU,YAAYiB,OAAK,EAAtC,SA5FI,eAACzB,EAAA,EAAD,WACI,cAAC0B,EAAA,EAAD,UACI,mDAEJ,cAAC1B,EAAA,EAAD,CAAWkC,MAAO2L,GAAc9B,sBAAhC,SACKuC,GAA8C,GAA1BA,EAAiB/G,OAElC+G,EAAiBhG,KAAI,SAAA0D,GAEjB,OACI,cAAC,EAAD,CAAUf,SAAUe,EAAKnI,KAAMT,OAAQ4I,EAAK1L,GAAIyD,UAAWiI,EAAKjI,UAAWC,QAASgI,EAAKhI,QAASkH,gBAAiBc,EAAKlI,YAAaqH,aAAcpD,OAAOiE,EAAK/H,eAMvK,cAACjE,EAAA,EAAD,CAAWkC,MAAO2L,GAAc5B,iBAAhC,SACI,0EAIZ,4BA2ER,cAACjM,EAAA,EAAD,CAAWQ,UAAU,YAAYiB,OAAK,EAAtC,SApEI,eAACzB,EAAA,EAAD,WACI,cAAC0B,EAAA,EAAD,UACI,oDAEJ,cAAC1B,EAAA,EAAD,CAAWkC,MAAO2L,GAAc9B,sBAAhC,SACKyC,GAAgD,GAA3BA,EAAkBjH,OAEpCiH,EAAkBlG,KAAI,SAAA0D,GAClB,OACI,cAAC,EAAD,CAAUf,SAAUe,EAAKnI,KAAMT,OAAQ4I,EAAK1L,GAAIyD,UAAWiI,EAAKjI,UAAWC,QAASgI,EAAKhI,QAASkH,gBAAiBc,EAAKlI,YAAaqH,aAAcpD,OAAOiE,EAAK/H,eAMvK,cAACjE,EAAA,EAAD,CAAWkC,MAAO2L,GAAc5B,iBAAhC,SACI,2EAIZ,4BAoDR,cAACjM,EAAA,EAAD,CAAWQ,UAAU,YAAYiB,OAAK,EAAtC,SA7CI,eAACzB,EAAA,EAAD,WACI,cAAC0B,EAAA,EAAD,UACI,oDAEJ,cAAC1B,EAAA,EAAD,CAAWkC,MAAO2L,GAAc9B,sBAAhC,SACK2C,GAAgD,GAA3BA,EAAkBnH,OAEpCmH,EAAkBpG,KAAI,SAAA0D,GAClB,OACI,cAAC,EAAD,CAAUf,SAAUe,EAAKnI,KAAMT,OAAQ4I,EAAK1L,GAAIyD,UAAWiI,EAAKjI,UAAWC,QAASgI,EAAKhI,QAASkH,gBAAiBc,EAAKlI,YAAaqH,aAAcpD,OAAOiE,EAAK/H,eAMvK,cAACjE,EAAA,EAAD,CAAWkC,MAAO2L,GAAc5B,iBAAhC,SACI,6DAIZ,gCCDD8C,I,OA9IA,WAEX,MAAgCnL,mBAAS,CACrCC,KAAM,GACNyG,MAAO,GACP0E,SAAU,GACV9H,MAAO,GACP+H,SAAS,IALb,mBAAOC,EAAP,KAAiBC,EAAjB,KAQA,EAA8BvL,oBAAS,GAAvC,mBAAOwL,EAAP,KAAgBC,EAAhB,KAEQxL,EAA0CqL,EAA1CrL,KAAMyG,EAAoC4E,EAApC5E,MAAO0E,EAA6BE,EAA7BF,SAAU9H,EAAmBgI,EAAnBhI,MAAO+H,EAAYC,EAAZD,QAIhCtK,EAAe,SAAAd,GAAI,OAAI,SAAAe,GACzByK,GAAW,GACXF,EAAY,2BAAID,GAAL,gBAAehI,OAAO,GAAQrD,EAAOe,EAAMC,OAAOC,WAG3DwK,EAAW,SAAA1K,GpBhCS,IAAAzF,EoBiCtByF,EAAMI,iBACK,IAARnB,GAAuB,IAATyG,GAA2B,IAAZ0E,EAC5BK,GAAW,IAGfF,EAAY,2BAAID,GAAL,IAAehI,OAAO,MpBtCX/H,EoBuCP,CAAC0E,OAAMyG,QAAO0E,YpBrC1BlO,MAAM,GAAD,OAAIC,MAAJ,WAAkB,CAC1BC,OAAO,OACPqC,QAAQ,CACJC,OAAQ,mBACR,eAAgB,oBAEpBE,KAAM7E,KAAK8E,UAAUtE,KAExB8B,MAAK,SAAAC,GACF,OAAOA,EAASwC,UAEnBrC,OAAM,SAAAC,GAAG,OAAIH,QAAQC,IAAIE,OoB2BrBL,MAAK,SAAAmE,IACF,OAAGA,QAAH,IAAGA,OAAH,EAAGA,EAAM8B,OACLiI,EAAY,2BAAID,GAAL,IAAehI,MAAO9B,EAAK8B,MAAO+H,SAAQ,KAGrDE,EAAY,2BAAID,GAAL,IAAerL,KAAK,GAAIyG,MAAM,GAAI0E,SAAS,GAAI9H,MAAM,GAAI+H,SAAS,QAGpF5N,OAAM,SAAAC,GAAG,OAAIH,QAAQC,IAAIE,QAiF9B,OACI,eAAC,EAAD,WAGI,cAACtB,EAAA,EAAD,UACI,cAAC0B,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItB,UAAU,mBAArC,SACI,cAAC4K,EAAA,EAAD,CAAO5K,UAAU,cAAjB,SApCZ,eAAC8E,EAAA,EAAD,CAAM9E,UAAU,cAAhB,UAEI,eAAC8E,EAAA,EAAKC,MAAN,CAAY/E,UAAU,YAAYgF,UAAU,gBAA5C,UACI,cAACF,EAAA,EAAKG,MAAN,CAAYjF,UAAU,aAAtB,kBACA,cAAC8E,EAAA,EAAKI,QAAN,CAAcC,KAAK,OAAOC,YAAY,aAAaC,SAAUlB,EAAa,QAASG,MAAOjB,OAG9F,eAACyB,EAAA,EAAKC,MAAN,CAAY/E,UAAU,YAAYgF,UAAU,iBAA5C,UACI,cAACF,EAAA,EAAKG,MAAN,4BACA,cAACH,EAAA,EAAKI,QAAN,CAAcC,KAAK,QAAQC,YAAY,cAAcC,SAAUlB,EAAa,SAAUG,MAAOwF,OAGjG,eAAChF,EAAA,EAAKC,MAAN,CAAY/E,UAAU,YAAYgF,UAAU,oBAA5C,UACI,cAACF,EAAA,EAAKG,MAAN,uBACA,cAACH,EAAA,EAAKI,QAAN,CAAcC,KAAK,WAAWC,YAAY,WAAWC,SAAUlB,EAAa,YAAcG,MAAOkK,OAIrG,cAAC1J,EAAA,EAAKC,MAAN,CAAY/E,UAAU,oBAAtB,SACI,cAACsC,EAAA,EAAD,CAAQ/C,QAAQ,YAAYqN,OAAK,EAACzM,QAAS2O,EAA3C,kCAhEZ,qBAAK9O,UAAU,MAAf,SACA,qBAAKA,UAAU,iCAAf,SACA,qBAAKA,UAAU,GAAG0B,MAAO,CAACG,QAAS4M,EAAU,GAAK,QAAlD,SACA,qBAAIzO,UAAU,wBAAd,2DAC8C,cAAC,IAAD,CAAMnB,GAAG,UAAT,iCAS9C,qBAAKmB,UAAU,MAAf,SACA,qBAAKA,UAAU,iCAAf,SACA,qBAAKA,UAAU,GAAG0B,MAAO,CAACG,QAAS6E,EAAQ,GAAK,QAAhD,SACA,oBAAI1G,UAAU,wBAAd,SACC0G,UAQwB,WACzB,GAAc,IAAXkI,EACH,OACI,qBAAK5O,UAAU,MAAf,SACJ,qBAAKA,UAAU,iCAAf,SACA,qBAAKA,UAAU,GAAf,SACA,oBAAIA,UAAU,wBAAd,2CA2DK+O,QC0BEC,I,OAnKA,WAEX,MAAgC5L,mBAAS,CACrC0G,MAAO,GACP0E,SAAU,GACV9H,MAAO,GACPsC,SAAS,EACTiG,aAAa,IALjB,mBAAOP,EAAP,KAAiBC,EAAjB,KAQA,EAA8BvL,oBAAS,GAAvC,mBAAOwL,EAAP,KAAgBC,EAAhB,KAEQ/E,EAAgD4E,EAAhD5E,MAAO0E,EAAyCE,EAAzCF,SAAU9H,EAA+BgI,EAA/BhI,MAAOsC,EAAwB0F,EAAxB1F,QAASiG,EAAeP,EAAfO,YAClCtQ,EAAQZ,IAARY,KAEDwF,EAAe,SAAAd,GAAI,OAAI,SAAAe,GACzByK,GAAW,GACXF,EAAY,2BAAID,GAAL,gBAAehI,OAAO,GAAQrD,EAAOe,EAAMC,OAAOC,WAG3DwK,EAAW,SAAA1K,GACbA,EAAMI,iBACO,IAATsF,GAA2B,IAAZ0E,EACfK,GAAW,IAGfF,EAAY,2BAAID,GAAL,IAAehI,OAAO,EAAOsC,SAAS,KrBjB3B,SAAArK,GAE1B,OAAO2B,MAAM,GAAD,OAAIC,MAAJ,WAAkB,CAC1BC,OAAQ,OACRqC,QAAS,CACLC,OAAQ,mBACR,eAAgB,oBAEpBE,KAAM7E,KAAK8E,UAAUtE,KAExB8B,MAAK,SAAAC,GACF,OAAOA,EAASwC,UAEnBrC,OAAM,SAAAC,GAAG,OAAIH,QAAQC,IAAIE,MqBKtBoO,CAAe,CAACpF,QAAO0E,aACtB/N,MAAK,SAAAmE,IACF,OAAGA,QAAH,IAAGA,OAAH,EAAGA,EAAM8B,OACLiI,EAAY,2BAAID,GAAL,IAAehI,MAAO9B,EAAK8B,MAAOsC,SAAQ,KrBJzC,SAACpE,EAAMxE,GAET,qBAAXpC,SACPC,aAAakR,QAAQ,MAAMhR,KAAK8E,UAAU2B,IAC1CxE,KqBGQgP,CAAaxK,GAAM,WACf+J,EAAY,2BAAID,GAAL,IAAeO,aAAa,WAKlDpO,OAAM,SAAAC,GAAG,OAAIH,QAAQC,IAAIE,QAmG9B,OACI,eAAC,EAAD,WA/EIkI,GACI,qBAAKhJ,UAAU,0DAAf,SACA,qBAAKA,UAAU,oCAAf,SAEA,oBAAIA,UAAU,wBAAd,4BA+EJ,cAACR,EAAA,EAAD,UACI,cAAC0B,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItB,UAAU,mBAArC,SACI,cAAC4K,EAAA,EAAD,CAAO5K,UAAU,cAAjB,SAlCZ,eAAC8E,EAAA,EAAD,CAAM9E,UAAU,cAAhB,UAEI,eAAC8E,EAAA,EAAKC,MAAN,CAAY/E,UAAU,YAAYgF,UAAU,iBAA5C,UACI,cAACF,EAAA,EAAKG,MAAN,4BACA,cAACH,EAAA,EAAKI,QAAN,CAAcC,KAAK,QAAQC,YAAY,cAAcC,SAAUlB,EAAa,SAAUG,MAAOwF,OAGjG,eAAChF,EAAA,EAAKC,MAAN,CAAY/E,UAAU,YAAYgF,UAAU,oBAA5C,UACI,cAACF,EAAA,EAAKG,MAAN,uBACA,cAACH,EAAA,EAAKI,QAAN,CAAcC,KAAK,WAAWC,YAAY,WAAWC,SAAUlB,EAAa,YAAcG,MAAOkK,OAIrG,cAAC1J,EAAA,EAAKC,MAAN,CAAY/E,UAAU,oBAAtB,SACI,cAACsC,EAAA,EAAD,CAAQ/C,QAAQ,YAAYqN,OAAK,EAACzM,QAAS2O,EAA3C,kCAnDR,qBAAK9O,UAAU,MAAf,SACI,qBAAKA,UAAU,iCAAf,SACI,qBAAKA,UAAU,GAAG0B,MAAO,CAACG,QAAS6E,EAAQ,GAAK,QAAhD,SACI,oBAAI1G,UAAU,wBAAd,SACC0G,UAaQ,WACzB,GAAc,IAAXkI,EACH,OACI,qBAAK5O,UAAU,MAAf,SACJ,qBAAKA,UAAU,iCAAf,SACA,qBAAKA,UAAU,GAAf,SACA,oBAAIA,UAAU,wBAAd,4CAyDK+O,GA7GFE,GACItQ,GAAsB,IAAdA,EAAKC,MAIjBb,IAHY,cAAC,IAAD,CAAUc,GAAG,WAG5B,O,SC9DC0B,GAAQiC,EAAQ,IAAhBjC,ICyjBM8O,GAjiBI,SAAC,GAAa,IAAZnF,EAAW,EAAXA,MAKb,EAA8B9G,oBAAS,GAAvC,mBAAO4F,EAAP,KAAgBC,EAAhB,KAGA,EAA0C7F,oBAAS,GAAnD,mBAAOkM,EAAP,KAAsBC,EAAtB,KACA,EAAwDnM,oBAAS,GAAjE,mBAAOoM,EAAP,KAA6BC,EAA7B,KAEMC,EAAc,kBAAMH,GAAiB,IACrCrL,EAAyB,kBAAMuL,GAAwB,IAI7D,EAAoCrM,mBAAS,MAA7C,mBAAOuM,EAAP,KAAmBC,EAAnB,KAGA,EAAkCxM,oBAAS,GAA3C,mBAAOyM,EAAP,KAAkBC,EAAlB,KACA,EAAoC1M,oBAAS,GAA7C,mBAAO2M,EAAP,KAAmBC,EAAnB,KACA,EAAoC5M,oBAAS,GAA7C,mBAAO6M,EAAP,KAAmBC,EAAnB,KAGA,EAAwC9M,mBAAS,CAC7CR,OAAQ,CACJ+B,IAAKuF,EAAMK,OAAO3H,QAEtBiH,YAAa,GACbE,cAAe,GACfD,MAAO,KANX,mBAAOqG,EAAP,KAAqBC,GAArB,KAUQxN,GAA+CuN,EAA/CvN,OAAQiH,GAAuCsG,EAAvCtG,YAAaE,GAA0BoG,EAA1BpG,cAAeD,GAAWqG,EAAXrG,MAG5C,GAA6B1G,mBAAS,IAAtC,qBAAMU,GAAN,MAAeC,GAAf,MAGA,GAAsCX,mBAAS,GAA/C,qBAAoBiN,IAApB,aACA,GAAwCjN,mBAAS,GAAjD,qBAAOuH,GAAP,MAAqB2F,GAArB,MAGMnM,GAAe,SAAAd,GAAI,OAAI,SAAAe,GACzBgM,GAAgB,2BAAID,GAAL,kBAAoB9M,EAAOe,EAAMC,OAAOC,SAC5C,eAARjB,GAAuByM,GAAa,GAC5B,SAARzM,GAAiB2M,GAAc,GACvB,iBAAR3M,GAAyB6M,GAAc,KAKxCpB,GAAW,WD3EK,IAAAlF,KC8EH,CAAChH,UAAQiH,eAAaE,iBAAeD,SAAOhG,YD3E5DxD,MAAM,GAAD,OAAIC,GAAJ,gBAAuB,CAC/BC,OAAQ,OACRqC,QAAS,CACLC,OAAQ,mBACR,eAAgB,oBAEpBE,KAAM7E,KAAK8E,UAAU2G,KAExBnJ,MAAK,SAAAC,GACF,OAAOA,EAASwC,UAEnBrC,OAAM,SAAAC,GAAG,OAAIH,QAAQC,IAAIE,OCiEjBL,MAAK,SAAAmE,GAEF6K,GAAwB,MAE3B5O,OAAM,SAAAC,GAAG,OAAIH,QAAQC,IAAI,0CAA0CE,OAKlEyP,GAAyB,SAACC,GAE5B,IADA,IAAI3J,EAAe,GACVC,EAAI,EAAGA,EAAI0J,EAAU1J,IAC3BD,EAAaY,KAAK,cAGrB1D,GAAW8C,IAMT4J,GAAQ,uCAAG,WAAOC,GAAP,iBAAAvJ,EAAA,+EAEYgC,IAAMC,IAAN,UAAa7I,MAAb,iBAAyBmQ,IAFrC,gBAEF9L,EAFE,EAEFA,KACPgL,EAAchL,GACd2L,GAAuB3L,EAAKhB,UAAUmD,QACtCkC,GAAW,GAEXoH,GAAe9I,OAAO,IAAI0F,OAC1BqD,GAA8B,GAAd1L,EAAKnB,UARZ,kDAUT9C,QAAQC,IAAR,MAVS,0DAAH,sDAgBdyI,qBAAU,WACNoH,GAASvG,EAAMK,OAAO3H,UACxB,IAKF,IAAM+N,GAAoB,WACtBC,KACAC,KACAC,MACqB,IAAlBC,OAA6C,IAAnBC,OAA8C,IAAnBC,MAEpD1B,GAAiB,IAOnBwB,GAAc,WAEhB,OAAiC,GAA7BlH,GAAYrC,OAAOT,SACvB+I,GAAa,IACN,IAMLkB,GAAe,WAGjB,OAAKlH,GAAMI,MADM,8JAMjB8F,GAAc,IACP,IALPA,GAAc,IACP,IASLiB,GAAe,WAGjB,QAAKlH,GAAcG,MAFL,cAGdgG,GAAc,IACP,IAQLU,GAAmB,WAGrB,IAAiB,IAAdf,EACH,OAAO,mBAAGnO,MAAO,CAAC4D,SAAS,SAAUtF,UAAU,cAAxC,wCAIL6Q,GAAoB,WAGtB,IAAkB,IAAfd,EACH,OAAO,mBAAGrO,MAAO,CAAC4D,SAAS,SAAUtF,UAAU,cAAxC,yCAIL8Q,GAAoB,WAGtB,IAAkB,IAAfb,EACH,OAAO,mBAAGvO,MAAO,CAAC4D,SAAS,SAAUtF,UAAU,cAAxC,gDAmFLkR,GAAsB,SAACC,EAAK7J,GAC9B,IAAI8J,EAAmBtN,GAIvBsN,EAFiBD,EAAI,GAEU7J,EAC/BvD,GAAWqN,IAQTC,GAAe,SAAC,GAA2C,IAAD,IAAzCnK,YAAyC,MAApC,GAAoC,MAAhCC,SAAgC,MAA9B,GAA8B,MAA3BC,SAA2B,MAAzB,GAAyB,MAAtBC,SAAsB,MAApB,GAAoB,MAAjBV,SAAiB,MAAf,GAAe,MAAZwK,WAAY,MAAR,GAAQ,EAG5D,EAA8B/N,oBAAS,GAAvC,mBAAOkO,EAAP,KAAgBC,EAAhB,KACA,EAA8BnO,oBAAS,GAAvC,mBAAOoO,EAAP,KAAgBC,EAAhB,KACA,EAA8BrO,oBAAS,GAAvC,mBAAOsO,EAAP,KAAgBC,EAAhB,KACA,EAA8BvO,oBAAS,GAAvC,mBAAOwO,EAAP,KAAgBC,EAAhB,KAwCA,OACI,eAACjH,EAAA,EAAD,CAAOlJ,MAAO,CAACS,UAAU,MAAMC,aAAa,MAAOmL,QAAQ,MAAOzC,aAAa,OAA/E,UACI,eAACF,EAAA,EAAKK,KAAN,WACKkG,EADL,KACYjK,KAGZ,eAAC1H,EAAA,EAAD,WACA,eAAC0B,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAIC,GAAI,GAA/B,SACI,uBAAMG,MAAO,CAACG,QAAQ,SAAtB,gBACO,eAACS,EAAA,EAAD,CAAQ/C,QAAQ,QAAQmC,MAAQ4P,EAAUQ,GAAYC,aAAeD,GAAYE,eAAiBhS,UAAU,YAAaG,QAAS,kBA9CzJ,SAAmBgR,EAAKhK,GAEpB+J,GAAoBC,EAAKhK,GACzBoK,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,GAwCgJI,CAAUd,EAAIhK,IAAtJ,cAA4JA,EAA5J,YAIX,cAAChG,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAIC,GAAI,GAA/B,SACI,uBAAMG,MAAO,CAACG,QAAQ,SAAtB,gBACO,eAACS,EAAA,EAAD,CAAQ/C,QAAQ,QAAQmC,MAAQ8P,EAAUM,GAAYC,aAAeD,GAAYE,eAAiBhS,UAAU,YAAaG,QAAS,kBA3CzJ,SAAmBgR,EAAK/J,GAEpB8J,GAAoBC,EAAK/J,GACzBqK,GAAW,GACXF,GAAW,GACXI,GAAW,GACXE,GAAW,GAqCgJK,CAAUf,EAAI/J,IAAtJ,cAA4JA,EAA5J,eAKf,eAAClG,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAIC,GAAI,GAA/B,SACI,uBAAMG,MAAO,CAACG,QAAQ,SAAtB,gBACO,eAACS,EAAA,EAAD,CAAQ/C,QAAQ,QAAQmC,MAAQgQ,EAAUI,GAAYC,aAAeD,GAAYE,eAAiBhS,UAAU,YAAaG,QAAS,kBA1CzJ,SAAmBgR,EAAK9J,GAEpB6J,GAAoBC,EAAK9J,GACzBsK,GAAW,GACXJ,GAAW,GACXE,GAAW,GACXI,GAAW,GAoCgJM,CAAUhB,EAAI9J,IAAtJ,cAA4JA,EAA5J,YAIX,cAAClG,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAIC,GAAI,GAA/B,SACI,uBAAMG,MAAO,CAACG,QAAQ,SAAtB,gBACO,eAACS,EAAA,EAAD,CAAQ/C,QAAQ,QAAQmC,MAAQkQ,EAAUE,GAAYC,aAAeD,GAAYE,eAAiBhS,UAAU,YAAaG,QAAS,kBAvCzJ,SAAmBgR,EAAKxK,GAEpBuK,GAAoBC,EAAKxK,GACzBkL,GAAW,GACXN,GAAW,GACXE,GAAW,GACXE,GAAW,GAiCgJS,CAAUjB,EAAIxK,IAAtJ,cAA4JA,EAA5J,sBAoB3B,SAAS0L,KACL,GAAkB,OAAf1C,EAkBC,MAAO,QAhBP,IAAI3C,EAAY,IAAIC,KAAK1F,OAAOoI,EAAWpM,YAAY2J,UACnDC,EAAU,IAAIF,KAAK1F,OAAOoI,EAAWnM,UAAU0J,UAC/CE,GAAc,IAAIH,MAAOC,UAE7B,OAAGE,GAAeJ,GAAaG,GAAWC,EAC/B,SAEHJ,EAAYI,EACT,WAEHA,EAAcD,EACX,YADN,EAYb,SAASmF,GAAT,GAAuC,IAApBC,EAAmB,EAAnBA,gBACf,EAMIC,oBAAS,CAAED,kBAAiBE,SAAU,kBAAM9R,QAAQC,IAAI,GAAGkO,OAAc4D,WAAW,IALtFC,EADF,EACEA,QACAC,EAFF,EAEEA,QACAC,EAHF,EAGEA,MAHF,EAIEC,KAJF,EAKEC,UAIF,OACI,cAACvT,EAAA,EAAD,CAAWyB,OAAK,EAAhB,SACA,cAACzB,EAAA,EAAD,CAAWkC,MAAO,CAACS,UAAU,MAAMC,aAAa,MAAOP,QAAQ,OAAQE,WAAW,SAAUD,eAAe,UAA3G,SACI,gCACI,cAACZ,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAKO,MAAO,CAACyJ,UAAU,UAAvB,SACI,mBAAGzJ,MAAO,CAAC4D,SAAS,OAApB,uBAGR,cAACpE,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,UACI,sBAAKO,MAAO,CAAC4D,SAAS,QAAS0N,WAAW,QAA1C,cAAqDH,EAArD,OAAgED,EAAhE,OAA6ED,EAA7E,kBAStB,IAAMM,GAAO,IAAIhG,KAAK1F,OAAO,IAAI0F,OACjCgG,GAAKC,WAAWD,GAAKE,aAAexI,IAwFtC,OAAc,GAAX3B,EAEK,cAAC,EAAD,IAOL,qCAEiB,YAAhBqJ,MA/FuB,WACvB,GAAmB,YAAhBA,KACC,OACI,cAAC7S,EAAA,EAAD,CAAWyB,OAAK,EAACS,MAAO,CAACU,aAAa,OAAQD,UAAU,QAAxD,SACI,cAAC3C,EAAA,EAAD,CAAWkC,MAAO,CAACS,UAAU,OAAQC,aAAa,QAAlD,SACA,cAAClB,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAKO,MAAO,CAACG,QAAQ,OAAQE,WAAW,SAAUD,eAAe,UAAjE,SACI,wFAyFpBsR,GAGgB,QAAhBf,MAlFmB,WACnB,GAAmB,QAAhBA,KACC,OACI,cAAC7S,EAAA,EAAD,CAAWyB,OAAK,EAACS,MAAO,CAACU,aAAa,OAAQD,UAAU,QAAxD,SACI,cAAC3C,EAAA,EAAD,CAAWkC,MAAO,CAACS,UAAU,OAAQC,aAAa,QAAlD,SACA,cAAClB,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAKO,MAAO,CAACG,QAAQ,OAAQE,WAAW,SAAUD,eAAe,UAAjE,SACI,2DA4EpBuR,GA1DsB,WACtB,GAAmB,UAAhBhB,KACC,OACI,eAAC7S,EAAA,EAAD,CAAWyB,OAAK,EAACS,MAAO,CAACU,aAAa,OAAtC,UAEA,cAACkQ,GAAD,CAASC,gBAAiBU,KAE1B,cAACzT,EAAA,EAAD,CAAWkC,MAAO,CAACS,UAAU,MAAOC,aAAa,OAAjD,SACI,eAAClB,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAKC,GAAI,CAACkS,MAAO,QAASC,KAAM,GAAIlS,GAAI,CAACiS,MAAO,QAASC,KAAM,GAAIjS,GAAI,CAACgS,MAAO,OAAQC,KAAK,IAAKhS,GAAI,CAAC+R,MAAO,OAAQC,KAAM,IAAK7R,MAAO,CAACG,QAAQ,OAAQQ,cAAc,iBAAkBE,SAAS,SAAjM,SAA4M,qBAAIvC,UAAU,YAAd,cAA4B2P,EAAWtM,KAAvC,SAC5M,eAAClC,EAAA,EAAD,CAAKC,GAAI,CAACkS,MAAO,OAAQC,KAAM,GAAIlS,GAAI,CAACiS,MAAO,OAAQC,KAAM,GAAIjS,GAAI,CAACgS,MAAO,QAASC,KAAM,IAAKhS,GAAI,CAAC+R,MAAO,QAASC,KAAM,IAAK7R,MAAO,CAACyJ,UAAU,QAAS5I,SAAS,QAASV,QAAQ,SAAtL,UACE,uBAAMH,MAAO,CAAC4D,SAAS,SAAvB,eAAoCuE,GAApC,OADF,IAC2D,uBACzD,uBAAMnI,MAAO,CAAC4D,SAAS,SAAvB,eAAoCyE,GAApC,OAFF,IAE6D,uBAC3D,uBAAMrI,MAAO,CAAC4D,SAAS,SAAvB,cAAmCwE,GAAnC,eA5Sd,eAAC7B,EAAA,EAAD,CACAC,KAAMoH,EACNnH,OAAQuH,EACRtH,SAAS,SACTC,UAAU,EAJV,UAOA,cAACJ,EAAA,EAAMpD,OAAP,UACI,cAACoD,EAAA,EAAM8C,MAAP,yCAGJ,cAAC9C,EAAA,EAAMK,KAAP,UAEA,eAACxD,EAAA,EAAD,WACI,eAACA,EAAA,EAAKC,MAAN,CAAY/E,UAAU,OAAOgF,UAAU,gBAAvC,UACA,cAACF,EAAA,EAAKG,MAAN,mBACA,cAACH,EAAA,EAAKI,QAAN,CAAcC,KAAK,OAAOC,YAAY,aAAaC,SAAUlB,GAAa,eAAgBG,MAAOuF,KAChG+G,QAGD,eAAC9L,EAAA,EAAKC,MAAN,CAAY/E,UAAU,OAAOgF,UAAU,iBAAvC,UACA,cAACF,EAAA,EAAKG,MAAN,oBACA,cAACH,EAAA,EAAKI,QAAN,CAAcC,KAAK,QAAQC,YAAY,QAAQC,SAAUlB,GAAa,SAAUG,MAAOwF,KACtF+G,QAGD,eAAC/L,EAAA,EAAKC,MAAN,CAAY/E,UAAU,OAAOgF,UAAU,iBAAvC,UACA,cAACF,EAAA,EAAKG,MAAN,wBACA,cAACH,EAAA,EAAKI,QAAN,CAAcC,KAAK,OAAOC,YAAY,QAAQC,SAAUlB,GAAa,iBAAkBG,MAAOyF,KAC7F+G,aAOL,cAAC7I,EAAA,EAAMM,OAAP,UAEI,cAACjG,EAAA,EAAD,CAAQ/C,QAAQ,YAAYS,UAAU,OAAOG,QAASwQ,GAAtD,yBA+QA,cAACnR,EAAA,EAAD,UACEmQ,GAAcA,EAAW/L,UAAUkE,KAAI,SAAAC,GAErC,OACI,cAACsJ,GAAD,CAAcF,IAAKpJ,EAASd,GAAIC,KAAMa,EAASb,KAAMC,EAAGY,EAASZ,EAAGC,EAAGW,EAASX,EAAGC,EAAGU,EAASV,EAAGV,EAAGoB,EAASpB,SAKtH,cAACnH,EAAA,EAAD,CAAWkC,MAAO,CAACG,QAAQ,OAAQE,WAAW,SAAUD,eAAe,SAAUK,UAAU,OAA3F,SACI,cAACG,EAAA,EAAD,CAAQnC,QAAS2O,GAAUvP,QAAQ,YAAYS,UAAU,OAAOwB,KAAK,KAAKoL,OAAK,EAA/E,yBA8BX4G,GA7SD,eAACvL,EAAA,EAAD,CACAC,KAAMsH,EACNrH,OAAQjE,EACRkE,SAAS,SACTC,UAAU,EAJV,UAOI,cAACJ,EAAA,EAAMK,KAAP,iEAKA,cAACL,EAAA,EAAMM,OAAP,UACA,cAAC,IAAD,CAAM7G,MAAO,CAAC8G,eAAe,QAAS3J,GAAG,IAAzC,SACI,cAACyD,EAAA,EAAD,CAAQ/C,QAAQ,YAAYS,UAAU,OAAtC,SAEI,sBAAM0B,MAAO,CAACD,MAAM,QAApB,yBAuNW,WACvB,GAAmB,SAAhB4Q,KACC,OACI,qDAuERoB,GAGA,cAAC,EAAD,QAYN3B,GAAc,CAChBC,aAAa,CACT2B,gBAAgB,UAChBnR,SAAS,MACT4I,UAAU,OACVwI,OAAQ,qBAEZ3B,eAAe,CACX0B,gBAAgB,UAChBnR,SAAS,MACT4I,UAAU,OACVwI,OAAQ,sBCvhBDC,GAxBA,WAEX,OADAjT,QAAQC,IAAI,MAAOsK,wMAEf,cAAC,IAAD,UACI,eAAC,IAAD,WAEI,cAAC,IAAD,CAAO2I,KAAK,IAAIC,OAAK,EAACvV,UAAWwV,KACjC,cAAC,IAAD,CAAOF,KAAK,UAAUC,OAAK,EAACvV,UAAWgQ,KACvC,cAAC,IAAD,CAAOsF,KAAK,UAAUC,OAAK,EAACvV,UAAWyQ,KACvC,cAAC,IAAD,CAAO6E,KAAK,uBAAuBC,OAAK,EAACvV,UAAW8Q,KAEpD,cAAC,EAAD,CAAYwE,KAAK,mBAAmBC,OAAK,EAACvV,UAAW2D,IACrD,cAAC,EAAD,CAAY2R,KAAK,oBAAoBC,OAAK,EAACvV,UAAW4E,IACtD,cAAC,EAAD,CAAY0Q,KAAK,yBAAyBC,OAAK,EAACvV,UAAWyV,IAC3D,cAAC,EAAD,CAAYH,KAAK,mBAAmBC,OAAK,EAACvV,UAAW0V,IACrD,cAAC,EAAD,CAAYJ,KAAK,sBAAsBC,OAAK,EAACvV,UAAWsO,IACxD,cAAC,EAAD,CAAYgH,KAAK,4BAA4BC,OAAK,EAACvV,UAAW0L,U,iBCnC9EiK,EAASzV,OAAO,cAAC,GAAD,IAAY0V,SAASC,eAAe,U,gCCJpD,2CAAO,IAAM7T,EAAM2K,Q","file":"static/js/main.e85bf1ed.chunk.js","sourcesContent":["import axios from 'axios'\r\nimport {API} from '../backend'\r\n\r\nexport const signupFunction = user => {\r\n    // console.log(\"signup backend triggereed\")\r\n    return fetch(`${API}/signup`, {\r\n        method:\"POST\",\r\n        headers:{\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(user)\r\n    })\r\n    .then(response => {\r\n        return response.json()\r\n    })\r\n    .catch(err => console.log(err))\r\n}\r\n\r\n\r\nexport const signinFunction = user => {\r\n    // console.log(\"signin backend triggereed\")\r\n    return fetch(`${API}/signin`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(user)\r\n    })\r\n    .then(response => {\r\n        return response.json()\r\n    })\r\n    .catch(err => console.log(err))\r\n}\r\n\r\n\r\nexport const authenticate = (data, next) => {\r\n    // console.log(\"authenticate backend triggereed\")\r\n    if (typeof window !== \"undefined\") {\r\n        localStorage.setItem(\"jwt\",JSON.stringify(data))\r\n        next()\r\n    }\r\n}\r\n\r\nexport const signout = next => {\r\n    // console.log(\"signout backend triggereed\")\r\n    if (typeof window !== \"undefined\") {\r\n        localStorage.removeItem(\"jwt\")\r\n        next();\r\n\r\n        return fetch(`${API}/signout`, {\r\n            method: \"GET\"\r\n        })\r\n        .then(response => console.log(\"signout successfull\"))\r\n        .catch(err => console.log(err))\r\n    }\r\n}\r\n\r\n\r\nexport const isAuthenticated = () => {\r\n    // console.log(\"isauthenticate backend triggereed\")\r\n    \r\n    if (typeof window == \"undefined\") {\r\n      return false\r\n    }\r\n    if (localStorage.getItem(\"jwt\")) {\r\n        return JSON.parse(localStorage.getItem(\"jwt\"))\r\n    } else{\r\n        return false;\r\n    }\r\n}","import React from \"react\"\r\nimport {Route, Redirect} from \"react-router-dom\"\r\nimport {isAuthenticated} from \"../apiCalls/auth\"\r\n\r\n\r\nconst AdminRoute = ({ component: Component, ...rest }) => {\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={ props =>\r\n          isAuthenticated() && isAuthenticated().user.role ===1 ? (\r\n          <Component {...props} />\r\n          ) : (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/signin\",\r\n                state: { from: props.location }\r\n              }}\r\n            />\r\n          )\r\n        }\r\n      />\r\n    );\r\n  }\r\n\r\n  export default AdminRoute","import React from 'react'\r\n\r\nimport { Link, Redirect, withRouter } from 'react-router-dom'\r\n\r\nimport { Navbar, Nav, NavDropdown, Form, FormControl, Button, Container } from 'react-bootstrap'\r\n\r\nimport { isAuthenticated, signout } from '../../apiCalls/auth'\r\n\r\n\r\nexport const NavigationBar = () => {\r\n    return(\r\n        <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n          <Container>\r\n            <Navbar.Brand href=\"/\">NCET Exam Portal</Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n              <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n              \r\n                <Nav className=\"me-auto\">\r\n                </Nav>\r\n    \r\n                <Nav>\r\n    \r\n                  {isAuthenticated() && isAuthenticated.apply().user.role ===1 && (\r\n                    <Nav.Link >\r\n                      <Link to=\"/admin/dashboard\" className=\"text-reset text-decoration-none mx-1\">\r\n                      Admin Dashboard\r\n                      </Link>\r\n                  </Nav.Link>\r\n                  )}\r\n      \r\n\r\n                  {!isAuthenticated() && (\r\n                    <>\r\n                    <Nav.Link >\r\n                      <Link to=\"/signup\" className=\"text-reset text-decoration-none mx-1\">\r\n                      Sign Up\r\n                      </Link>\r\n                    </Nav.Link>\r\n                    <Nav.Link >\r\n                      <Link to=\"/signin\" className=\"text-reset text-decoration-none mx-1\">\r\n                      Sign In\r\n                      </Link>\r\n                    </Nav.Link>\r\n                    </>\r\n                  )}\r\n      \r\n                  {isAuthenticated() && (\r\n                    <Nav.Link >\r\n                    <Link to=\"/\" onClick={() => {\r\n                      signout(() => {\r\n                        <Redirect to=\"/\" />\r\n                      })\r\n                    }} className=\"text-reset text-decoration-none mx-1\">\r\n                    Sign Out\r\n                    </Link>\r\n                  </Nav.Link>\r\n                  )}\r\n\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n          </Container>\r\n        </Navbar>\r\n    )\r\n}\r\n\r\nexport default withRouter(NavigationBar);","import React from 'react';\r\n\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './footer.css'\r\n\r\nimport { FiFacebook, FiTwitter, FiLinkedin, FiInstagram, FiYoutube } from 'react-icons/fi';\r\nimport { RiMailOpenFill, RiPhoneFill } from 'react-icons/ri';\r\n\r\n\r\n\r\n\r\nconst FooterBar = () => {\r\n    return(\r\n        <Container fluid className=\"footer-parent-container\">\r\n            <Container>\r\n            \r\n                <Row>\r\n                    \r\n                    <Col lg={6} md={6} sm={12} xs={12} className=\"contact-container mt-2 mb-2\">\r\n                        <p className=\"queries-text\">For any Queries reach out to us at:</p>\r\n                    \r\n                        <div className=\"contact-links\">\r\n                            <RiMailOpenFill size=\"1.3em\" color=\"#fff\" /> <a href=\"mailto:principal@ncetmail.com\" className=\"text-link\">principal@ncetmail.com</a> \r\n                            <RiPhoneFill size=\"1.3em\" color=\"#fff\" style={{marginLeft:\"25px\"}} /> <a href=\"tel:8067462701\" className=\"text-link\">8067462701</a>\r\n                        </div>\r\n                        \r\n                    </Col>\r\n                    <Col lg={6} md={6} sm={12} xs={12} className=\"social-container mt-2 mb-2\">\r\n                        <p className=\"connect-text\">Connect with us:</p>\r\n                        <div className=\"div-socialLinks\">\r\n                            <a href=\"https://www.linkedin.com/school/nagarjuna-college-bangalore\"><FiLinkedin size=\"1.5em\" style={{marginRight:\"5px\", marginLeft:\"5px\"}} color=\"#fff\"  /></a>\r\n                            <a href=\"https://www.facebook.com/Nagarjunacollege.Bangalore/\"><FiFacebook size=\"1.5em\" style={{marginRight:\"5px\", marginLeft:\"5px\"}} color=\"#fff\"  /></a>\r\n                            <a href=\"https://twitter.com/principal_ncet?s=09\"><FiTwitter size=\"1.5em\" style={{marginRight:\"5px\", marginLeft:\"5px\"}} color=\"#fff\" /></a>\r\n                            <a href=\"https://www.instagram.com/ncet_official/?igshid=1927y63j14dl6\"><FiInstagram size=\"1.5em\" style={{marginRight:\"5px\", marginLeft:\"5px\"}} color=\"#fff\"  /></a>\r\n                            <a href=\"https://www.youtube.com/channel/UC7z2VqJIhSkCh4HC1y9zdaw\"><FiYoutube size=\"1.7em\" style={{marginRight:\"5px\", marginLeft:\"5px\"}} color=\"#fff\"  /></a>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <hr className=\"hr-line\" />\r\n\r\n                <Row>\r\n                    <Col style={{display:'flex', justifyContent:'center', alignItems:'center'}}>\r\n                        <span className=\"copyright-text\">COPYRIGHT © 2022 NAGARJUNA GROUP OF INSTITUTIONS. ALL RIGHT RESERVED</span>\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Container>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FooterBar;","import React from 'react'\r\n\r\nimport { Container } from 'react-bootstrap'\r\n\r\nimport NavigationBar from '../header/NavigationBar'\r\nimport FooterBar from '../footer/FooterBar'\r\n\r\nimport './base.css'\r\n\r\nconst Base = ({ className=\"\", children }) => {\r\n\r\n\r\n    return(\r\n        <div>\r\n            <NavigationBar />\r\n                <div className=\" mb-5\">\r\n                    <div className={className}>{children}</div>\r\n                </div>\r\n            <FooterBar />\r\n        </div>\r\n    )\r\n\r\n\r\n}\r\n\r\n        \r\n\r\nexport default Base;","import React from 'react' \r\n\r\nimport { Button, Row, Col, Container } from 'react-bootstrap'\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport Base from '../../components/base/Base'\r\n\r\nconst AdminDashboardPage = () => {\r\n    return(\r\n        <Base>\r\n\r\n            <Container style={{marginTop:'15vh', marginBottom:'15vh'}}>\r\n                <Row >\r\n                    <Col style={{display:'flex', alignItems:'center', justifyContent:'center'}}>\r\n                        <h2>Admin Dashboard</h2>\r\n                    </Col>\r\n                </Row>\r\n\r\n\r\n                <Row>\r\n                    <Container style={{display:'flex', alignItems:'center', justifyContent:'center', flexDirection:'column', marginTop:'10vh', marginBottom:'10vh'}}>\r\n                        <Link to={`/admin/createtest`}><Button variant=\"secondary\" size=\"md\" className=\"mt-1 mb-1\" style={{ minWidth:'50vw'}}>Create New Test</Button></Link>\r\n                     {/*   <Link to={`/admin/submissions/all`}><Button variant=\"secondary\" size=\"md\" className=\"mt-1 mb-1\" style={{ minWidth:'50vw'}} >View All Submissioons</Button></Link> */}\r\n                       <Link to={`/admin/tests/all`}><Button variant=\"secondary\" size=\"md\" className=\"mt-1 mb-1\" style={{ minWidth:'50vw'}} >View Submissions By Tests</Button></Link>  \r\n                        <Link to={`/admin/tests/delete`}><Button variant=\"secondary\" size=\"md\" className=\"mt-1 mb-1\" style={{ minWidth:'50vw'}} >Delete Test</Button></Link>\r\n                    </Container>\r\n                </Row>\r\n            </Container>\r\n        \r\n        </Base>\r\n    )\r\n}\r\n\r\nexport default AdminDashboardPage;\r\n","const { API } = require(\"../backend\")\r\n \r\nexport const submitTest = (userId, token, details) => {\r\n    // console.log(\"submitTest trigerred\")\r\n    // console.log(\"submission data\", details)\r\n    return fetch(`${API}/test/create/${userId}`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify(details)\r\n    })\r\n    .then(response => {\r\n        return response.json()\r\n    })\r\n    .catch(err => console.log(err))\r\n\r\n}\r\n\r\n\r\nexport const getSubmissions = (userId, token, testId) => {\r\n    // console.log(\"get submissions\")\r\n    return fetch(`${API}/test/testSubmissions/${userId}`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify(testId)\r\n    })\r\n    .then(response => {\r\n        return response.json()\r\n    })\r\n    .catch(err => console.log(err))\r\n\r\n}\r\n\r\n","import React, { useState } from 'react' \r\nimport { Link, Redirect } from 'react-router-dom'\r\n\r\nimport { Button, Form, Container, Row, Col, Modal } from 'react-bootstrap'\r\n\r\nimport { submitTest } from '../../apiCalls/adminApis'\r\nimport { isAuthenticated } from '../../apiCalls/auth'\r\n\r\nimport Base from '../../components/base/Base'\r\n\r\n// module to convert excel into json\r\nimport * as XLSX from \"xlsx\";\r\n\r\nimport './table.css'\r\n\r\nconst CreateTestPage = () => {\r\n\r\n    const {user, token} = isAuthenticated();\r\n\r\n    const [testDetails, setTestDetails] = useState(\r\n        {\r\n            name:\"\",\r\n            description:\"\",\r\n            startTime:\"\",\r\n            endTime:\"\",\r\n            duration:\"\"\r\n        }\r\n    )\r\n\r\n    const [questions, setQuestions] = useState([])\r\n    const [answers, setAnswers] = useState([])\r\n\r\n    const [testCreationSuccess, setTestCreationSuccess] = useState(false)\r\n\r\n    const { name, description, startTime, endTime, duration} =  testDetails\r\n\r\n    const handleCloseAfterSubmit = () => setTestCreationSuccess(false);\r\n\r\n    const handleChange = name => event => {\r\n        setTestDetails({...testDetails, [name]: event.target.value})\r\n    }\r\n\r\n\r\n\r\n   \r\n\r\n\r\n    const submitTestDetails = (event) => {\r\n        event.preventDefault();\r\n        submitTest(user._id, token, { name, description, startTime, endTime, duration, questions, answers })\r\n        .then(data => {\r\n            // console.log(data)\r\n            setTestCreationSuccess(true)\r\n        })\r\n        .catch(err => console.log(\"error in submititng test\",err))\r\n    }\r\n\r\n\r\n    const formInputs = () => {\r\n        return(\r\n            <Container className=\"mt-4 mb-4 px-4 border-bottom border-top py-5\">\r\n                <Row>\r\n                    <Form>\r\n\r\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicName\">\r\n                        <Form.Label>Test Name</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Enter test Name Here\" onChange={handleChange(\"name\")} value={name} />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicDescription\">\r\n                        <Form.Label>Test Description</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Enter Test description\" onChange={handleChange(\"description\")} value={description} />\r\n                    </Form.Group>\r\n                \r\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicDate\">\r\n                        <Form.Label>Start Time</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"24-H format: (month dd, yyyy hh:mm:ss) eg. jan 27, 2021 02:30:00\" onChange={handleChange(\"startTime\")} value={startTime} />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicTime\">\r\n                        <Form.Label>End Time</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"24-H format: (month dd, yyyy hh:mm:ss) eg. jan 27, 2021 02:30:00\" onChange={handleChange(\"endTime\")} value={endTime} />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicDuration\">\r\n                        <Form.Label>Duration (in minutes)</Form.Label>\r\n                        <Form.Control type=\"number\" placeholder=\"eg. 60 \" onChange={handleChange(\"duration\")} value={duration} />\r\n                    </Form.Group>\r\n\r\n                    \r\n\r\n                    </Form>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n\r\n\r\n    \r\n\r\n    const readExcel = (file) => {\r\n        const promise = new Promise((resolve, reject) => {\r\n          const fileReader = new FileReader();\r\n          fileReader.readAsArrayBuffer(file);\r\n    \r\n          fileReader.onload = (e) => {\r\n            const bufferArray = e.target.result;\r\n    \r\n            const wb = XLSX.read(bufferArray, { type: \"buffer\" });\r\n    \r\n            const wsname = wb.SheetNames[0];\r\n    \r\n            const ws = wb.Sheets[wsname];\r\n    \r\n            const data = XLSX.utils.sheet_to_json(ws);\r\n    \r\n            resolve(data);\r\n          };\r\n    \r\n          fileReader.onerror = (error) => {\r\n            reject(error);\r\n          };\r\n        });\r\n    \r\n        promise.then((d) => {\r\n            // console.log(d)\r\n        //   setItems(d);\r\n\r\n        var questionsLocal = [];\r\n        var answersLocal = [];\r\n\r\n          for (let i = 0; i < d.length; i++) {\r\n              var temp={\r\n                  no:\"\",\r\n                  text:\"\",\r\n                  a:\"\",\r\n                  b:\"\",\r\n                  c:\"\",\r\n                  d:\"\"\r\n              }\r\n              var answer = String(d[i].answer).trim()\r\n              \r\n              temp.no = d[i].no\r\n              temp.text = String(d[i].text).trim()\r\n              temp.a = String(d[i].a).trim()\r\n              temp.b = String(d[i].b).trim()\r\n              temp.c = String(d[i].c).trim()\r\n              temp.d = String(d[i].d).trim()\r\n              \r\n              questionsLocal.push(temp);\r\n              answersLocal.push(answer)\r\n\r\n          }\r\n\r\n          setQuestions(questionsLocal)\r\n          setAnswers(answersLocal)\r\n        });\r\n    };\r\n\r\n\r\n\r\n    const excelInput = () => {\r\n        return(\r\n            <Container className=\"d-flex justify-content-center mt-3 mb-3\">\r\n                <label style={{fontSize:'1.2em'}} className=\"mx-3\">Choose an Excel file:</label>\r\n                <input\r\n                type=\"file\"\r\n                onChange={(e) => {\r\n                const file = e.target.files[0];\r\n                readExcel(file);\r\n                }}\r\n                />\r\n            </Container>\r\n        )\r\n    }\r\n\r\n\r\n    const Header = () => {\r\n        return(\r\n            <Container style={{marginTop:'10vh', marginBottom:'10vh'}}>\r\n                <Row>\r\n                    <Col style={{display:'flex', justifyContent:'center', alignItems:'center'}}>\r\n                        <h2>Create A New Test</h2>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n\r\n\r\n    const DisplayExcelData = () => {\r\n        var idx = -1;\r\n        return(\r\n            <Container fluid className=\"mt-5 mb-5\">\r\n                <Row>\r\n                    <Col style={{overflowX:'auto'}}>\r\n                        <table id=\"table-to-xls\">\r\n                            <tr>\r\n                                <th className=\"col-1\">no</th>\r\n                                <th className=\"col-6\">text</th>\r\n                                <th className=\"col-1\">a</th>\r\n                                <th className=\"col-1\">b</th>\r\n                                <th className=\"col-1\">c</th>\r\n                                <th className=\"col-1\">d</th>\r\n                                <th className=\"col-1\">answer</th>\r\n                            </tr>\r\n\r\n                        {questions.map(question => {\r\n                            idx = idx+1;\r\n                            return(\r\n                                <tr>\r\n                                    <td className=\"py-2 col-1\" >{question.no}</td>\r\n                                    <td className=\"py-2 col-6\" >{question.text}</td>\r\n                                    <td className=\"py-2 col-1\" >{question.a}</td>\r\n                                    <td className=\"py-2 col-1\" >{question.b}</td>\r\n                                    <td className=\"py-2 col-1\" >{question.c}</td>\r\n                                    <td className=\"py-2 col-1\" >{question.d}</td>\r\n                                    <td className=\"py-2 col-1\" >{answers[idx]}</td>\r\n                                </tr>\r\n                            )\r\n                            \r\n                        })}\r\n                        </table>\r\n                    </Col>\r\n\r\n                    \r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n\r\n    const DisplayCreateButton = () => {\r\n        return(\r\n            <Container>\r\n                <Row>\r\n                    <Col style={{display:'flex', justifyContent:'center', alignItems:'center'}} >\r\n                        <Button variant=\"secondary\" size=\"md\" className=\"mt-1 mb-1\" style={{ minWidth:'50vw'}}onClick={submitTestDetails}>Create</Button>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n\r\n    const showTestCreationSuccess = () => {\r\n        return(\r\n            <Modal\r\n            show={testCreationSuccess}\r\n            onHide={handleCloseAfterSubmit}\r\n            backdrop=\"static\"\r\n            keyboard={false}\r\n            >\r\n               \r\n                <Modal.Body>\r\n                Test Created Successfuly.\r\n                </Modal.Body>\r\n\r\n\r\n                <Modal.Footer>\r\n                <Link style={{textDecoration:'none'}} to=\"/admin/dashboard\">\r\n                    <Button variant=\"secondary\" className=\"px-5\">\r\n                        \r\n                        <span style={{color:'#fff'}}>Ok</span>\r\n                       \r\n                    </Button>\r\n                </Link>    \r\n                </Modal.Footer>\r\n            </Modal>\r\n        )\r\n    }\r\n\r\n    return(\r\n   \r\n        <Base>\r\n        <Header />\r\n        \r\n        {formInputs()}\r\n\r\n        {excelInput()}\r\n\r\n        {DisplayExcelData()}\r\n\r\n        \r\n        {DisplayCreateButton()}\r\n\r\n        {showTestCreationSuccess()}\r\n\r\n        </Base>\r\n       \r\n    )\r\n}\r\n\r\nexport default CreateTestPage;","import React from 'react'\r\nimport { Container } from 'react-bootstrap'\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\n\r\nconst LoadingScreen = () => {\r\n    return(\r\n        <Container fluid style={{width:'100%', height:'700px', display:'flex', alignItems:'center', justifyContent:'center'}}>\r\n               <div> \r\n                    <Loader\r\n                        type=\"Grid\"\r\n                        color=\"#0D0D0D\"\r\n                        height={80}\r\n                        width={80}\r\n                        timeout={10000} //3 secs\r\n                    />\r\n                </div> \r\n            </Container>\r\n    )\r\n}\r\n\r\nexport default LoadingScreen;","import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nimport { API } from '../../backend'\r\n\r\nimport { isAuthenticated } from '../../apiCalls/auth'\r\n\r\nimport Base from '../../components/base/Base'\r\nimport LoadingScreen from '../../components/loader/LoadingScreen'\r\n\r\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel';\r\n\r\nimport './table.css'\r\n\r\nconst ViewAllSubmissions = () => {\r\n\r\n    const {user, token} = isAuthenticated();\r\n\r\n    const [testsList, setTestsList] = useState([])\r\n    const [error, setError] = useState(false)\r\n\r\n    const [loading, setLoading] = useState(true)\r\n    \r\n   \r\n    const loadalltestsubmissions = async () => {\r\n        try {\r\n            const {data} = await axios.get(`${API}/testSubmissions/${user._id}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            \r\n            //  console.log(\"test list received\",data)\r\n            setTestsList(data)\r\n            // console.log(\"test list local\",testsList)\r\n            setLoading(false)\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadalltestsubmissions()\r\n    },[])\r\n\r\n    const heading = () => {\r\n        return(\r\n            <Container>\r\n                <Row>\r\n                    <Col style={{display:'flex', alignIntems:'center', justifyContent:'center', marginTop:'5em', marginBottom:'5em'}}>\r\n                        <h1>All Submissions</h1>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n\r\n    var exceldownloadname = \"allSubmissions\"\r\n\r\n    const submissionsTable = () => {\r\n        return(\r\n            <Container  className=\"mt-5 mb-5\">\r\n            <Row>\r\n                <Col style={{display:'flex', flexDirection:'row-reverse'}}>\r\n\r\n                <ReactHTMLTableToExcel\r\n                id=\"test-table-xls-button\"\r\n                className=\"download-table-xls-button mt-2 mb-2\"\r\n                table=\"table-to-xls\"\r\n                filename={exceldownloadname}\r\n                sheet={exceldownloadname}\r\n                buttonText=\"Download as XLS\"/>\r\n                \r\n                </Col>\r\n            </Row>\r\n            <Row></Row>\r\n            <Row>\r\n            <Col style={{overflowX:'auto'}}>\r\n            <table id=\"table-to-xls\">\r\n            <tbody>\r\n                <tr>\r\n                    <th>Name</th>\r\n                    <th>Email</th>\r\n                    <th>Phone</th>\r\n                    <th>Test</th>\r\n                    <th>Score</th>\r\n                </tr>\r\n                {testsList && testsList.map(submission => {\r\n                    return(\r\n                        <tr key={submission._id}>\r\n                            <td className=\"px-2 py-2\">{submission.studentName}</td>\r\n                            <td className=\"px-2 py-2\">{submission.email}</td>\r\n                            <td className=\"px-2 py-2\">{submission.contactNumber}</td>\r\n                            <td className=\"px-2 py-2\">{submission.testId.name}</td>\r\n                            <td className=\"px-2 py-2\">{submission.score}</td>\r\n                        </tr>\r\n                    )\r\n                })}\r\n            </tbody>\r\n            </table>\r\n            </Col>\r\n            </Row>\r\n            </Container>\r\n        )\r\n    }\r\n\r\n\r\n    if(loading == true){\r\n        return(\r\n            <LoadingScreen />\r\n        )\r\n    }\r\n\r\n\r\n    return(\r\n        <Base>\r\n        \r\n            {heading()}\r\n\r\n            {submissionsTable()}\r\n           \r\n\r\n         \r\n        </Base>\r\n    )\r\n}\r\n\r\nexport default ViewAllSubmissions;","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios'\r\n\r\nimport { Container, Row, Col} from 'react-bootstrap'\r\n\r\nimport { isAuthenticated } from '../../apiCalls/auth'\r\n\r\nimport { API } from '../../backend'\r\n\r\nimport { getSubmissions } from  '../../apiCalls/adminApis'\r\n\r\nimport Base from '../../components/base/Base'\r\nimport LoadingScreen from '../../components/loader/LoadingScreen';\r\n\r\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel';\r\n\r\nimport './table.css'\r\n\r\nconst ViewSubmissionsByTest = ({match}) => {\r\n\r\n    const {user, token} = isAuthenticated();\r\n\r\n    const [testDetails, setTestDetails] = useState()\r\n    const [submissions, setSubmissions] = useState([])\r\n\r\n    const [loading, setLoading] = useState(true)\r\n\r\n\r\n    const loadtestDetails = async (testId) => {\r\n        try {\r\n            const {data} = await axios.get(`${API}/admin/test/${testId}/${user._id}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            \r\n            // console.log(\"test\",data)\r\n            setTestDetails(data)\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    } \r\n\r\n\r\n    const loadtestsubmissions = async (testId) => {\r\n        getSubmissions(user._id, token, {testId})\r\n            .then(data => {\r\n                // console.log(data)\r\n                setSubmissions(data)\r\n                setLoading(false)\r\n            })\r\n            .catch(err => console.log(\"error in getting submissions\",err))\r\n       \r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        loadtestDetails(match.params.testId)\r\n    },[])\r\n\r\n\r\n    useEffect(() => {\r\n        loadtestsubmissions(match.params.testId)\r\n    },[])\r\n\r\n\r\n    const heading = () => {\r\n        return(\r\n            <Container>\r\n                <Row>\r\n                    <Col style={{display:'flex', alignIntems:'center', justifyContent:'center', marginTop:'5em', marginBottom:'5em'}}>\r\n                        <h1>Submissions :</h1>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n\r\n\r\n    var exceldownloadname = \"testSubmission\"\r\n   \r\n\r\n    const submissionsTable = () => {\r\n        return(\r\n            <Container  className=\"mt-5 mb-5\">\r\n            <Row>\r\n                <Col style={{display:'flex', flexDirection:'row-reverse'}}>\r\n\r\n                <ReactHTMLTableToExcel\r\n                id=\"test-table-xls-button\"\r\n                className=\"download-table-xls-button mt-2 mb-2\"\r\n                table=\"table-to-xls\"\r\n                filename={exceldownloadname}\r\n                sheet={exceldownloadname}\r\n                buttonText=\"Download as XLS\"/>\r\n                \r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n            <Col style={{overflowX:'auto'}}>\r\n            <table id=\"table-to-xls\">\r\n            <tbody>\r\n                <tr>\r\n                    <th>Name</th>\r\n                    <th>Email</th>\r\n                    <th>Phone</th>\r\n                    <th>Score</th>\r\n                </tr>\r\n                {submissions && submissions.map(submission => {\r\n                    return(\r\n                        <tr key={submission._id}>\r\n                            <td className=\"px-2 py-2\">{submission.studentName}</td>\r\n                            <td className=\"px-2 py-2\">{submission.email}</td>\r\n                            <td className=\"px-2 py-2\">{submission.contactNumber}</td>\r\n                            <td className=\"px-2 py-2\">{submission.score}</td>\r\n                        </tr>\r\n                    )\r\n                })}\r\n            </tbody>\r\n            </table>\r\n            </Col>\r\n            </Row>\r\n            </Container>\r\n        )\r\n    }\r\n\r\n\r\n\r\n    if(loading == true){\r\n        return(\r\n            <LoadingScreen />\r\n        )\r\n    }\r\n\r\n    return ( \r\n        <Base>\r\n\r\n        {heading()}\r\n\r\n        {submissionsTable()}\r\n        </Base>\r\n    );\r\n}\r\n \r\nexport default ViewSubmissionsByTest;","import React from 'react';\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { Card, Button } from 'react-bootstrap'\r\n\r\nimport axios from 'axios'\r\n\r\nimport { isAuthenticated }  from '../../apiCalls/auth'\r\nimport { API } from '../../backend';\r\n\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst AdminTestCard = ({testName=\"\", testId=\"\", startTime=\"\", endTime=\"\", testDescription=\"\", testDuration=\"\"}) => {\r\n\r\n    const {user, token} = isAuthenticated();\r\n\r\n    // const notifyDelete = () => toast(\"Deleted! Please refresh the page\");\r\n\r\n    // const deleteTest = async () => {\r\n    //     console.log(\"deleteTest trigerred\")\r\n    //     await axios.delete(`${API}/test/delete/${testId}/${user._id}`, {\r\n    //         headers: {\r\n    //           Authorization: `Bearer ${token}`\r\n    //         }\r\n    //       }).then((response) =>  {\r\n    //           console.log(response.data)\r\n    //       return toast(\"Deleted! please refresh the page\", \r\n    //       {\r\n    //         position: \"top-right\",\r\n    //         autoClose: 5000,\r\n    //         hideProgressBar: true,\r\n    //         closeOnClick: true,\r\n    //         pauseOnHover: true,\r\n    //         draggable: true,\r\n    //         progress: undefined,\r\n    //         transition: 'slide'\r\n    //       }\r\n    //       )})\r\n    // }\r\n\r\n    return(\r\n\r\n        <Card style={{ width: '18rem', boxShadow: '1px 1px 1px #fff', borderRadius:'5px' }} className=\"mt-3\">\r\n        \r\n        {/* <ToastContainer /> */}\r\n\r\n        <Card.Body>\r\n            <Card.Title>{testName}</Card.Title>\r\n            <Card.Subtitle style={{fontSize:'small'}} className=\"mb-1 mt-2 text-muted\">From : {startTime}</Card.Subtitle>\r\n            <Card.Subtitle style={{fontSize:'small'}} className=\"mb-1 mt-2 text-muted\">To : {endTime}</Card.Subtitle>\r\n            <Card.Subtitle style={{fontSize:'small'}} className=\"mb-2 mt-1 text-muted\">Duration : {testDuration} minutes</Card.Subtitle>\r\n            <Card.Text style={{fontSize:'0.9em'}} className=\"mt-3 mb-3\">\r\n            {testDescription}\r\n            </Card.Text>\r\n     \r\n            \r\n            <Card.Text style={{fontSize:'0.9em'}} className=\"mt-2 mb-2 text-dark\">Test Id : <br/> {testId}\r\n            </Card.Text>\r\n\r\n            <Card.Text style={{fontSize:'0.9em'}} className=\"mt-2 mb-2 text-dark\">Test Id : <br/> {`${process.env.REACT_APP_BASE_URL}/test/submit/${testId}`}\r\n            </Card.Text>\r\n\r\n        </Card.Body>\r\n\r\n        <Card.Footer style={{textAlign:'center'}} >\r\n            <Link to={`/test/submissions/${testId}`}>View Submissions</Link>\r\n        </Card.Footer>\r\n\r\n        {/*<Card.Footer style={{textAlign:'center'}}>\r\n        <Button variant=\"outline-dark\"   onClick={deleteTest} block>Delete</Button>\r\n        </Card.Footer>\r\n    */}\r\n\r\n        </Card>\r\n\r\n    )\r\n}\r\n\r\nexport default AdminTestCard;\r\n","import React,{useState, useEffect} from 'react';\r\nimport axios from 'axios'\r\n\r\nimport {Container, Row, Col} from 'react-bootstrap'\r\n\r\nimport { API } from '../../backend'\r\n\r\nimport AdminTestCard from '../../components/testCard/AdminTestCard'\r\nimport Base from '../../components/base/Base'\r\nimport LoadingScreen from '../../components/loader/LoadingScreen'\r\n\r\n\r\nconst ViewAllTests = () => {\r\n\r\n    const [testsList, setTestsList] = useState([])\r\n\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    const loadalltests = async () => {\r\n        try {\r\n            const {data} = await axios.get(`${API}/testslist`)\r\n            // console.log(data)\r\n            setTestsList(data)\r\n            setLoading(false)\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadalltests()\r\n    },[])\r\n\r\n    const allTests = () => {\r\n        return(\r\n            <Container>\r\n                <Row style={{textAlign:'center'}} className=\"mt-5 mb-5\">\r\n                    <h2>All Tests :</h2>\r\n                </Row>\r\n                <Container style={testspageStyle.testsListingContainer}>\r\n                    {testsList && testsList.length !=0 ? (\r\n\r\n                        testsList.map(test => {\r\n                            return(\r\n                            \r\n                                <AdminTestCard key={test._id} testName={test.name} testId={test.id} startTime={test.startTime} endTime={test.endTime} testDescription={test.description} testDuration={test.duration} />\r\n                                 \r\n                            )\r\n                        })\r\n\r\n                    ) : (\r\n                        <Container style={testspageStyle.noTestsContainer}>\r\n                            <h5>No Tests Available</h5>\r\n                        </Container>\r\n                    )}\r\n                </Container>\r\n                <hr />\r\n            </Container>\r\n        )\r\n    }\r\n\r\n    \r\n\r\n    if(loading == true){\r\n        return(\r\n            <LoadingScreen />\r\n        )\r\n    }\r\n\r\n    return(\r\n        <Base>\r\n        \r\n            {allTests()}\r\n\r\n        </Base>\r\n    )\r\n}\r\n\r\n\r\nexport default ViewAllTests;\r\n\r\nconst testspageStyle = {\r\n\r\n    testsListingContainer:{\r\n        display:'flex',\r\n        alignItems:'stretch',\r\n        justifyContent:'flex-start', \r\n        flexWrap:'wrap', \r\n        rowGap:'2em', \r\n        columnGap:'2em',\r\n        marginTop:'2vh'\r\n    },\r\n    noTestsContainer:{\r\n        paddingTop:'5em',\r\n        paddingBottom:'5em',\r\n        display:'flex', \r\n        alignItems:'center', \r\n        justifyContent:'center'\r\n    }\r\n\r\n\r\n}","import React from 'react';\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { Card, Button } from 'react-bootstrap'\r\n\r\nimport axios from 'axios'\r\n\r\nimport { isAuthenticated }  from '../../apiCalls/auth'\r\nimport { API } from '../../backend';\r\n\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst DelTestCard = ({testName=\"\", testId=\"\", startTime=\"\", endTime=\"\", testDescription=\"\", testDuration=\"\"}) => {\r\n\r\n    const {user, token} = isAuthenticated();\r\n\r\n    // const notifyDelete = () => toast(\"Deleted! Please refresh the page\");\r\n\r\n    const deleteTest = async () => {\r\n        // console.log(\"deleteTest trigerred\")\r\n        await axios.delete(`${API}/test/delete/${testId}/${user._id}`, {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`\r\n            }\r\n          }).then((response) =>  {\r\n            //   console.log(response.data)\r\n          return toast(\"Deleted! please refresh the page\", \r\n          {\r\n            position: \"top-right\",\r\n            autoClose: 3000,\r\n            hideProgressBar: true,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            transition: 'slide'\r\n          }\r\n          )})\r\n    }\r\n\r\n    return(\r\n\r\n        <Card style={{ width: '18rem', boxShadow: '1px 1px 1px #fff', borderRadius:'5px' }} className=\"mt-3\">\r\n        \r\n        <ToastContainer />\r\n\r\n        <Card.Body>\r\n            <Card.Title>{testName}</Card.Title>\r\n            <Card.Subtitle style={{fontSize:'small'}} className=\"mb-1 mt-2 text-muted\">From : {startTime}</Card.Subtitle>\r\n            <Card.Subtitle style={{fontSize:'small'}} className=\"mb-1 mt-2 text-muted\">To : {endTime}</Card.Subtitle>\r\n            <Card.Subtitle style={{fontSize:'small'}} className=\"mb-2 mt-1 text-muted\">Duration : {testDuration} minutes</Card.Subtitle>\r\n            <Card.Text style={{fontSize:'0.9em'}} className=\"mt-3 mb-3\">\r\n            {testDescription}\r\n            </Card.Text>\r\n     \r\n            \r\n            <Card.Text style={{fontSize:'0.9em'}} className=\"mt-2 mb-2 text-dark\">Test Id : <br/> {testId}\r\n            </Card.Text>\r\n\r\n        </Card.Body>\r\n\r\n      {/*  <Card.Footer style={{textAlign:'center'}} className=\"mt-1 mb-2\">\r\n            <Link to={`/test/submissions/${testId}`}>View Submissions</Link>\r\n        </Card.Footer>\r\n    */}\r\n\r\n        <Card.Footer style={{textAlign:'center'}}>\r\n        <Button variant=\"outline-dark\"   onClick={deleteTest} block>Delete</Button>\r\n        </Card.Footer>\r\n\r\n        </Card>\r\n\r\n    )\r\n}\r\n\r\nexport default DelTestCard;\r\n","import React,{useState, useEffect} from 'react';\r\nimport axios from 'axios'\r\n\r\nimport {Container, Row, Col} from 'react-bootstrap'\r\n\r\nimport { API } from '../../backend'\r\n\r\nimport DeleteTestCard from '../../components/testCard/DeleteTestCard'\r\nimport Base from '../../components/base/Base'\r\nimport LoadingScreen from '../../components/loader/LoadingScreen'\r\n\r\n\r\nconst  DeleteTestsPage = () => {\r\n\r\n    const [testsList, setTestsList] = useState([])\r\n\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    const loadalltests = async () => {\r\n        try {\r\n            const {data} = await axios.get(`${API}/testslist`)\r\n            // console.log(data)\r\n            setTestsList(data)\r\n            setLoading(false)\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadalltests()\r\n    },[])\r\n\r\n    const allTests = () => {\r\n        return(\r\n            <Container>\r\n                <Row style={{textAlign:'center'}} className=\"mt-5 mb-5\">\r\n                    <h2>All Tests :</h2>\r\n                </Row>\r\n                <Container style={testspageStyle.testsListingContainer}>\r\n                    {testsList && testsList.length !=0 ? (\r\n\r\n                        testsList.map(test => {\r\n                            return(\r\n                            \r\n                                <DeleteTestCard key={test._id} testName={test.name} testId={test.id} startTime={test.startTime} endTime={test.endTime} testDescription={test.description} testDuration={test.duration} />\r\n                                 \r\n                            )\r\n                        })\r\n\r\n                    ) : (\r\n                        <Container style={testspageStyle.noTestsContainer}>\r\n                            <h5>No Tests Available</h5>\r\n                        </Container>\r\n                    )}\r\n                </Container>\r\n                <hr />\r\n            </Container>\r\n        )\r\n    }\r\n\r\n    \r\n\r\n    if(loading == true){\r\n        return(\r\n            <LoadingScreen />\r\n        )\r\n    }\r\n\r\n    return(\r\n        <Base>\r\n        \r\n            {allTests()}\r\n\r\n        </Base>\r\n    )\r\n}\r\n\r\n\r\nexport default DeleteTestsPage;\r\n\r\nconst testspageStyle = {\r\n\r\n    testsListingContainer:{\r\n        display:'flex',\r\n        alignItems:'stretch',\r\n        justifyContent:'flex-start', \r\n        flexWrap:'wrap', \r\n        rowGap:'2em', \r\n        columnGap:'2em',\r\n        marginTop:'2vh'\r\n    },\r\n    noTestsContainer:{\r\n        paddingTop:'5em',\r\n        paddingBottom:'5em',\r\n        display:'flex', \r\n        alignItems:'center', \r\n        justifyContent:'center'\r\n    }\r\n\r\n\r\n}","import React from 'react';\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { Card } from 'react-bootstrap'\r\n\r\nconst TestCard = ({testName=\"\", testId=\"\", startTime=\"\", endTime=\"\", testDescription=\"\", testDuration=\"\"}) => {\r\n\r\n    var startDate = new Date(String(startTime)).getTime();\r\n    var endDate = new Date(String(endTime)).getTime();\r\n    var currentDate = new Date().getTime();\r\n\r\n    // console.log(\"duration\",testDuration)\r\n    // console.log(\"duration\",testDescription)\r\n\r\n    return(\r\n\r\n        <Card style={{ width: '18rem', boxShadow: '1px 1px 1px #fff', borderRadius:'5px', }}>\r\n        <Card.Body>\r\n            <Card.Title>{testName}</Card.Title>\r\n\r\n            <Card.Subtitle style={{fontSize:'small'}} className=\"mb-1 mt-2 text-muted\">Active from : {startTime}</Card.Subtitle>\r\n            <Card.Subtitle style={{fontSize:'small'}} className=\"mb-2 mt-1 text-muted\">Till : {endTime}</Card.Subtitle>\r\n            <Card.Subtitle style={{fontSize:'small'}} className=\"mb-2 mt-1 text-muted\">Duration : {testDuration} minutes</Card.Subtitle>\r\n            <Card.Text style={{fontSize:'0.9em'}} className=\"mt-3 mb-3\">\r\n            {testDescription}\r\n            </Card.Text>\r\n            \r\n        </Card.Body>\r\n        {(currentDate >= startDate && endDate >= currentDate) && (\r\n            <Card.Footer style={{textAlign:'center'}}>\r\n            <Link to={`/test/submit/${testId}`}>Attend Now</Link>\r\n            </Card.Footer>\r\n        ) \r\n        }\r\n        </Card>\r\n\r\n    )\r\n}\r\n\r\nexport default TestCard;","const homepageStyle = {\r\n\r\n    testsListingContainer:{\r\n        display:'flex',\r\n        alignItems:'stretch',\r\n        justifyContent:'flex-start', \r\n        flexWrap:'wrap', \r\n        rowGap:'2em', \r\n        columnGap:'2em',\r\n        marginTop:'2vh'\r\n    },\r\n    noTestsContainer:{\r\n        paddingTop:'5em',\r\n        paddingBottom:'5em',\r\n        display:'flex', \r\n        alignItems:'center', \r\n        justifyContent:'center'\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default homepageStyle;","export default __webpack_public_path__ + \"static/media/ncetlogobg1.5c5843f8.png\";","import React from 'react'\r\n\r\nimport { Col, Row,Container, Image } from \"react-bootstrap\";\r\n\r\n\r\nimport ncetlogobg1 from '../../assets/ncetlogobg1.png'\r\n\r\nconst CollegeInfo = () => {\r\n    return(\r\n        <Container fluid className=\"bg-dark\" style={{marginBottom:'10vh' , padding:50}}>\r\n            <Row className=\"mt-5 mb-5\">\r\n                <Col xl={7} md={7} sm={12} xs={12} style={{display:'flex', alignItems:'center', justifyContent:'center'}}>\r\n                    <Image src={ncetlogobg1} style={{width:'80%', height:'auto'}} rounded/>\r\n                </Col>\r\n                <Col xl={5} md={5} sm={12} xs={12} className=\"mt-5 mb-5\" style={{display:'flex', alignItems:'center', justifyContent:'flex-start'}}>\r\n                    <ul className=\"text-white\">\r\n                        <li>Autonomous College under VTU, Belgaum</li>\r\n                        <li>AICTE Approved Institution</li>\r\n                        <li>UGC Approved Institution</li>\r\n                        <li>Institution Accredited by NAAC with ‘A’ Grade</li>\r\n                        <li>NBA accredited Departments</li>\r\n                        <li>Recognized under Section 12(B) of the UGC Act-1956</li>\r\n                        <li>Recognized under Section 2(f) of the UGC Act-1956</li>\r\n                        <li>ISO 14001:2015 EMS certified Institution</li>\r\n                        <li>ISO 22000:2018 FSMS certified Institution</li>\r\n                        <li>ISO 9001:2015 QMS certified Institution</li>\r\n                    </ul>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default CollegeInfo","import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\n\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nimport { API } from '../../backend'\r\n\r\nimport TestCard from '../../components/testCard/TestCard'\r\nimport Base from '../../components/base/Base'\r\n\r\nimport homepageStyle from './homepageStyle'\r\n\r\nimport LoadingScreen from '../../components/loader/LoadingScreen'\r\nimport CollegeInfo from '../../components/collegeInfo/CollegeInfo'\r\n\r\n\r\n\r\nconst HomePage = () => {\r\n\r\n    const [currentTestsList, setCurrentTestsList] = useState([])\r\n    const [upcomingTestsList, setUpcomingTestsList] = useState([])\r\n    const [previousTestsList, setPreviousTestsList] = useState([])\r\n\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    \r\n   \r\n\r\n    const loadalltests = async () => {\r\n        try {\r\n            const {data} = await axios.get(`${API}/testslist`)\r\n            // console.log(data)\r\n\r\n            var currentTestsListLocal = [];\r\n            var upcomingTestsListLocal = [];\r\n            var previousTestsListLocal = [];\r\n\r\n            var currentDate = new Date().getTime();\r\n\r\n            for (let i = 0; i < data.length; i++) {\r\n                \r\n                var startDate = new Date(String(data[i].startTime)).getTime();\r\n                var endDate = new Date(String(data[i].endTime)).getTime();\r\n\r\n                // console.log(\"determining test\",data[i])\r\n                // console.log(startDate)\r\n                // console.log(currentDate)\r\n                // console.log(endDate)\r\n\r\n                if(currentDate >= startDate && endDate >= currentDate){\r\n                 //   console.log(\"sending to current\", data[i])  \r\n                    currentTestsListLocal.push(data[i])\r\n                }\r\n                else if(startDate > currentDate ){\r\n                   // console.log(\"sending to upcoming\", data[i])\r\n                    upcomingTestsListLocal.push(data[i])\r\n                }\r\n                else if(currentDate > endDate){\r\n                  //  console.log(\"sending to previous\", data[i])\r\n                    previousTestsListLocal.push(data[i])\r\n                }\r\n            }\r\n\r\n            setCurrentTestsList(currentTestsListLocal)\r\n            setUpcomingTestsList(upcomingTestsListLocal)\r\n            setPreviousTestsList(previousTestsListLocal)\r\n\r\n            setLoading(false)\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadalltests()\r\n    },[])\r\n\r\n\r\n    const currentTestsSection = () => {\r\n        return(\r\n            <Container>\r\n                <Row>\r\n                    <h2>Ongoing Tests :</h2>\r\n                </Row>\r\n                <Container style={homepageStyle.testsListingContainer}>\r\n                    {currentTestsList && currentTestsList.length !=0 ? (\r\n\r\n                        currentTestsList.map(test => {\r\n                          //  console.log(test)\r\n                            return(\r\n                                <TestCard testName={test.name} testId={test.id} startTime={test.startTime} endTime={test.endTime} testDescription={test.description} testDuration={String(test.duration)} />\r\n                           \r\n                            )\r\n                        })\r\n\r\n                    ) : (\r\n                        <Container style={homepageStyle.noTestsContainer}>\r\n                            <h5>Currently there are no ongoing tests</h5>\r\n                        </Container>\r\n                    )}\r\n                </Container>\r\n                <hr />\r\n            </Container>\r\n        )\r\n    } \r\n\r\n    const upcomingTestsSection = () => {\r\n        return(\r\n            <Container>\r\n                <Row>\r\n                    <h2>Upcoming Tests :</h2>\r\n                </Row>\r\n                <Container style={homepageStyle.testsListingContainer}>\r\n                    {upcomingTestsList && upcomingTestsList.length !=0 ? (\r\n\r\n                        upcomingTestsList.map(test => {\r\n                            return(\r\n                                <TestCard testName={test.name} testId={test.id} startTime={test.startTime} endTime={test.endTime} testDescription={test.description} testDuration={String(test.duration)} />\r\n                           \r\n                            )\r\n                        })\r\n\r\n                    ) : (\r\n                        <Container style={homepageStyle.noTestsContainer}>\r\n                            <h5>Currently there are no upcoming tests</h5>\r\n                        </Container>\r\n                    )}\r\n                </Container>\r\n                <hr />\r\n            </Container>\r\n        )\r\n    } \r\n\r\n    const previousTestsSection = () => {\r\n        return(\r\n            <Container>\r\n                <Row>\r\n                    <h2>Previous Tests :</h2>\r\n                </Row>\r\n                <Container style={homepageStyle.testsListingContainer}>\r\n                    {previousTestsList && previousTestsList.length !=0 ? (\r\n\r\n                        previousTestsList.map(test => {\r\n                            return(\r\n                                <TestCard testName={test.name} testId={test.id} startTime={test.startTime} endTime={test.endTime} testDescription={test.description} testDuration={String(test.duration)} />\r\n                           \r\n                            )\r\n                        })\r\n\r\n                    ) : (\r\n                        <Container style={homepageStyle.noTestsContainer}>\r\n                            <h5>no previous tests found</h5>\r\n                        </Container>\r\n                    )}\r\n                </Container>\r\n                <hr />\r\n            </Container>\r\n        )\r\n    }\r\n    \r\n    \r\n    if(loading == true){\r\n        return(\r\n            <LoadingScreen />\r\n        )\r\n    }\r\n\r\n    return(\r\n        <Base>\r\n\r\n        <CollegeInfo />\r\n        \r\n        <Container className=\"mt-4 mb-5\" fluid>\r\n            {currentTestsSection()}\r\n        </Container>\r\n\r\n        <Container className=\"mt-5 mb-5\" fluid>\r\n            {upcomingTestsSection()}\r\n        </Container>\r\n\r\n        <Container className=\"mt-5 mb-4\" fluid>\r\n            {previousTestsSection()}\r\n        </Container>\r\n\r\n        </Base>\r\n    )\r\n}\r\n\r\nexport default HomePage;","import React, {useState} from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { Form, Button, Container, Col, Row, Card } from 'react-bootstrap'\r\n\r\nimport {  signupFunction, authenticate, isAuthenticated } from '../../apiCalls/auth'\r\n\r\nimport Base from '../../components/base/Base'\r\n\r\nimport './signup.css'\r\n\r\n\r\n\r\n\r\nconst Signup = () => {\r\n\r\n    const [userData, setUserData] = useState({\r\n        name: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        error: \"\",\r\n        success: false\r\n    })\r\n\r\n    const [missing, setMissing] = useState(false)\r\n\r\n    const { name, email, password, error, success } = userData\r\n\r\n    \r\n\r\n    const handleChange = name => event => {\r\n        setMissing(false)\r\n        setUserData({...userData, error: false, [name]: event.target.value})\r\n    }\r\n\r\n    const onSubmit = event => {\r\n        event.preventDefault()\r\n        if(name == \"\" || email == \"\" || password == \"\"){\r\n            setMissing(true)\r\n        }\r\n        else{\r\n        setUserData({...userData, error: false})\r\n        signupFunction({name, email, password})\r\n        .then(data => {\r\n            if(data?.error){\r\n                setUserData({...userData, error: data.error, success:false})\r\n            }\r\n            else{\r\n                setUserData({...userData, name:\"\", email:\"\", password:\"\", error:\"\", success: true})\r\n            }\r\n        })\r\n        .catch(err => console.log(err))\r\n        }\r\n    }\r\n\r\n\r\n\r\n    const successMessage = () => (\r\n        <div className=\"row\">\r\n        <div className=\"col-md-6 offset-sm-3 text-left\">\r\n        <div className=\"\" style={{display: success ? \"\" : \"none\"}}>\r\n        <h6 className=\"text-center text-dark\">\r\n        Your account was created successfully. Please <Link to=\"/signin\">Login here</Link>\r\n        </h6>\r\n        </div>\r\n        </div>\r\n        </div>\r\n    )\r\n\r\n\r\n    const errorMessage = () => (\r\n        <div className=\"row\">\r\n        <div className=\"col-md-6 offset-sm-3 text-left\">\r\n        <div className=\"\" style={{display: error ? \"\" : \"none\"}}>\r\n        <h6 className=\"text-center text-dark\">\r\n        {error}\r\n        </h6>\r\n        </div>\r\n        </div>\r\n        </div>\r\n    )\r\n\r\n\r\n    const fieldsMissingMessage = () => {\r\n        if(missing != \"\")\r\n        return(\r\n            <div className=\"row\">\r\n        <div className=\"col-md-6 offset-sm-3 text-left\">\r\n        <div className=\"\" >\r\n        <h6 className=\"text-center text-dark\">\r\n            Please fill the details\r\n        </h6>\r\n        </div>\r\n        </div>\r\n        </div>\r\n        )\r\n        \r\n    }\r\n\r\n\r\n\r\n    const signupForm = () => {\r\n        return(\r\n            <Form className=\"signup-form\">\r\n\r\n                <Form.Group className=\"my-3 mx-5\" controlId=\"formBasicName\">\r\n                    <Form.Label className=\"text-start\">Name</Form.Label>\r\n                    <Form.Control type=\"text\" placeholder=\"Enter Name\" onChange={handleChange(\"name\")} value={name}  />\r\n                </Form.Group>\r\n            \r\n                <Form.Group className=\"my-3 mx-5\" controlId=\"formBasicEmail\">\r\n                    <Form.Label>Email address</Form.Label>\r\n                    <Form.Control type=\"email\" placeholder=\"Enter email\" onChange={handleChange(\"email\")} value={email} />\r\n                </Form.Group>\r\n    \r\n                <Form.Group className=\"my-3 mx-5\" controlId=\"formBasicPassword\">\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control type=\"password\" placeholder=\"Password\" onChange={handleChange(\"password\")}  value={password} />\r\n                </Form.Group>\r\n    \r\n    \r\n                <Form.Group className=\"my-4 mx-5 d-grid \">\r\n                    <Button variant=\"secondary\" block onClick={onSubmit}>\r\n                        Sign Up\r\n                    </Button>\r\n                </Form.Group>\r\n                \r\n            </Form>\r\n        )\r\n    }\r\n\r\n\r\n    return(\r\n        <Base>\r\n\r\n        \r\n            <Container>\r\n                <Row>\r\n                    <Col lg={6} md={6} sm={12} className='offset-lg-3 mt-5'>\r\n                        <Card  className=\"signup-card\">\r\n                            {signupForm()}\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n\r\n            {successMessage()}\r\n            {errorMessage()}\r\n            {fieldsMissingMessage()}\r\n\r\n           \r\n        </Base>\r\n    )\r\n\r\n}\r\n\r\nexport default Signup;","import React, {useState} from 'react'\r\nimport { Link, Redirect } from 'react-router-dom'\r\n\r\nimport { Form, Button, Container, Col, Row, Card } from 'react-bootstrap'\r\n\r\nimport { signinFunction, authenticate, isAuthenticated } from '../../apiCalls/auth'\r\n\r\nimport Base from '../../components/base/Base'\r\n\r\nimport './signin.css'\r\n\r\nconst Signin = () => {\r\n\r\n    const [userData, setUserData] = useState({\r\n        email: \"\",\r\n        password: \"\",\r\n        error: \"\",\r\n        loading: false,\r\n        didRedirect: false\r\n    })\r\n\r\n    const [missing, setMissing] = useState(false)\r\n\r\n    const { email, password, error, loading, didRedirect} = userData\r\n    const {user} = isAuthenticated()\r\n\r\n    const handleChange = name => event => {\r\n        setMissing(false)\r\n        setUserData({...userData, error: false, [name]: event.target.value})\r\n    }\r\n\r\n    const onSubmit = event => {\r\n        event.preventDefault()\r\n        if( email == \"\" || password == \"\"){\r\n            setMissing(true)\r\n        }\r\n        else{\r\n        setUserData({...userData, error: false, loading: true})\r\n        signinFunction({email, password})\r\n        .then(data => {\r\n            if(data?.error){\r\n                setUserData({...userData, error: data.error, loading:false})\r\n            }\r\n            else{\r\n                authenticate(data, () => {\r\n                    setUserData({...userData, didRedirect: true})\r\n                })\r\n              \r\n            }\r\n        })\r\n        .catch(err => console.log(err))\r\n        }\r\n    }\r\n\r\n\r\n    const performRedirect = () => {\r\n\r\n        if(didRedirect){\r\n            if(user && user.role === 1){\r\n                return <Redirect to=\"/\" />\r\n            }\r\n        }\r\n        if(isAuthenticated()){\r\n            return <Redirect to=\"/\" />\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const loadingMessage = () => {\r\n        return(\r\n            loading && (\r\n                <div className=\"parent d-flex align-items-center justify-content-center\">\r\n                <div className=\"child col-lg-6 col-md-6 col-sm-12\">\r\n\r\n                <h3 className=\"text-center text-dark\">Loading...</h3>                \r\n\r\n                </div>\r\n                </div>\r\n            )\r\n        )\r\n    }\r\n\r\n\r\n    const errorMessage = () => {\r\n        return(\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 offset-sm-3 text-left\">\r\n                    <div className=\"\" style={{display: error ? \"\" : \"none\"}}>\r\n                        <h6 className=\"text-center text-dark\">\r\n                        {error}\r\n                        </h6>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n  }\r\n\r\n   \r\n\r\n\r\n  \r\n\r\n    const fieldsMissingMessage = () => {\r\n        if(missing != \"\")\r\n        return(\r\n            <div className=\"row\">\r\n        <div className=\"col-md-6 offset-sm-3 text-left\">\r\n        <div className=\"\" >\r\n        <h6 className=\"text-center text-dark\">\r\n            Please enter the details\r\n        </h6>\r\n        </div>\r\n        </div>\r\n        </div>\r\n        )\r\n        \r\n    }\r\n\r\n\r\n\r\n    const signinForm = () => {\r\n        return(\r\n            <Form className=\"signup-form\">\r\n               \r\n                <Form.Group className=\"my-3 mx-5\" controlId=\"formBasicEmail\">\r\n                    <Form.Label>Email address</Form.Label>\r\n                    <Form.Control type=\"email\" placeholder=\"Enter email\" onChange={handleChange(\"email\")} value={email} />\r\n                </Form.Group>\r\n    \r\n                <Form.Group className=\"my-3 mx-5\" controlId=\"formBasicPassword\">\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control type=\"password\" placeholder=\"Password\" onChange={handleChange(\"password\")}  value={password} />\r\n                </Form.Group>\r\n    \r\n    \r\n                <Form.Group className=\"my-4 mx-5 d-grid \">\r\n                    <Button variant=\"secondary\" block onClick={onSubmit}>\r\n                        Sign In\r\n                    </Button>\r\n                </Form.Group>\r\n             \r\n            \r\n                \r\n            </Form>\r\n        )\r\n    }\r\n\r\n\r\n    return(\r\n        <Base>\r\n        \r\n            {loadingMessage()}\r\n        \r\n            <Container>\r\n                <Row>\r\n                    <Col lg={6} md={6} sm={12} className='offset-lg-3 mt-5'>\r\n                        <Card  className=\"signup-card\">\r\n                            {signinForm()}\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n\r\n            \r\n            {errorMessage()}\r\n            {fieldsMissingMessage()}\r\n            {performRedirect()}\r\n           \r\n        </Base>\r\n    )\r\n\r\n}\r\n\r\nexport default Signin;"," const { API } = require(\"../backend\")\r\n \r\nexport const submitResponse = submission => {\r\n    // console.log(\"submir response trigerred\")\r\n    // console.log(\"submission data\", submission)\r\n    return fetch(`${API}/test/submit`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(submission)\r\n    })\r\n    .then(response => {\r\n        return response.json()\r\n    })\r\n    .catch(err => console.log(err))\r\n\r\n}\r\n\r\n\r\n","//module imports\r\nimport React, { useEffect, useState } from 'react' \r\nimport { Link }  from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport { useTimer } from 'react-timer-hook';\r\n\r\n// UI related imports\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport { Button, Form, Modal, Row, Col, Card, Container } from 'react-bootstrap'\r\n\r\n\r\n// api import\r\nimport { API } from '../../backend'\r\n\r\n// api helper import\r\nimport {  submitResponse } from '../../apiCalls/userApis'\r\n\r\n\r\n//custom components import\r\nimport FooterBar from '../../components/footer/FooterBar'\r\nimport LoadingScreen from '../../components/loader/LoadingScreen'\r\n\r\n\r\n\r\nconst SubmitTest = ({match}) => {\r\n\r\n        // console.log(\"testid is\", match.params)\r\n\r\n        //for loading screen\r\n        const [loading, setLoading] = useState(true)\r\n\r\n        //for formMOdal\r\n        const [showFormModal, setShowFormModal] = useState(true);\r\n        const [showAfterSubmitModal, setShowAfterSubmitModal] = useState(false);\r\n\r\n        const handleClose = () => setShowFormModal(false);\r\n        const handleCloseAfterSubmit = () => setShowAfterSubmitModal(false);\r\n\r\n\r\n        //main object where all details of test to be saved\r\n        const [testValues, setTestValues] = useState(null)\r\n\r\n        //for for modals validation\r\n        const [nameError, setNameError] = useState(false)\r\n        const [emailError, setEmailError] = useState(false)\r\n        const [phoneError, setPhoneError] = useState(false)\r\n\r\n        //object to be send for submiting response\r\n        const [submitValues, setSubmitValues] = useState({\r\n            testId: {\r\n                _id: match.params.testId\r\n            },\r\n            studentName: \"\",\r\n            contactNumber: \"\",\r\n            email: \"\",\r\n        })\r\n\r\n        // destructuring submitvalues\r\n        const { testId, studentName, contactNumber, email } =  submitValues\r\n\r\n        //global answers object(to send to backend)\r\n        const[answers, setAnswers] = useState([])\r\n\r\n        //for timer hook        \r\n        const [testEndTime, setTestEndTime] = useState(0)\r\n        const [testDuration, setTestDuration] = useState(0)\r\n\r\n        //handling input changes in formdata\r\n        const handleChange = name => event => {\r\n            setSubmitValues({...submitValues, [name]: event.target.value})\r\n            if(name == \"studentName\"){setNameError(false)}\r\n            if(name == \"email\"){setEmailError(false)}\r\n            if(name == \"contactNumber\"){setPhoneError(false)}\r\n        }\r\n\r\n\r\n        //function to submit response\r\n        const onSubmit = () => {\r\n         \r\n            // console.log(\"onsubmit trigerred\",testId, studentName, contactNumber, email, answers)\r\n            submitResponse({testId, studentName, contactNumber, email, answers})\r\n            .then(data => {\r\n                //  console.log(\"submitted\",data)\r\n                setShowAfterSubmitModal(true)\r\n            })\r\n            .catch(err => console.log(\"error occured while submitting response\",err))\r\n        }\r\n\r\n\r\n        //initializing answers array\r\n        const initializeAnswersArray = (arraylen) => {\r\n            var answersLocal = []\r\n            for (let i = 0; i < arraylen; i++) {\r\n               answersLocal.push(\"noResponse\")\r\n            }\r\n            // console.log(\"answerslocal\",answersLocal)\r\n            setAnswers(answersLocal)\r\n        }\r\n\r\n        \r\n\r\n        //load the test data\r\n        const loadTest = async (testIde) => {\r\n            try {\r\n                const {data} = await axios.get(`${API}/test/${testIde}`)\r\n                setTestValues(data)\r\n                initializeAnswersArray(data.questions.length)\r\n                setLoading(false)\r\n                // setTestEndTime(data.endTime)\r\n                setTestEndTime(String(new Date()))\r\n                setTestDuration(data.duration*60)\r\n            } catch (error) {\r\n                console.log(error)\r\n                // console.log(\"not success\")\r\n            }\r\n        }\r\n\r\n        //first function\r\n        useEffect(() => {\r\n            loadTest(match.params.testId)\r\n        },[])\r\n\r\n\r\n\r\n        //form details checker\r\n        const submitFormDetails = () => {\r\n            nameErrorMessage()\r\n            emailErrorMessage()\r\n            phoneErrorMessage()\r\n            if(nameChecker() === true && emailChecker() === true && phoneChecker() === true  )\r\n            {\r\n                setShowFormModal(false)\r\n            }\r\n    \r\n            \r\n        }\r\n        \r\n        //form error checker\r\n        const nameChecker = () => {\r\n            // console.log(\"name checker running\")\r\n            if( studentName.trim().length == 0){\r\n            setNameError(true)\r\n            return false\r\n            }\r\n            else\r\n            return true\r\n        }\r\n\r\n        const emailChecker = () => {\r\n            // console.log(\"email checker running\")\r\n            var emailregex = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n            if(! email.match(emailregex)){\r\n            setEmailError(true)\r\n            return false\r\n            }\r\n            else{\r\n            setEmailError(false)\r\n            return true\r\n            }\r\n            \r\n        }\r\n\r\n        const phoneChecker = () => {\r\n            var phoneno = /^\\d{10}$/;\r\n            // console.log(\"phone checker running\")\r\n            if(! contactNumber.match(phoneno)){\r\n            setPhoneError(true)\r\n            return false\r\n            }\r\n            else\r\n            return true\r\n        }\r\n\r\n\r\n        //form error messages\r\n        const nameErrorMessage = () => {\r\n            // console.log(\"name error running\")\r\n            // console.log(\"name error\",nameError)\r\n            if(nameError === true){\r\n            return <p style={{fontSize:'0.9em'}} className=\"text-danger\">Please Enter a valid name</p>\r\n            }\r\n        }\r\n\r\n        const emailErrorMessage = () => {\r\n            // console.log(\"email error running\")\r\n            // console.log(\"email error\",emailError)\r\n            if(emailError === true){\r\n            return <p style={{fontSize:'0.9em'}} className=\"text-danger\">Please Enter a valid email</p>\r\n            }\r\n        }\r\n\r\n        const phoneErrorMessage = () => {\r\n            // console.log(\"phone error running\")\r\n            // console.log(\"phone error\",phoneError)\r\n            if(phoneError === true){\r\n            return <p style={{fontSize:'0.9em'}} className=\"text-danger\">Please Enter a valid phone number</p>\r\n            }\r\n        }\r\n\r\n\r\n        //form modal\r\n        const formModal = () => {\r\n            return(\r\n                <Modal\r\n                show={showFormModal}\r\n                onHide={handleClose}\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n                >\r\n                \r\n                <Modal.Header >\r\n                    <Modal.Title>Please Enter the details</Modal.Title>\r\n                </Modal.Header>\r\n    \r\n                <Modal.Body>\r\n                \r\n                <Form>\r\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicName\">\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control type=\"text\" placeholder=\"Enter Name\" onChange={handleChange(\"studentName\")} value={studentName} />\r\n                    {nameErrorMessage()}\r\n                    </Form.Group>\r\n                \r\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                    <Form.Label>Email</Form.Label>\r\n                    <Form.Control type=\"email\" placeholder=\"Email\" onChange={handleChange(\"email\")} value={email}  />\r\n                    {emailErrorMessage()}\r\n                    </Form.Group>\r\n    \r\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicPhone\">\r\n                    <Form.Label>Phone No.</Form.Label>\r\n                    <Form.Control type=\"text\" placeholder=\"Phone\" onChange={handleChange(\"contactNumber\")} value={contactNumber} />\r\n                    {phoneErrorMessage()}\r\n                    </Form.Group>\r\n                        \r\n                </Form>\r\n              \r\n                </Modal.Body>\r\n                \r\n                <Modal.Footer>\r\n                    \r\n                    <Button variant=\"secondary\" className=\"px-5\" onClick={submitFormDetails}>Submit</Button>\r\n                </Modal.Footer>\r\n                </Modal>\r\n            )\r\n        }\r\n\r\n\r\n        //modal to be displayed after submission\r\n        const afterSubmitModal = () => {\r\n            return(\r\n            <Modal\r\n            show={showAfterSubmitModal}\r\n            onHide={handleCloseAfterSubmit}\r\n            backdrop=\"static\"\r\n            keyboard={false}\r\n            >\r\n               \r\n                <Modal.Body>\r\n                Thank you for participating in NCET admission Test\r\n                </Modal.Body>\r\n\r\n\r\n                <Modal.Footer>\r\n                <Link style={{textDecoration:'none'}} to=\"/\">\r\n                    <Button variant=\"secondary\" className=\"px-5\">\r\n                        \r\n                        <span style={{color:'#fff'}}>Ok</span>\r\n                       \r\n                    </Button>\r\n                </Link>    \r\n                </Modal.Footer>\r\n            </Modal>\r\n            )\r\n        }\r\n\r\n\r\n        //array to store answer values and setting it to const\r\n        const answersarrayUpdater = (qno, answer) => {\r\n            var answerslocalhere = answers\r\n\r\n            var arrayIndex = qno-1;\r\n            // console.log(\"updated array local\",answerslocalhere)\r\n            answerslocalhere[arrayIndex] = answer\r\n            setAnswers(answerslocalhere)\r\n            // console.log(\"updated array \", answers)\r\n            // console.log(\"answers array \", answers)\r\n        }\r\n\r\n\r\n       \r\n\r\n        const QuestionCard = ({text=\"\", a=\"\",b=\"\",c=\"\",d=\"\",qno=\"\"}) => {\r\n\r\n            //for design purpose\r\n            const [optionA, setOptionA] = useState(false)\r\n            const [optionB, setOptionB] = useState(false)\r\n            const [optionC, setOptionC] = useState(false)\r\n            const [optionD, setOptionD] = useState(false)\r\n\r\n         \r\n            //below functions for design \r\n            function onselectA(qno, a) {\r\n                // console.log(\"a selected\")\r\n                answersarrayUpdater(qno, a)\r\n                setOptionA(true)\r\n                setOptionB(false)\r\n                setOptionC(false)\r\n                setOptionD(false)\r\n            }\r\n\r\n            function onselectB(qno, b) {\r\n                // console.log(\"b selected\")\r\n                answersarrayUpdater(qno, b)\r\n                setOptionB(true)\r\n                setOptionA(false)\r\n                setOptionC(false)\r\n                setOptionD(false)\r\n            }\r\n\r\n            function onselectC(qno, c) {\r\n                // console.log(\"c selected\")\r\n                answersarrayUpdater(qno, c)\r\n                setOptionC(true)\r\n                setOptionA(false)\r\n                setOptionB(false)\r\n                setOptionD(false)\r\n            }\r\n\r\n            function onselectD(qno, d) {\r\n                // console.log(\"d selected\")\r\n                answersarrayUpdater(qno, d)\r\n                setOptionD(true)\r\n                setOptionA(false)\r\n                setOptionB(false)\r\n                setOptionC(false)\r\n            }\r\n            \r\n            return(\r\n                <Card  style={{marginTop:'2vh',marginBottom:'2vh', padding:'2em', borderRadius:'5px'}}>\r\n                    <Card.Text>\r\n                        {qno}. {text}\r\n                    </Card.Text>\r\n\r\n                    <Container>\r\n                    <Row>\r\n                        <Col lg={6} md={6} sm={12} xs={12}>\r\n                            <span style={{display:'block'}}>\r\n                                a. <Button variant=\"light\" style={ optionA ? buttonstyle.buttonactive : buttonstyle.buttoninactive } className=\"mx-1 my-1\"  onClick={() => onselectA(qno,a)}> {a} </Button>\r\n                            </span>\r\n                        </Col>\r\n                        \r\n                        <Col lg={6} md={6} sm={12} xs={12}>\r\n                            <span style={{display:'block'}}>\r\n                                b. <Button variant=\"light\" style={ optionB ? buttonstyle.buttonactive : buttonstyle.buttoninactive } className=\"mx-1 my-1\"  onClick={() => onselectB(qno,b)}> {b} </Button>\r\n                            </span>\r\n                        </Col>\r\n                    </Row>    \r\n\r\n                    <Row>\r\n                        <Col lg={6} md={6} sm={12} xs={12}>\r\n                            <span style={{display:'block'}}>\r\n                                c. <Button variant=\"light\" style={ optionC ? buttonstyle.buttonactive : buttonstyle.buttoninactive } className=\"mx-1 my-1\"  onClick={() => onselectC(qno,c)}> {c} </Button>\r\n                            </span>\r\n                        </Col>\r\n                        \r\n                        <Col lg={6} md={6} sm={12} xs={12}>\r\n                            <span style={{display:'block'}}>\r\n                                d. <Button variant=\"light\" style={ optionD ? buttonstyle.buttonactive : buttonstyle.buttoninactive } className=\"mx-1 my-1\"  onClick={() => onselectD(qno,d)}> {d} </Button>\r\n                            </span>\r\n                        </Col>\r\n                 \r\n                    </Row>\r\n                    </Container>\r\n                   \r\n                </Card>\r\n            )\r\n        }\r\n\r\n\r\n\r\n\r\n    \r\n\r\n       \r\n\r\n      \r\n\r\n        function testStatus(){\r\n            if(testValues !== null){\r\n                // console.log(\"testvalues\",testValues)\r\n                var startDate = new Date(String(testValues.startTime)).getTime()\r\n                var endDate = new Date(String(testValues.endTime)).getTime()\r\n                var currentDate = new Date().getTime()\r\n\r\n                if(currentDate >= startDate && endDate >= currentDate ){\r\n                    return \"active\";\r\n                }\r\n                else if(startDate > currentDate ){\r\n                    return \"upcoming\";\r\n                }\r\n                else if(currentDate > endDate){\r\n                    return \"over\"\r\n                }\r\n\r\n            }\r\n            else{\r\n                return \"error\"\r\n            }\r\n        }\r\n\r\n\r\n\r\n        function MyTimer({ expiryTimestamp }) {\r\n            const {\r\n              seconds,\r\n              minutes,\r\n              hours,\r\n              days,\r\n              isRunning,\r\n            } = useTimer({ expiryTimestamp, onExpire: () => console.log(\"\",onSubmit()),  autoStart: true,});\r\n          \r\n          \r\n            return (\r\n                <Container fluid>\r\n                <Container style={{marginTop:\"3vh\",marginBottom:\"3vh\", display:'flex', alignItems:'center', justifyContent:'center'}}>\r\n                    <div>\r\n                        <Row>\r\n                            <Col style={{textAlign:'center'}}>\r\n                                <p style={{fontSize:'1em'}}>Timer</p>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n                                <div style={{fontSize:'1.5em', fontWeight:'bold'}}> {hours}h : {minutes}m : {seconds}s</div>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                </Container>\r\n                </Container>\r\n            );\r\n          }\r\n\r\n          const time = new Date(String(new Date()));\r\n          time.setSeconds(time.getSeconds() + testDuration); \r\n\r\n        \r\n\r\n        const testUpcomingScreen = () => {\r\n            if(testStatus() == \"upcoming\"){\r\n                return(\r\n                    <Container fluid style={{marginBottom:'25vh', marginTop:'25vh'}}>\r\n                        <Container style={{marginTop:'40vh', marginBottom:'30vh'}}>\r\n                        <Row>\r\n                            <Col style={{display:'flex', alignItems:'center', justifyContent:'center'}}>\r\n                                <h1>This test hasn't started yet. Come Back later.</h1>\r\n                            </Col>\r\n                        </Row>\r\n                        </Container>\r\n                    </Container>\r\n                )\r\n            }\r\n        }\r\n\r\n\r\n        const testOverScreen = () => {\r\n            if(testStatus() == \"over\"){\r\n                return(\r\n                    <Container fluid style={{marginBottom:'25vh', marginTop:'25vh'}}>\r\n                        <Container style={{marginTop:'40vh', marginBottom:'30vh'}}>\r\n                        <Row>\r\n                            <Col style={{display:'flex', alignItems:'center', justifyContent:'center'}}>\r\n                                <h1>This test is over</h1>\r\n                            </Col>\r\n                        </Row>\r\n                        </Container>\r\n                    </Container>\r\n                )\r\n            }\r\n        }\r\n\r\n\r\n        const somethingWentWrong = () => {\r\n            if(testStatus() == \"error\"){\r\n                return(\r\n                    <h1>Someting went wrong</h1>\r\n                )\r\n            }\r\n        }\r\n\r\n        const testOngoingScreen = () => {\r\n            if(testStatus() == \"active\"){\r\n                return(\r\n                    <Container fluid style={{marginBottom:'5vh'}}>\r\n                    \r\n                    <MyTimer expiryTimestamp={time}/>\r\n                 \r\n                    <Container style={{marginTop:'5vh', marginBottom:'3vh'}}>\r\n                        <Row>\r\n                            <Col lg={{order: 'first', span: 6}} md={{order: 'first', span: 6}} sm={{order: 'last', span:12}} xs={{order: 'last', span: 12}} style={{display:'flex', flexDirection:'column-reverse', minWidth:'100px' }}><h2 className=\"mt-2 mb-2\"> {testValues.name} </h2></Col>\r\n                            <Col lg={{order: 'last', span: 6}} md={{order: 'last', span: 6}} sm={{order: 'first', span: 12}} xs={{order: 'first', span: 12}} style={{textAlign:'right', minWidth:'100px', display:'block'}} >\r\n                              <span style={{fontSize:'0.9em'}}>  {studentName} </span> <br/>\r\n                              <span style={{fontSize:'0.9em'}}>  {contactNumber} </span> <br/>\r\n                              <span style={{fontSize:'0.9em'}}> {email} </span> \r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n\r\n\r\n                    {formModal()}\r\n        \r\n        \r\n                    <Container>\r\n                    { testValues && testValues.questions.map(question => {\r\n                       \r\n                        return(\r\n                            <QuestionCard qno={question.no} text={question.text} a={question.a} b={question.b} c={question.c} d={question.d} />\r\n                        )\r\n                    })}\r\n                    </Container>\r\n        \r\n                    <Container style={{display:'flex', alignItems:'center', justifyContent:'center', marginTop:'3vh'}}>\r\n                        <Button onClick={onSubmit} variant=\"secondary\" className=\"px-5\" size=\"lg\" block>Submit</Button>\r\n                    </Container>\r\n    \r\n                    \r\n                    </Container>\r\n                )\r\n            }\r\n        }\r\n\r\n\r\n        if(loading == true){\r\n            return(\r\n                <LoadingScreen />\r\n            )\r\n        }\r\n\r\n\r\n       \r\n       return(\r\n           <>\r\n\r\n           {testStatus() == \"upcoming\" && (\r\n            testUpcomingScreen()\r\n           )}\r\n           \r\n           {testStatus() == \"over\" && (\r\n            testOverScreen()\r\n           )}\r\n           \r\n           \r\n            {testOngoingScreen()}\r\n            \r\n            {afterSubmitModal()}\r\n           \r\n           {somethingWentWrong()}\r\n\r\n\r\n            <FooterBar />\r\n           </>\r\n       )\r\n\r\n        \r\n\r\n\r\n\r\n}\r\n\r\nexport default SubmitTest;\r\n\r\nconst buttonstyle = {\r\n    buttonactive:{\r\n        backgroundColor:\"#bbbbbb\",\r\n        minWidth:'50%',\r\n        textAlign:'left',\r\n        border: '2px solid #bbbbbb'\r\n    },\r\n    buttoninactive:{\r\n        backgroundColor:\"#f6f6f6\",\r\n        minWidth:'50%',\r\n        textAlign:'left',\r\n        border: '2px solid #bbbbbb'\r\n    }\r\n}","//modules import\r\nimport React from 'react';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\r\n\r\n//custom created route import\r\nimport AdminRoute from './customRoutes/AdminRoute'\r\n\r\n//admin pages import\r\nimport AdminDashboardPage from './pages/adminDashboard/AdminDashboardPage'\r\nimport CreateTestPage from './pages/adminDashboard/CreateTestPage'\r\nimport ViewAllSubmissionsPage from './pages/adminDashboard/ViewAllSubmissionsPage'\r\nimport ViewSubmissionsByTest from './pages/adminDashboard/ViewSubmissionsByTest'\r\nimport ViewAllTestsPage from './pages/adminDashboard/ViewAllTestsPage'\r\nimport DeleteTestsPage from './pages/adminDashboard/DeleteTestsPage'\r\n\r\n//public pages import\r\nimport Home from './pages/homepage/HomePage'\r\nimport Signup from './pages/signup/Signup'\r\nimport Signin from './pages/signin/Signin'\r\nimport SubmitTest from './pages/userpage/SubmitTest'\r\n\r\n\r\n\r\nconst Routes = () => {\r\n    console.log(\"env\", process.env)\r\n    return(\r\n        <BrowserRouter>\r\n            <Switch>\r\n            \r\n                <Route path=\"/\" exact component={Home} />\r\n                <Route path=\"/signup\" exact component={Signup} />\r\n                <Route path=\"/signin\" exact component={Signin} />\r\n                <Route path=\"/test/submit/:testId\" exact component={SubmitTest} />\r\n\r\n                <AdminRoute path=\"/admin/dashboard\" exact component={AdminDashboardPage} />\r\n                <AdminRoute path=\"/admin/createtest\" exact component={CreateTestPage} />\r\n                <AdminRoute path=\"/admin/submissions/all\" exact component={ViewAllSubmissionsPage} />\r\n                <AdminRoute path=\"/admin/tests/all\" exact component={ViewAllTestsPage} />\r\n                <AdminRoute path=\"/admin/tests/delete\" exact component={DeleteTestsPage} />\r\n                <AdminRoute path=\"/test/submissions/:testId\" exact component={ViewSubmissionsByTest} />\r\n                \r\n                \r\n            </Switch>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default Routes;","import React from 'react'\r\nimport Routes from \"./Routes\"\r\nimport ReactDOM from 'react-dom'\r\n\r\nReactDOM.render(<Routes />, document.getElementById(\"root\"))","export const API = process.env.REACT_APP_BACKEND"],"sourceRoot":""}